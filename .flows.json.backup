[
    {
        "id": "c764f51b8859588d",
        "type": "tab",
        "label": "ElecPrices",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8475ab9.3d26058",
        "type": "tab",
        "label": "Web App Socket Router",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a858ad3a.95706",
        "type": "tab",
        "label": "Web Launchers",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9c854ea3.68416",
        "type": "tab",
        "label": "Web Apps 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b76c0793b15a73b9",
        "type": "tab",
        "label": "Power Mon apps",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e17f7487.2a78e8",
        "type": "tab",
        "label": "blinky-lite-dataLogger",
        "disabled": false,
        "info": ""
    },
    {
        "id": "90f83725.6dae08",
        "type": "tab",
        "label": "blinky-lite-Utility Apps",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dc20c6e0.0feb98",
        "type": "tab",
        "label": "blinky-lite-scalarDevice",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b94899c9.b16088",
        "type": "tab",
        "label": "blinky-lite-vectorDevice",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ca529822.9112f8",
        "type": "subflow",
        "name": "HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "99bb1519.85fc18"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "f22a539a.a67b3",
        "type": "subflow",
        "name": "Core HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "48e0f477.ea0e4c"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "8341090a.df9758",
        "type": "subflow",
        "name": "App HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "a3eb7ad8.27c498"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "e13648d6.d698c8",
        "type": "subflow",
        "name": "Log Setting",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 160,
                "wires": [
                    {
                        "id": "347f36fe.94ed7a"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "df70f6f.9e4ed08",
        "type": "subflow",
        "name": "Scalar Device Menu",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "ddfc02aa.3af39"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 520,
                "y": 80,
                "wires": [
                    {
                        "id": "e98d4d33.bcca2",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "2dba0745.a98d98",
        "type": "subflow",
        "name": "Role Check",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 120,
                "wires": [
                    {
                        "id": "3deefd6d.1dde92"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1120,
                "y": 60,
                "wires": [
                    {
                        "id": "f3358361.19029",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1120,
                "y": 120,
                "wires": [
                    {
                        "id": "f728a8f0.ad8b68",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "2d027d69.1fdeb2",
        "type": "subflow",
        "name": "App Role Check",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "3966deae.453262"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 60,
                "wires": [
                    {
                        "id": "3966deae.453262",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "495f0879.c831c8",
        "type": "subflow",
        "name": "Core Role Check",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 80,
                "wires": [
                    {
                        "id": "8e411315.2b09f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 40,
                "wires": [
                    {
                        "id": "8e411315.2b09f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "fee416c.fb205e8",
        "type": "subflow",
        "name": "Action Permission Check",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 80,
                "wires": [
                    {
                        "id": "54f691be.e6b47"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 760,
                "y": 40,
                "wires": [
                    {
                        "id": "92d40c38.2026a",
                        "port": 0
                    }
                ]
            },
            {
                "x": 760,
                "y": 120,
                "wires": [
                    {
                        "id": "92d40c38.2026a",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "3eac550e9ccb56f3",
        "type": "subflow",
        "name": "Widget Html",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "8860e7e30cb43f4c"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "6ad7c930.1a06b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Chill Detector",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "3c1c519e.83272e",
        "type": "websocket-listener",
        "path": "/scalarArchivePlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "8d993328.9d4c4",
        "type": "websocket-listener",
        "path": "/scalarPlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "3c933d8a.80b7a2",
        "type": "websocket-listener",
        "path": "/vectorPlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "869ccabd.6400e8",
        "type": "websocket-listener",
        "path": "/vectorArchivePlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "3d5cd97c.77df96",
        "type": "websocket-listener",
        "path": "/scalarViewer/websocket",
        "wholemsg": "false"
    },
    {
        "id": "84d80994.260508",
        "type": "mqtt-broker",
        "name": "MQTT Broker",
        "broker": "$(MQTTSERVERIP)",
        "port": "1883",
        "clientid": "$(MQTTCLIENTID)",
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "2b65833e.87911c",
        "type": "websocket-listener",
        "path": "/scalarAlarmScanner/websocket",
        "wholemsg": "false"
    },
    {
        "id": "9cd5ff5e.caf86",
        "type": "mongodb3",
        "uri": "$(MONGODBIP)",
        "name": "blinky-lite",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "23623a1c.e4ce46",
        "type": "nexmobasic"
    },
    {
        "id": "6acefdd9.69f124",
        "type": "JsonWebToken_config",
        "name": "blinky-lite-core-jwt-key",
        "secret": "$(JWTKEYSECRET)"
    },
    {
        "id": "47794345.2e8b8c",
        "type": "websocket-listener",
        "path": "/access-log/websocket",
        "wholemsg": "false"
    },
    {
        "id": "fcd0f0f1.e1a0f",
        "type": "websocket-listener",
        "path": "/settings-log/websocket",
        "wholemsg": "false"
    },
    {
        "id": "9375a6d1.3e14e8",
        "type": "websocket-listener",
        "path": "/apps/websocket",
        "wholemsg": "false"
    },
    {
        "id": "c9f0eb6c.93d8d8",
        "type": "websocket-listener",
        "path": "/blinky-modbus/websocket",
        "wholemsg": "false"
    },
    {
        "id": "1f9918d2691e7340",
        "type": "websocket-listener",
        "path": "/blinky-power-mon/websocket",
        "wholemsg": "false"
    },
    {
        "id": "1ea60968c67f4c49",
        "type": "websocket-listener",
        "path": "/blinky-stepper/websocket",
        "wholemsg": "false"
    },
    {
        "id": "874828cc9941fa30",
        "type": "websocket-listener",
        "path": "/blinky-beadpull/websocket",
        "wholemsg": "false"
    },
    {
        "id": "3edb36a2de1c87da",
        "type": "websocket-listener",
        "path": "/blinky-scale/websocket",
        "wholemsg": "false"
    },
    {
        "id": "c18cc87702466083",
        "type": "websocket-listener",
        "path": "/blinky-power-mon-widget/websocket",
        "wholemsg": "false"
    },
    {
        "id": "5a549bad8aa4e762",
        "type": "websocket-listener",
        "path": "/blinky-power-mon-open/websocket",
        "wholemsg": "false"
    },
    {
        "id": "f867b4b695fa781a",
        "type": "websocket-listener",
        "path": "/espotPrice/websocket",
        "wholemsg": "false"
    },
    {
        "id": "d8aea031.7f89d",
        "type": "http in",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarPlotter",
        "url": "/scalarPlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 40,
        "wires": [
            [
                "83301a46.e7b368"
            ]
        ]
    },
    {
        "id": "761db118.51922",
        "type": "websocket in",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarPlotter",
        "server": "8d993328.9d4c4",
        "client": "",
        "x": 110,
        "y": 320,
        "wires": [
            [
                "e6871441.93cb88"
            ]
        ]
    },
    {
        "id": "472ae883.652f08",
        "type": "websocket out",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarPlotter",
        "server": "8d993328.9d4c4",
        "client": "",
        "x": 1750,
        "y": 300,
        "wires": []
    },
    {
        "id": "f445d1dd.72e4",
        "type": "switch",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDeviceList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getNameList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getAttrList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDeviceValues",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getArchiveValues",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sendSettingToMqtt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sendConfigToMqtt",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 550,
        "y": 380,
        "wires": [
            [
                "7ef5d7af.5aeed8"
            ],
            [
                "80b3fbd.ba21908"
            ],
            [
                "ccb4a4a2.49a2e8"
            ],
            [
                "8e79cfec.1347"
            ],
            [
                "98c9d4ad.3f54f8"
            ],
            [
                "4819746c.65db8c"
            ],
            [
                "90ff25e663c0cc27"
            ]
        ]
    },
    {
        "id": "7ef5d7af.5aeed8",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getDeviceList",
        "func": "var newMsg = \n{\n    topic           : 'getDeviceList',\n    userID          : msg.userID,\n    payload         : [{},{projection:{deviceType:1, _id:0}}]\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 300,
        "wires": [
            [
                "699dce99.1fe68"
            ]
        ]
    },
    {
        "id": "b6d95279.1b494",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">Tr</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Device</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Prop</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Attr</span></td>\n                <td width=\"8%\" align=\"center\"><span class=\"tableHeading \">value</span></td>\n                <td width=\"7%\" align=\"center\"><span class=\"tableHeading \">unit</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">y1</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">y2</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">pt</span></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">1</span></td>\n                <td>\n                    <select class=\"custom-select \" id=\"deviceSelect0\" onchange=\"deviceSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"propSelect0\" onchange=\"propSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText \" id=\"valueSelect0\"></span></td>\n                <td align=\"center\"><span class=\"tableText \" id=\"unitSelect0\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_0y1\" type=\"radio\" name=\"plotAxis_0\"  value=\"y1\"  onchange='selectAxis(0,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_0y2\" type=\"radio\" name=\"plotAxis_0\"  value=\"y2\"  onchange='selectAxis(0,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_0\" type=\"checkbox\" name=\"pts_0\"  value=\"pts\"  onchange='selectPts(0)' checked ></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">2</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect1\" onchange=\"deviceSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect1\" onchange=\"nameSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect1\" onchange=\"propSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect1\" onchange=\"attrSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect1\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect1\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_1y1\" type=\"radio\" name=\"plotAxis_1\"  value=\"y1\"  onchange='selectAxis(1,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_1y2\" type=\"radio\" name=\"plotAxis_1\"  value=\"y2\"  onchange='selectAxis(1,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_1\" type=\"checkbox\" name=\"pts_1\"  value=\"pts\"  onchange='selectPts(1)' checked ></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">3</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect2\" onchange=\"deviceSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect2\" onchange=\"nameSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect2\" onchange=\"propSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect2\" onchange=\"attrSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect2\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect2\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_2y1\" type=\"radio\" name=\"plotAxis_2\"  value=\"y1\"  onchange='selectAxis(2,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_2y2\" type=\"radio\" name=\"plotAxis_2\"  value=\"y2\"  onchange='selectAxis(2,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_2\" type=\"checkbox\" name=\"pts_2\"  value=\"pts\"  onchange='selectPts(2)' checked ></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">4</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect3\" onchange=\"deviceSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect3\" onchange=\"nameSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect3\" onchange=\"propSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect3\" onchange=\"attrSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect3\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect3\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_3y1\" type=\"radio\" name=\"plotAxis_3\"  value=\"y1\"  onchange='selectAxis(3,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_3y2\" type=\"radio\" name=\"plotAxis_3\"  value=\"y2\"  onchange='selectAxis(3,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_3\" type=\"checkbox\" name=\"pts_3\"  value=\"pts\"  onchange='selectPts(3)' checked ></td>\n            </tr>\n        </table>\n    </div>\n    <div>\n        <div class='row'>\n            <div class='col-md-6'>\n                <table>\n                    <tr>\n                        <td width=50%  align=\"center\"class=\"tableHeading\">Span</td>\n                        <td width=50% align=\"center\"></td>\n                    </tr>\n                    <tr>\n                         <td align=\"center\">\n                            <input class=\"form-control\" id=\"plotLength\" type=\"text\" value=\"300\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button class=\"btn jumbotron-button\" id=\"startPlotButton\" type=\"button\" onclick=\"startPlot()\">Start Plot</button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n        <div class='row'>\n            <div class='col-md-12'>\n                <div class='card'>\n                    <p class='card-title'>Time Plot</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"timePlot\" width=\"100%\" class=\"plot\"></div> \n                    </div>\n                </div>\n            </div>\n        </div>\n     </div>",
        "output": "str",
        "x": 1190,
        "y": 40,
        "wires": [
            [
                "72941646.0206b8"
            ]
        ]
    },
    {
        "id": "2b6693c7.697dbc",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "parse device list",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nvar deviceList = [];\ndeviceList[0] = msg.payload[0].deviceType;\nif (numDevices > 1)\n{\n    for (var idevice = 1; idevice < numDevices; ++idevice)\n    {\n        var deviceAlreadyFound = false;\n        for (ii = 0; ii < idevice; ++ii)\n        {\n            if (msg.payload[idevice].deviceType == deviceList[ii]) deviceAlreadyFound = true;\n        }\n        if (!deviceAlreadyFound) deviceList[idevice] = msg.payload[idevice].deviceType;\n    }\n}\n\nreturn {\n    topic:'getDeviceList',\n    payload:{\n        topic           : 'getDeviceList',\n        payload         : deviceList,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 300,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "ccb4a4a2.49a2e8",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getAttrList",
        "func": "var projectionFilter =  {projection:{id:0}};\nvar newMsg = \n{\n    topic           : 'getAttrList',\n    userID          : msg.userID,\n    payload         : [{$and : [{deviceType:msg.payload.deviceType}, {name:msg.payload.name}]}, projectionFilter],\n    prop            : msg.payload.prop,\n    name            : msg.payload.name,\n    deviceType      : msg.payload.deviceType,\n    trace           : msg.payload.trace\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 720,
        "y": 380,
        "wires": [
            [
                "699dce99.1fe68"
            ]
        ]
    },
    {
        "id": "d206e66b.d73eb8",
        "type": "switch",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDeviceList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getNameList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getAttrList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDeviceValues",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1210,
        "y": 380,
        "wires": [
            [
                "2b6693c7.697dbc"
            ],
            [
                "818972ac.61492"
            ],
            [
                "a73ef173.723ab"
            ],
            [
                "dfbf9465.6e7518"
            ]
        ]
    },
    {
        "id": "a73ef173.723ab",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "parse attrList",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nif (numDevices < 1) return null;\nvar device = msg.payload[0];\nvar attrList = [];\nvar keys = Object.keys(device);\nfor (var ii = 0; ii < keys.length; ++ii)\n{\n    if (device[keys[ii]].hasOwnProperty('type'))\n    {\n        if (device[keys[ii]].type == 'scalar')\n        {\n            if (device[keys[ii]].action == msg.prop)\n            {\n                attrList.push(keys[ii]);\n            }\n        }\n    }\n}\nif (attrList.length < 1) return null;\nreturn {\n    topic:'getAttrList',\n    payload:{\n        topic           : 'getAttrList',\n        userID          : msg.userID,\n        prop            : msg.prop,\n        name            : msg.name,\n        deviceType      : msg.deviceType,\n        trace           : msg.trace,\n        attrList        : attrList\n\n    }\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1350,
        "y": 380,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "7b9e1c55.c445c4",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "javascript.specialscalar",
        "field": "payload.javascript.specialscalar",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var plotStarted = false;\n        var plotTraces = [];\n        var plotStartTime = 0;\n        var plotLength = 0;\n        var plotLayout = {};\n \n        function onDocumentReadySpecial()\n        {\n        }\n        function onWebSocketMessageSpecial(msg)\n        {\n        }\n        function loadDeviceValuesSpecial(data)\n        {\n            upDatePlot();\n        }\n        function clearAttrOptionListSpecial(itrace)\n        {\n        }\n        function attrSelectedSpecial(itrace)\n        {\n        }\n\n        function selectAxis(itrace,axis)\n        {\n            devInfo[itrace].axis  = axis;\n        }\n        function selectPts(itrace)\n        {\n            devInfo[itrace].pts = !devInfo[itrace].pts;\n        }\n        function startPlot()\n        {\n            if (!plotStarted)\n            {\n                $(\"#startPlotButton\").html('Stop Plot');\n            }\n            else\n            {\n                $(\"#startPlotButton\").html('Start Plot');\n            }\n            plotStarted = !plotStarted;\n            if (!plotStarted)\n            {\n                plotTraces = [];\n                for (var itrace = 0; itrace < numTraces; ++itrace)\n                {\n                    deviceSelect[itrace].disabled = false;\n                    nameSelect[itrace].disabled = false;\n                    propSelect[itrace].disabled = false;\n                    attrSelect[itrace].disabled = false;\n                    $('#plotAxis_' + itrace.toString() + 'y1').prop( \"disabled\", false );\n                    $('#plotAxis_' + itrace.toString() + 'y2').prop( \"disabled\", false );\n                    $('#pts_' + itrace.toString()).prop( \"disabled\", false );\n                }\n                return;\n            }\n            plotTraces = [];\n            \n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                deviceSelect[itrace].disabled = true;\n                nameSelect[itrace].disabled = true;\n                propSelect[itrace].disabled = true;\n                attrSelect[itrace].disabled = true;\n                $('#plotAxis_' + itrace.toString() + 'y1').prop( \"disabled\", true );\n                $('#plotAxis_' + itrace.toString() + 'y2').prop( \"disabled\", true );\n                $('#pts_' + itrace.toString()).prop( \"disabled\", true );\n                if (devInfo[itrace].name.length > 0)\n                {\n                    var modeType = 'lines';\n                    if (devInfo[itrace].pts) modeType = 'markers';\n                    var trace =  \n                    {\n                        x: [],\n                        y: [],\n                        name: devInfo[itrace].axis + ' ' + devInfo[itrace].deviceType + '.' + devInfo[itrace].name + '.' + devInfo[itrace].prop + '.' + devInfo[itrace].attr + ' (' + devInfo[itrace].device[devInfo[itrace].attr].unit + ')',\n                        yaxis: devInfo[itrace].axis,\n                        type: 'scatter',\n                        mode: modeType\n                    };\n                    plotTraces.push(trace);\n                }\n            }\n            plotLayout =\n            {\n                showlegend: true,\n                legend: {x: 0,y: 1.35},\n                xaxis       : {type: 'date' },\n                yaxis: {title: 'y1'},\n                yaxis2: {title: 'y2',overlaying: 'y',side: 'right'}\n            };\n\n            plotStartTime = new Date().getTime();\n            Plotly.newPlot('timePlot', plotTraces, plotLayout);\n            plotLength = Number($(\"#plotLength\").val());\n        }\n        function upDatePlot()\n        {\n            if (!plotStarted) return;\n            var now = new Date().getTime();\n            var plotBeginning = now - plotLength * 1000;\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (devInfo[itrace].name.length > 0)\n                {\n                    var removeDone = false;\n                    while(!removeDone)\n                    {\n                        if (plotTraces[traceCount].x[0] < plotBeginning)\n                        {\n                            plotTraces[traceCount].x.shift();\n                            plotTraces[traceCount].y.shift();\n                        }\n                        else\n                        {\n                            removeDone = true;\n                        }\n                    }\n                    plotTraces[traceCount].x.push(now);\n                    plotTraces[traceCount].y.push(devInfo[itrace].device[devInfo[itrace].attr].value);\n                    ++traceCount;\n                }\n            }\n            Plotly.newPlot('timePlot', plotTraces, plotLayout);\n        }",
        "output": "str",
        "x": 670,
        "y": 40,
        "wires": [
            [
                "da88a362.516c9"
            ]
        ]
    },
    {
        "id": "72c58cab.a3c494",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Check Archive interval",
        "func": "msg.device.lastArchive = msg.payload.lastArchive;\nmsg.device.timeStamp = new Date().getTime();\nvar keys = Object.keys(msg.device);\nfor (var ii = 0; ii < keys.length; ++ii) msg.payload[keys[ii]] = msg.device[keys[ii]];\n\nvar archiveMsg = null;\nif ( ( (msg.payload.timeStamp - msg.payload.lastArchive) > msg.payload.arcPeriod) || (msg.payload.archiveNow > 0) )\n{\n    msg.payload.lastArchive  = msg.payload.timeStamp;\n    msg.device.lastArchive = msg.payload.lastArchive;\n    var archiveDevice = JSON.parse(JSON.stringify(msg.device));\n    delete archiveDevice.arcPeriod;\n    delete archiveDevice.lastArchive;\n    keys = Object.keys(archiveDevice);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (archiveDevice[keys[ii]].hasOwnProperty('type'))\n        {\n            \n            archiveDevice[keys[ii]] = JSON.parse(JSON.stringify(msg.device[keys[ii]].value));\n        }\n    }\n    archiveMsg = {topic:'archiveData',payload: archiveDevice};\n}\nvar updateDeviceMsg = \n{\n    topic:'updateDevice',\n    payload:\n    [\n        {\n            $and   :    \n            [\n                {\n                    deviceType : msg.payload.deviceType\n                },\n                {\n                    name : msg.payload.name\n                }\n            ]\n        }, \n        msg.payload\n    ]\n};\nreturn [updateDeviceMsg,archiveMsg];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 180,
        "wires": [
            [
                "bc2507b7.46f4b8"
            ],
            [
                "621ab8d1.42e078"
            ]
        ]
    },
    {
        "id": "662fe630.391fd8",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Scalar Plotter",
        "output": "str",
        "x": 1070,
        "y": 40,
        "wires": [
            [
                "b6d95279.1b494"
            ]
        ]
    },
    {
        "id": "8a439be9.030ab8",
        "type": "subflow:ca529822.9112f8",
        "z": "f22a539a.a67b3",
        "name": "",
        "x": 410,
        "y": 80,
        "wires": []
    },
    {
        "id": "e020461d.044ee8",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Check if Device Exists",
        "func": "function isEmpty(obj) \n{\n    for(var key in obj) \n    {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\nif (isEmpty(msg.payload)) return null;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1200,
        "y": 100,
        "wires": [
            [
                "72c58cab.a3c494"
            ]
        ]
    },
    {
        "id": "731fcbcd.96f0a4",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "findOne",
        "x": 970,
        "y": 100,
        "wires": [
            [
                "e020461d.044ee8"
            ]
        ]
    },
    {
        "id": "bc2507b7.46f4b8",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "update",
        "x": 1190,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "621ab8d1.42e078",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "insertOne",
        "x": 1200,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "699dce99.1fe68",
        "type": "mongodb3 in",
        "z": "dc20c6e0.0feb98",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "find.toArray",
        "x": 1010,
        "y": 380,
        "wires": [
            [
                "d206e66b.d73eb8"
            ]
        ]
    },
    {
        "id": "8e79cfec.1347",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getDeviceValues",
        "func": "var projectionFilter =  {projection:{_id:0}};\nvar newMsg = \n{\n    topic           : 'getDeviceValues',\n    userID          : msg.userID,\n    payload         : [msg.payload.queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 420,
        "wires": [
            [
                "699dce99.1fe68"
            ]
        ]
    },
    {
        "id": "dfbf9465.6e7518",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "parse getDeviceValues",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nif (numDevices < 1) return null;\nvar devices = [];\nfor (var idev = 0; idev < numDevices; ++idev) devices[idev] = msg.payload[idev];\nreturn {\n    topic:'getDeviceValues',\n    payload:{\n        topic           : 'getDeviceValues',\n        userID          : msg.userID,\n        devices         : devices,\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1380,
        "y": 420,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "68b75168.59f04",
        "type": "http in",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarArchivePlotter",
        "url": "/scalarArchivePlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "bc63b66b.867d18"
            ]
        ]
    },
    {
        "id": "2857fd6b.987de2",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">Tr</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Device</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Prop</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Attr</span></td>\n                <td width=\"8%\" align=\"center\"><span class=\"tableHeading \">value</span></td>\n                <td width=\"7%\" align=\"center\"><span class=\"tableHeading \">unit</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">y1</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">y2</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">pt</span></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv0' href='' target='_blank' download=\"data0.csv\" class=\"csv-linked\">1</a>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"deviceSelect0\" onchange=\"deviceSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"propSelect0\" onchange=\"propSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText \" id=\"valueSelect0\"></span></td>\n                <td align=\"center\"><span class=\"tableText \" id=\"unitSelect0\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_0y1\" type=\"radio\" name=\"plotAxis_0\"  value=\"y1\"  onchange='selectAxis(0,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_0y2\" type=\"radio\" name=\"plotAxis_0\"  value=\"y2\"  onchange='selectAxis(0,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_0\" type=\"checkbox\" name=\"pts_0\"  value=\"pts\"  onchange='selectPts(0)' checked ></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv1' href='' target='_blank' download=\"data1.csv\" class=\"csv-linked\">2</a>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect1\" onchange=\"deviceSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect1\" onchange=\"nameSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect1\" onchange=\"propSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect1\" onchange=\"attrSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect1\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect1\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_1y1\" type=\"radio\" name=\"plotAxis_1\"  value=\"y1\"  onchange='selectAxis(1,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_1y2\" type=\"radio\" name=\"plotAxis_1\"  value=\"y2\"  onchange='selectAxis(1,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_1\" type=\"checkbox\" name=\"pts_1\"  value=\"pts\"  onchange='selectPts(1)' checked ></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv2' href='' target='_blank' download=\"data2.csv\" class=\"csv-linked\">3</a>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect2\" onchange=\"deviceSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect2\" onchange=\"nameSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect2\" onchange=\"propSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect2\" onchange=\"attrSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect2\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect2\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_2y1\" type=\"radio\" name=\"plotAxis_2\"  value=\"y1\"  onchange='selectAxis(2,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_2y2\" type=\"radio\" name=\"plotAxis_2\"  value=\"y2\"  onchange='selectAxis(2,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_2\" type=\"checkbox\" name=\"pts_2\"  value=\"pts\"  onchange='selectPts(2)' checked ></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv3' href='' target='_blank' download=\"data3.csv\" class=\"csv-linked\">4</a>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect3\" onchange=\"deviceSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect3\" onchange=\"nameSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect3\" onchange=\"propSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect3\" onchange=\"attrSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect3\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect3\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_3y1\" type=\"radio\" name=\"plotAxis_3\"  value=\"y1\"  onchange='selectAxis(3,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_3y2\" type=\"radio\" name=\"plotAxis_3\"  value=\"y2\"  onchange='selectAxis(3,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_3\" type=\"checkbox\" name=\"pts_3\"  value=\"pts\"  onchange='selectPts(3)' checked ></td>\n            </tr>\n        </table>\n    </div>\n    <div id='plotSetup'>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotSetupTable'>\n                    <tr>\n                        <td width=10% align=\"center\" class=\"tableHeading\">Max Plot Pts</td>\n                        <td width=20% align=\"center\" class=\"tableHeading\">Start</td>\n                        <td width=20% align=\"center\" class=\"tableHeading\">Stop</td>\n                        <td width=10% align=\"center\"></td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"maxPtsToPlot\" type=\"text\" value=\"500\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getArchiveData()\">Get Data</button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n       </div>\n        <div class='row'>\n            <div class='col-md-12'>\n                <div class='card' id=\"timePlotCard\" >\n                    <p class='card-title'>Time Plot</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"timePlot\" width=\"100%\" class=\"plot\"></div> \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 1190,
        "y": 100,
        "wires": [
            [
                "bb160287.a4943"
            ]
        ]
    },
    {
        "id": "3662caf5.96ce96",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "javascript.specialscalar",
        "field": "payload.javascript.specialscalar",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var startDate = 0;\n        var stopDate = 0;\n        var csvFile = [];\n        var archiveRequestList = [];\n        var archiveList = [];\n\n        function onDocumentReadySpecial()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#csv'+ itrace.toString()).removeAttr(\"href\");\n                $('#csv'+ itrace.toString()).css('color', 'black');\n                $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n                $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n                csvFile[itrace] = null;\n\n            }\n            var now = new Date();\n            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n            $('#timePlotCard').hide();\n        }\n        function onWebSocketMessageSpecial(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'getArchiveValues':\n                    archiveList.push(msg.payload);\n                    if (archiveRequestList.length > 0)\n                    {\n                        getArchiveValues();\n                    }\n                    else\n                    {\n                        loadArchiveValues();\n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n        function loadDeviceValuesSpecial(data)\n        {\n        }\n        function clearAttrOptionListSpecial(itrace)\n        {\n            $('#csv'+ itrace.toString()).removeAttr(\"href\");\n            $('#csv'+ itrace.toString()).css('color', 'black');\n            $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n            $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n       }\n        function attrSelectedSpecial(itrace)\n        {\n            $('#csv'+ itrace.toString()).removeAttr(\"href\");\n            $('#csv'+ itrace.toString()).css('color', 'black');\n            $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n            $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n        }\n        function selectAxis(itrace,axis)\n        {\n            devInfo[itrace].axis  = axis;\n        }\n        function selectPts(itrace)\n        {\n            devInfo[itrace].pts = !devInfo[itrace].pts;\n        }\n        function getArchiveData()\n        {\n            archiveRequestList = [];\n            archiveList = [];\n            startDate = new Date($( \"#startDate\" ).val()).getTime();\n            stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (devInfo[itrace].name.length > 0) \n                {\n                    archiveRequestList[traceCount] = \n                    {\n                        deviceType  : devInfo[itrace].deviceType, \n                        name        : devInfo[itrace].name, \n                        prop        : devInfo[itrace].prop, \n                        attr        : devInfo[itrace].attr,\n                        startDate   : startDate, \n                        stopDate    : stopDate,\n                        itrace      : itrace\n                    };\n                    ++traceCount;\n                }\n            }\n            if (traceCount < 1) return;\n            $('#plotSetupTable').hide();\n            $('#timePlotCard').hide();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#csv'+ itrace.toString()).removeAttr(\"href\");\n                $('#csv'+ itrace.toString()).css('color', 'black');\n                $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n                $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n            }\n            messageDialog('Alert', 'Wait!', 'Requesting data ...');\n            getArchiveValues();\n\n        }\n        function getArchiveValues()\n        {\n            var maxPtsToPlot = Number($( \"#maxPtsToPlot\" ).val());\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0],\n                    maxPtsToPlot: maxPtsToPlot\n                };\n            sendActionMsg('getArchiveValues', 'readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function loadArchiveValues()\n        {\n            $( \"#messageDialog\" ).dialog('close');\n            $('#plotSetupTable').show();\n            var plotTraces = [];\n            for (ii = 0; ii < archiveList.length; ++ii)\n            {\n                itrace = archiveList[ii].itrace;\n                var modeType = 'lines';\n                if (devInfo[itrace].pts) modeType = 'markers';\n                var trace =  \n                {\n                    x: [],\n                    y: [],\n                    name: devInfo[itrace].axis + ' ' + devInfo[itrace].deviceType + '.' + devInfo[itrace].name + '.' + devInfo[itrace].prop + '.' + devInfo[itrace].attr + ' (' + devInfo[itrace].device[devInfo[itrace].attr].unit + ')',\n                    yaxis: devInfo[itrace].axis,\n                    type: 'scatter',\n                    mode: modeType\n                }\n                for (var ipt = 0; ipt < archiveList[ii].trace.length; ++ipt)\n                {\n                    trace.x[ipt] = archiveList[ii].trace[ipt].timeStamp;\n                    trace.y[ipt] = archiveList[ii].trace[ipt].value;\n                }\n                plotTraces.push(trace);\n                makeCsvFile(ii);\n            }\n            var plotLayout =\n            {\n                showlegend: true,\n                legend: {x: 0,y: 1.35},\n                xaxis       : {type: 'date' },\n                yaxis: {title: 'y1'},\n                yaxis2: {title: 'y2',overlaying: 'y',side: 'right'}\n            };\n            $('#timePlotCard').show();\n            Plotly.newPlot('timePlot', plotTraces, plotLayout);\n        }\n        function makeCsvFile(ii)\n        {\n            var dataString = '';\n            var startT = archiveList[ii].trace[0].timeStamp;\n            var itrace = archiveList[ii].itrace;\n        \n            dataString = dataString + 'Device,' + devInfo[itrace].deviceType + ',' + devInfo[itrace].name + ',' + devInfo[itrace].prop + ',' + devInfo[itrace].attr  +'\\n';\n            dataString = dataString + 'StartDate,' + new Date(startT).toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}) + '\\n';\n            dataString = dataString + 'StartDate (mS),' + startT.toString() + '\\n';\n            dataString = dataString + 'Time (sec), Value (' + devInfo[itrace].device[devInfo[itrace].attr].unit + ')\\n';\n            for (var ipt = 0; ipt < archiveList[ii].trace.length; ++ipt)\n            {\n                var x = (archiveList[ii].trace[ipt].timeStamp - startT) / 1000;\n                var y = archiveList[ii].trace[ipt].value;\n                dataString = dataString + x.toString() + ',' + y.toString() + '\\n';\n            }\n            var data = new Blob([dataString], {type: 'text/plain'});\n        \n            // If we are replacing a previously generated file we need to\n            // manually revoke the object URL to avoid memory leaks.\n            if (csvFile[itrace] !== null) {\n              window.URL.revokeObjectURL(csvFile[itrace]);\n            }\n        \n            csvFile[itrace] = window.URL.createObjectURL(data);\n            // returns a URL you can use as a href\n            $('#csv'+ itrace.toString()).css('color', 'blue');\n            $('#csv'+ itrace.toString()).css('text-decoration', 'underline');\n            $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n            $('#csv'+ itrace.toString()).attr(\"href\", csvFile[itrace]);\n            $('#csv'+ itrace.toString()).attr(\"download\", devInfo[itrace].deviceType + '-' + devInfo[itrace].name + '-' + devInfo[itrace].prop + '-' + devInfo[itrace].attr + '.csv');\n        \n        }\n",
        "output": "str",
        "x": 670,
        "y": 100,
        "wires": [
            [
                "7d3145f.8eb39bc"
            ]
        ]
    },
    {
        "id": "c767ad27.32df7",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Scalar Archive Plotter",
        "output": "str",
        "x": 1070,
        "y": 100,
        "wires": [
            [
                "2857fd6b.987de2"
            ]
        ]
    },
    {
        "id": "e4e0d070.30842",
        "type": "websocket in",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarArchivePlotter",
        "server": "3c1c519e.83272e",
        "client": "",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "e6871441.93cb88"
            ]
        ]
    },
    {
        "id": "2672654d.766b0a",
        "type": "websocket out",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarArchivePlotter",
        "server": "3c1c519e.83272e",
        "client": "",
        "x": 1780,
        "y": 360,
        "wires": []
    },
    {
        "id": "1f6a9f15.3d80c1",
        "type": "link out",
        "z": "dc20c6e0.0feb98",
        "name": "Scalar DB Info",
        "links": [
            "23adba5a.1575e6"
        ],
        "x": 1535,
        "y": 360,
        "wires": []
    },
    {
        "id": "23adba5a.1575e6",
        "type": "link in",
        "z": "dc20c6e0.0feb98",
        "name": "scalar websocket out",
        "links": [
            "192cf6bb.b61fc9",
            "1f6a9f15.3d80c1",
            "1d6371f9.66705e"
        ],
        "x": 1615,
        "y": 360,
        "wires": [
            [
                "472ae883.652f08",
                "2672654d.766b0a",
                "3b8105e.0ce10fa"
            ]
        ]
    },
    {
        "id": "98c9d4ad.3f54f8",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getArchiveValues",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n        deviceType                  :   1,  \n        name                        :   1,  \n        timeStamp                   :   1, \n        [msg.payload.device.attr]     :   1\n    } \n};\nvar queryFilter = \n{\n    $and :\n    [\n        {\n            deviceType: msg.payload.device.deviceType\n        },\n        {\n            name: msg.payload.device.name\n        },\n        {\n            timeStamp :\n            {\n                $gte: msg.payload.device.startDate,\n                $lte: msg.payload.device.stopDate\n            }\n        }\n    ] \n    \n}\nvar newMsg = \n{\n    topic           : 'getArchiveValues',\n    userID          : msg.userID,\n    payload         : [queryFilter, projectionFilter],\n    device          : msg.payload.device,\n    maxPtsToPlot    : msg.payload.maxPtsToPlot,\n    itrace          : msg.payload.device.itrace\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 460,
        "wires": [
            [
                "c83b72f2.fbac"
            ]
        ]
    },
    {
        "id": "c83b72f2.fbac",
        "type": "mongodb3 in",
        "z": "dc20c6e0.0feb98",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 1010,
        "y": 460,
        "wires": [
            [
                "91696018.4cd47"
            ]
        ]
    },
    {
        "id": "91696018.4cd47",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic:'getArchiveValues',\n        payload:{\n            topic           : 'getArchiveValues',\n            payload         : {itrace: msg.itrace, trace:null},\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\nvar trace = [];\nvar maxPts = msg.maxPtsToPlot;\nvar nstep = numRecords / msg.maxPtsToPlot;\nif (nstep < 1.0) \n{\n    nstep = 1.0;\n    maxPts = numRecords;\n}\nvar icnt = 0;\n\nwhile(icnt < maxPts)\n{\n    var index = Math.round(icnt * nstep);\n    trace[icnt] = {timeStamp: records[index].timeStamp, value: records[index][msg.device.attr]};\n    ++icnt\n}\n\nreturn {\n    topic:'getArchiveValues',\n    payload:{\n        topic           : 'getArchiveValues',\n        payload         : {itrace: msg.itrace, trace:trace},\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1370,
        "y": 460,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "101f39eb.3dbc86",
        "type": "http in",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarViewer",
        "url": "/scalarViewer",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 160,
        "wires": [
            [
                "5fe2ee6b.e7801"
            ]
        ]
    },
    {
        "id": "98ef08d2.acd658",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"9%\"  align=\"center\"><span class=\"tableHeading \">Tr</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Device</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Prop</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Attr</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">value</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">unit</span></td>\n                <td width=\"6.5%\" align=\"center\"><span class=\"tableHeading \">Set</span></td>\n                <td width=\"6.5%\" align=\"center\"><span class=\"tableHeading \">Con</span></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">1</span></td>\n                <td>\n                    <select class=\"custom-select \" id=\"deviceSelect0\" onchange=\"deviceSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"propSelect0\" onchange=\"propSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText \" id=\"valueSelect0\"></span></td>\n                <td align=\"center\"><span class=\"tableText \" id=\"unitSelect0\"></span></td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"setDeviceButton0\" type=\"button\" onclick=\"setDevice(0)\">Set</button>\n                </td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"conDeviceButton0\" type=\"button\" onclick=\"conDevice(0)\">Con</button>\n                </td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">2</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect1\" onchange=\"deviceSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect1\" onchange=\"nameSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect1\" onchange=\"propSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect1\" onchange=\"attrSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect1\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect1\"></span></td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"setDeviceButton1\" type=\"button\" onclick=\"setDevice(1)\">Set</button>\n                </td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"conDeviceButton1\" type=\"button\" onclick=\"conDevice(1)\">Con</button>\n                </td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">3</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect2\" onchange=\"deviceSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect2\" onchange=\"nameSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect2\" onchange=\"propSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect2\" onchange=\"attrSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect2\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect2\"></span></td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"setDeviceButton2\" type=\"button\" onclick=\"setDevice(2)\">Set</button>\n                </td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"conDeviceButton2\" type=\"button\" onclick=\"conDevice(2)\">Con</button>\n                </td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">4</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect3\" onchange=\"deviceSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect3\" onchange=\"nameSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect3\" onchange=\"propSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect3\" onchange=\"attrSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect3\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect3\"></span></td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"setDeviceButton3\" type=\"button\" onclick=\"setDevice(3)\">Set</button>\n                </td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"conDeviceButton3\" type=\"button\" onclick=\"conDevice(3)\">Con</button>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div id=\"setDeviceDialog\" title=\"set Device\" class='card'>\n        <p class='card-title' id='setDeviceDialogAttribute'>Attribute</p>\n        <div class='card-body'>\n            <table>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">Value</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"attrValue\" type=\"text\" value=\"0\" /></td>\n                </tr>\n            </table>\n        </div>\n    </div>\n    <div id=\"conDeviceDialog\" title=\"Config Device\" class='card'>\n        <p class='card-title' id='conDeviceDialogAttribute'>Attribute</p>\n        <div class='card-body'>\n            <table>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">LoLo</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">LOW</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">HIGH</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">HiHi</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">Notify Name</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">Notify Number</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                </tr>\n            </table>\n        </div>\n    </div>",
        "output": "str",
        "x": 1190,
        "y": 160,
        "wires": [
            [
                "bc45cf67.b90c6"
            ]
        ]
    },
    {
        "id": "ddfc02aa.3af39",
        "type": "template",
        "z": "df70f6f.9e4ed08",
        "name": "javascript.scalardevicemenu",
        "field": "payload.javascript.scalardevicemenu",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var numTraces = 4;\n        var deviceSelect = [];\n        var nameSelect = [];\n        var propSelect=[];\n        var attrSelect=[];\n        var valSelect=[];\n        var devInfo = [];\n        var permitGetDeviceValues = true;\n\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                deviceSelect[itrace] = document.getElementById('deviceSelect' + itrace.toString());\n                nameSelect[itrace] = document.getElementById('nameSelect' + itrace.toString());\n                propSelect[itrace] = document.getElementById('propSelect' + itrace.toString());\n                attrSelect[itrace] = document.getElementById('attrSelect' + itrace.toString());\n                valSelect[itrace] = document.getElementById('valSelect' + itrace.toString());\n                devInfo[itrace] = {deviceType: '', name : '',  prop : '',attr : '',device : {}, axis:'y1', pts:true};\n                $('#unitSelect'+ itrace.toString()).html('');\n            }\n            setInterval(getDeviceValues, 1000);\n            onDocumentReadySpecial();\n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getDeviceList':\n                        loadDeviceList(msg.payload);\n                        break;\n                    case 'getNameList':\n                        loadNameList(msg);\n                        break;\n                    case 'getAttrList':\n                        loadAttrList(msg);\n                        break;\n                    case 'getDeviceValues':\n                        loadDeviceValues(msg);\n                        break;\n                    case 'permissionError':\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                        break;\n                    case 'loginExpired':\n                        location.reload();\n                        break;\n                    default:\n                        onWebSocketMessageSpecial(msg);\n                }\n            }\n         }\n        function onWebSocketOpen()\n        {\n            var actionMsg = \n                {\n                };\n            sendActionMsg('getDeviceList', 'readDatabase', actionMsg);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function loadDeviceList(deviceList)\n        {\n            deviceList.sort();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                for (var ii = 0; ii < deviceList.length; ++ii)\n                {\n                    var opt = document.createElement('option');\n                    opt.value = deviceList[ii];\n                    opt.innerHTML = deviceList[ii];\n                    deviceSelect[itrace].appendChild(opt);\n                }\n            }\n        }\n        function loadNameList(data)\n        {\n            data.nameList.sort();\n            for (var ii = 0; ii < data.nameList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.nameList[ii];\n                opt.innerHTML = data.nameList[ii];\n                nameSelect[data.trace].appendChild(opt);\n            }\n\n            return;\n        }\n        function loadAttrList(data)\n        {\n            data.attrList.sort();\n            for (var ii = 0; ii < data.attrList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.attrList[ii];\n                opt.innerHTML = data.attrList[ii];\n                attrSelect[data.trace].appendChild(opt);\n            }\n        }\n        function deviceSelected(itrace)\n        {\n            clearNameOptionList(itrace);\n            if (deviceSelect[itrace].value == 'notSelected') return;\n            nameSelect[itrace].value = 'notSelected';\n            var actionMsg = \n                {\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value\n                };\n            sendActionMsg('getNameList', 'readDatabase', actionMsg);\n        }\n        function nameSelected(itrace)\n        {\n            clearPropOptionList(itrace);\n            if (nameSelect[itrace].value == 'notSelected') return;\n            var readOpt = document.createElement('option');\n            readOpt.value = 'reading';\n            readOpt.innerHTML = 'reading';\n            propSelect[itrace].appendChild(readOpt);\n            var setOpt = document.createElement('option');\n            setOpt.value = 'setting';\n            setOpt.innerHTML = 'setting';\n            propSelect[itrace].appendChild(setOpt);\n            \n            propSelect[itrace].value = 'notSelected';\n        }\n        function propSelected(itrace)\n        {\n            clearAttrOptionList(itrace);\n            if (propSelect[itrace].value == 'notSelected') return;\n            var actionMsg = \n                {\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value,\n                    name        : nameSelect[itrace].value,\n                    prop        : propSelect[itrace].value\n                };\n            sendActionMsg('getAttrList', 'readDatabase', actionMsg);\n        }\n        function attrSelected(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].prop = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n            if (attrSelect[itrace].value == 'notSelected') \n            {\n                $('#valueSelect' + itrace.toString()).html('');\n                $('#unitSelect' + itrace.toString()).html('');\n                $('#editDeviceButton'+ itrace.toString()).hide();\n\n                return;\n            }\n            devInfo[itrace].deviceType = deviceSelect[itrace].value;\n            devInfo[itrace].name = nameSelect[itrace].value;\n            devInfo[itrace].prop = propSelect[itrace].value;\n            devInfo[itrace].attr = attrSelect[itrace].value;\n            attrSelectedSpecial(itrace);\n\n        }\n        function clearNameOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].prop = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (nameSelect[itrace].firstChild)\n            {\n                nameSelect[itrace].removeChild(nameSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            nameSelect[itrace].appendChild(opt);\n            clearPropOptionList(itrace);\n        }\n        function clearPropOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].prop = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (propSelect[itrace].firstChild)\n            {\n                propSelect[itrace].removeChild(propSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            propSelect[itrace].appendChild(opt);\n            clearAttrOptionList(itrace);\n        }\n        function clearAttrOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].prop = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (attrSelect[itrace].firstChild)\n            {\n                attrSelect[itrace].removeChild(attrSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            attrSelect[itrace].appendChild(opt);\n            $('#unitSelect'+ itrace.toString()).html('');\n            $('#valueSelect' + itrace.toString()).html('');\n            clearAttrOptionListSpecial(itrace);\n        }\n        function getDeviceValues()\n        {\n            var devList = [];\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if ((devInfo[itrace].deviceType.length > 0) && (devInfo[itrace].name.length > 0)) \n                {\n                    devList[traceCount] = { $and: [ {deviceType : devInfo[itrace].deviceType}, {name : devInfo[itrace].name}]};\n                    ++traceCount;\n                }\n            }\n            if (traceCount < 1) return;\n            var queryFilter = { $or: devList };\n            var actionMsg = \n                {\n                    queryFilter : queryFilter\n                };\n            sendActionMsg('getDeviceValues', 'readDatabase', actionMsg);\n        }\n        function loadDeviceValues(data)\n        {\n            if (!permitGetDeviceValues) return;\n            var devices = data.devices;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (devInfo[itrace].attr.length > 0)\n                {\n                    for (idev = 0; idev < devices.length; ++idev)\n                    {\n                        if (devices[idev].deviceType == devInfo[itrace].deviceType)\n                        {\n                            if(devices[idev].name == devInfo[itrace].name)\n                            {\n                                devInfo[itrace].device = devices[idev];\n                                var attr = devInfo[itrace].device[devInfo[itrace].attr];\n                                var valueColor = 'black';\n                                if (attr.alarm.value > 0) valueColor = 'orange';\n                                if (attr.alarm.value > 2) valueColor = 'red';\n                                $('#valueSelect' + itrace.toString()).css(\"color\", valueColor);\n                                $('#valueSelect' + itrace.toString()).html(attr.value.toString());\n                                $('#unitSelect' + itrace.toString()).css(\"color\", valueColor);\n                                $('#unitSelect' + itrace.toString()).html(attr.unit);\n                            }\n                        }\n                    } \n                }\n            }\n            loadDeviceValuesSpecial(data);\n        }\n",
        "output": "str",
        "x": 220,
        "y": 80,
        "wires": [
            [
                "e98d4d33.bcca2"
            ]
        ]
    },
    {
        "id": "64bfcc43.f50934",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Scalar Viewer",
        "output": "str",
        "x": 1070,
        "y": 160,
        "wires": [
            [
                "98ef08d2.acd658"
            ]
        ]
    },
    {
        "id": "3b8105e.0ce10fa",
        "type": "websocket out",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarViewer",
        "server": "3d5cd97c.77df96",
        "client": "",
        "x": 1750,
        "y": 420,
        "wires": []
    },
    {
        "id": "c885dc27.153e5",
        "type": "websocket in",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarViewer",
        "server": "3d5cd97c.77df96",
        "client": "",
        "x": 110,
        "y": 440,
        "wires": [
            [
                "e6871441.93cb88"
            ]
        ]
    },
    {
        "id": "5d93334c.7b160c",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "project",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "project",
        "payload": "PROJECT",
        "payloadType": "env",
        "x": 140,
        "y": 320,
        "wires": [
            [
                "e06b15ee.c3bf78"
            ]
        ]
    },
    {
        "id": "e06b15ee.c3bf78",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Save Project Name",
        "func": "global.set(msg.topic,msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 320,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "4819746c.65db8c",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "sendSettingToMqtt",
        "func": "return {\n    topic   : msg.payload.topic, \n    payload : msg.payload.payload, \n    userID  : msg.userID };\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 500,
        "wires": [
            [
                "6381975d.b98928",
                "2e134ccf.236a14"
            ]
        ]
    },
    {
        "id": "6381975d.b98928",
        "type": "mqtt out",
        "z": "dc20c6e0.0feb98",
        "name": "Publish setting",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "84d80994.260508",
        "x": 1360,
        "y": 540,
        "wires": []
    },
    {
        "id": "482179b1.0efb28",
        "type": "http in",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarAlarmScanner",
        "url": "/scalarAlarmScanner",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "fac3ac47.cbce"
            ]
        ]
    },
    {
        "id": "9661ff85.f96c8",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class=\"row\"> \n            <div class=\"col-md-3\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\"></div>\n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"toggleSoundButton\" type=\"button\" onclick=\"toggleSound()\">Turn Sound On</button>\n            </div>\n            <div class=\"col-md-3\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\"></div>\n        </div>\n    </div>\n    <div width=\"100%\">\n        <table width=\"100%\" id='alarmTable'>\n            <tr class=\"tableHeading\">\n                <td width='12%'>Alarm</td>\n                <td width='12%'>Device</td>\n                <td width='12%'>Name</td>\n                <td width='12%'>Property</td>\n                <td width='12%'>Attribute</td>\n                <td width='12%'>Value</td>\n                <td width='12%'>Unit</td>\n                <td width='12%'>Type</td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 1190,
        "y": 220,
        "wires": [
            [
                "f07664a9.ede108"
            ]
        ]
    },
    {
        "id": "30fbb3de.45ba1c",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var ws;\n        var retries = 0;\n        var userID = -1;\n        var audioAlarm = new Audio('/audio/alarm.ogg');\n        var alarmSoundOn = false;\n        var soundLastPlayed = 0;\n        var soundInterval = 4000;\n        \n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            createAlarmTableRows(100);\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n               case 'alarmList':\n                    alarmScan(msg.payload);\n                    break;\n                default:\n                // code block\n            }\n        }\n        function createAlarmTableRows(nrows)\n        {\n            var alarmTable = document.getElementById('alarmTable');\n            for (var irow = 0; irow < nrows; ++irow)\n            {\n                var row = alarmTable.insertRow(irow + 1);\n                row.setAttribute(\"id\", \"alarmTable\" + irow.toString());\n                row.setAttribute(\"class\", \"tableText\");\n                var iconCell = row.insertCell(0);\n                var devCell  = row.insertCell(1);\n                var nameCell = row.insertCell(2);\n                var propCell = row.insertCell(3);\n                var attrCell = row.insertCell(4);\n                var valueCell= row.insertCell(5);\n                var unitCell = row.insertCell(6);\n                var typeCell = row.insertCell(7);\n                iconCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_icon\");\n                devCell.setAttribute( \"id\", \"alarmTable\" + irow.toString() + \"_dev\");\n                nameCell.setAttribute( \"id\", \"alarmTable\" + irow.toString() + \"_name\");\n                propCell.setAttribute( \"id\", \"alarmTable\" + irow.toString() + \"_prop\");\n                attrCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_attr\");\n                valueCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_value\");\n                unitCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_unit\");\n                typeCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_type\");\n                $('#alarmTable' + irow.toString()).hide();\n                iconCell.innerHTML = \"<img id='alarmTable\" + irow.toString() + \"_led'\" + \" src='/img/redLight.png' height='50px'/>\";\n            }\n        \n        }\n        function alarmScan(alarmList)\n        {\n            var deviceInfo = [];\n            var nrows = $('#alarmTable tr').length;\n            nrows = nrows - 1;\n            if (alarmList.length > nrows) alert('Too many alarms to display!');\n            for (var idev = 0; idev < alarmList.length; ++idev)\n            {\n                $('#alarmTable' + idev.toString()).show();\n                $('#alarmTable' + idev.toString() + '_dev').html(alarmList[idev].deviceType);\n                $('#alarmTable' + idev.toString() + '_name').html(alarmList[idev].name);\n                $('#alarmTable' + idev.toString() + '_prop').html(alarmList[idev].prop);\n                $('#alarmTable' + idev.toString() + '_attr').html(alarmList[idev].attr);\n                $('#alarmTable' + idev.toString() + '_value').html(alarmList[idev].value);\n                $('#alarmTable' + idev.toString() + '_unit').html(alarmList[idev].unit);\n                var type = '';\n                if (alarmList[idev].alarm == 1) type = 'LOW';\n                if (alarmList[idev].alarm == 2) type = 'HIGH';\n                if (alarmList[idev].alarm == 3) type = 'LOLO';\n                if (alarmList[idev].alarm == 4) type = 'HIHI';\n                $('#alarmTable' + idev.toString() + '_type').html(type);\n                if (alarmList[idev].alarm < 3)\n                {\n                    $('#alarmTable' + idev.toString() + '_led').attr('src','/img/yellowLight.png');\n                }\n                else\n                {\n                    $('#alarmTable' + idev.toString() + '_led').attr('src','/img/redLight.png');\n                    if (alarmSoundOn)\n                    {\n                        if ((new Date().getTime() - soundLastPlayed) > soundInterval)\n                        {\n                            audioAlarm.play();\n                            soundLastPlayed = new Date().getTime();\n                        }\n                    }\n                    \n                }\n        \n            }\n            for (var idev = alarmList.length; idev < nrows; ++idev)\n            {\n                $('#alarmTable' + idev.toString()).hide();\n            }\n        \n        }\n        function toggleSound()\n        {\n            alarmSoundOn = !alarmSoundOn;\n            var soundButtonText = 'Turn Sound On';\n            if (alarmSoundOn) soundButtonText = 'Turn Sound Off';\n            $('#toggleSoundButton').html(soundButtonText);\n        }",
        "output": "str",
        "x": 930,
        "y": 220,
        "wires": [
            [
                "f98b12be.28903"
            ]
        ]
    },
    {
        "id": "f98b12be.28903",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Alarm Scanner",
        "output": "str",
        "x": 1070,
        "y": 220,
        "wires": [
            [
                "9661ff85.f96c8"
            ]
        ]
    },
    {
        "id": "8923ffe3.37bda",
        "type": "websocket out",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarAlarmScanner",
        "server": "2b65833e.87911c",
        "client": "",
        "x": 800,
        "y": 740,
        "wires": []
    },
    {
        "id": "60f8d457.92c10c",
        "type": "mongodb3 in",
        "z": "dc20c6e0.0feb98",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "find.toArray",
        "x": 370,
        "y": 740,
        "wires": [
            [
                "902a8791.29d718"
            ]
        ]
    },
    {
        "id": "6eaf67b8.ba2648",
        "type": "inject",
        "z": "dc20c6e0.0feb98",
        "name": "Every 10 sec",
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "'name'",
        "payloadType": "str",
        "x": 140,
        "y": 740,
        "wires": [
            [
                "60f8d457.92c10c"
            ]
        ]
    },
    {
        "id": "902a8791.29d718",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Scan for alarms",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar oldAlarmList = context.get('oldAlarmList')\nif (oldAlarmList == undefined) oldAlarmList = [];\nvar numDevices = objectLength(msg.payload);\nvar props = ['readings', 'settings'];\nvar alarmList = [];\nvar alarmCount = 0;\nfor (var idev = 0; idev < numDevices; ++idev)\n{\n    var device = msg.payload[idev];\n\n    var keys = Object.keys(device);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (device[keys[ii]].hasOwnProperty('type'))\n        {\n            if (device[keys[ii]].type == 'scalar')\n            {\n                if (device[keys[ii]].alarm.value > 0)\n                {\n                    alarmList[alarmCount] = \n                    {\n                        deviceType: device.deviceType,\n                        name  : device.name,\n                        prop  : device[keys[ii]].action,\n                        attr  : keys[ii],\n                        value : device[keys[ii]].value,\n                        unit  : device[keys[ii]].unit,\n                        alarm : device[keys[ii]].alarm.value,\n                        id    : device.deviceType + '-' +  device.name + '-' +  device[keys[ii]].action + '-' + keys[ii],\n                        notify: device[keys[ii]].alarm.notify\n                    };\n                    ++alarmCount;\n                }\n            }\n        }\n    }\n}\n\nvar newAlarmList = [];\nvar newAlarmCount = 0;\nfor (var ialarm = 0; ialarm < alarmCount; ++ialarm)\n{\n    var oldAlarm = oldAlarmList.find(oldAlarm => oldAlarm.id === alarmList[ialarm].id);\n    if (oldAlarm == undefined) \n    {\n        newAlarmList[newAlarmCount] = alarmList[ialarm];\n        ++newAlarmCount;\n    }\n}\ncontext.set('oldAlarmList', alarmList);\nreturn [{topic:'alarmList', payload:{topic:'alarmList',payload:alarmList}},{topic:'newAlarmList', payload:newAlarmList}];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 740,
        "wires": [
            [
                "8923ffe3.37bda"
            ],
            [
                "fcd3d5a6.7bdaf8"
            ]
        ]
    },
    {
        "id": "1c8b36de.a489c9",
        "type": "sendsms",
        "z": "dc20c6e0.0feb98",
        "creds": "23623a1c.e4ce46",
        "to": "{{msg.to}}",
        "fr": "{{msg.from}}",
        "text": "{{msg.payload}}",
        "unicode": false,
        "x": 1310,
        "y": 800,
        "wires": [
            [
                "30c5692.3ac4c96"
            ]
        ]
    },
    {
        "id": "30c5692.3ac4c96",
        "type": "debug",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1450,
        "y": 800,
        "wires": []
    },
    {
        "id": "fcd3d5a6.7bdaf8",
        "type": "split",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 750,
        "y": 800,
        "wires": [
            [
                "81b10ec2.0f878"
            ]
        ]
    },
    {
        "id": "81b10ec2.0f878",
        "type": "delay",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 900,
        "y": 800,
        "wires": [
            [
                "77c8c2b5.2b57ec"
            ]
        ]
    },
    {
        "id": "77c8c2b5.2b57ec",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Prepare SMS",
        "func": "if (msg.payload.notify.name.length < 1) return null;\nif (msg.payload.notify.number.length < 1) return null;\nvar type = '';\nif (msg.payload.alarm == 1) type = 'LOW';\nif (msg.payload.alarm == 2) type = 'HIGH';\nif (msg.payload.alarm == 3) type = 'LOLO';\nif (msg.payload.alarm == 4) type = 'HIHI';\nvar message = 'Alarm-' + type + ': ' + msg.payload.id;\nmessage = message + ' is at ' + msg.payload.value.toString() + ' ' + msg.payload.unit\nreturn {topic:'sms',to:msg.payload.notify.number, payload:message, from:'46000000000'};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1080,
        "y": 800,
        "wires": [
            [
                "78c1fcc3.ec6164",
                "1c8b36de.a489c9"
            ]
        ]
    },
    {
        "id": "9460eaf0.da7628",
        "type": "subflow:ca529822.9112f8",
        "z": "8341090a.df9758",
        "name": "",
        "x": 410,
        "y": 80,
        "wires": []
    },
    {
        "id": "72941646.0206b8",
        "type": "subflow:f22a539a.a67b3",
        "z": "dc20c6e0.0feb98",
        "x": 1330,
        "y": 40,
        "wires": []
    },
    {
        "id": "bb160287.a4943",
        "type": "subflow:f22a539a.a67b3",
        "z": "dc20c6e0.0feb98",
        "x": 1330,
        "y": 100,
        "wires": []
    },
    {
        "id": "bc45cf67.b90c6",
        "type": "subflow:f22a539a.a67b3",
        "z": "dc20c6e0.0feb98",
        "x": 1330,
        "y": 160,
        "wires": []
    },
    {
        "id": "f07664a9.ede108",
        "type": "subflow:f22a539a.a67b3",
        "z": "dc20c6e0.0feb98",
        "x": 1330,
        "y": 220,
        "wires": []
    },
    {
        "id": "58100264.e2a28c",
        "type": "websocket in",
        "z": "b94899c9.b16088",
        "name": "vectorPlotter",
        "server": "3c933d8a.80b7a2",
        "client": "",
        "x": 110,
        "y": 300,
        "wires": [
            [
                "d8854f8.5c820b"
            ]
        ]
    },
    {
        "id": "c10d43eb.a111b",
        "type": "websocket out",
        "z": "b94899c9.b16088",
        "name": "vectorPlotter",
        "server": "3c933d8a.80b7a2",
        "client": "",
        "x": 1690,
        "y": 180,
        "wires": []
    },
    {
        "id": "813098f2.aa5c28",
        "type": "http in",
        "z": "b94899c9.b16088",
        "name": "/vectorPlotter",
        "url": "/vectorPlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 40,
        "wires": [
            [
                "421bd3a6.9feaac"
            ]
        ]
    },
    {
        "id": "43013e03.44494",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"33%\" align=\"center\"><span class=\"tableHeading \">Device</span></td>\n                <td width=\"33%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                <td width=\"33%\" align=\"center\"><span class=\"tableHeading \">Attr</span></td>\n            </tr>\n            <tr>\n                <td>\n                    <select class=\"custom-select \" id=\"deviceSelect0\" onchange=\"deviceSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div class='vert-pad' width=\"100%\">\n        <div class='row'>\n            <div class='col-md-12'>\n                <div class='card'>\n                    <p class='card-title'>Spectrogram</p>\n                    <div class='card-body' align=\"center\">\n                        <div width=\"100%\" id=\"spectrogram\" align=\"center\"></div> \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div width=\"100%\">\n        <div class=\"row\"> \n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"freezeButton\" type=\"button\" onclick=\"freezeRun()\"></button>\n            </div>\n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"birdsEyeButton\" type=\"button\" onclick=\"birdsEyeView()\">Birds Eye</button>\n            </div>\n        </div>\n        <div class=\"row\"> \n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"sliceViewButton\" type=\"button\" onclick=\"sliceView()\">Slice View</button>\n            </div>\n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"sliceViewButton\" type=\"button\" onclick=\"topView()\">Top View</button>\n            </div>\n        </div>\n        <div class=\"row\"> \n            <div class=\"col-md-6\" align=\"right\" >\n                <span class=\"tableHeading\" style=\"font-size: medium;\">Start Time</span>\n            </div>\n            <div class=\"col-md-6\">\n                <span class=\"tableHeading\"  style=\"font-size: medium;\" id=\"startTime\"></span>\n            </div>\n        </div>\n        <div class=\"row\"> \n            <div class=\"col-md-6\"  align=\"right\">\n                <span class=\"tableHeading\" style=\"font-size: medium;\">Stop Time</span>\n            </div>\n            <div class=\"col-md-6\">\n                <span class=\"tableHeading\" id=\"stopTime\" style=\"font-size: medium;\"></span>\n            </div>\n        </div>\n        <div class=\"row\"> \n            <div class=\"col-md-3\" align=\"right\" >\n                <span class=\"tableHeading\" style=\"font-size: medium;\">PlotSlices</span>\n            </div>\n            <div class=\"col-md-6\">\n                <input class=\"form-control center-justify\" id=\"plotslices\" type=\"text\" value=\"0\" style=\"font-size: medium;\"/>\n            </div>\n        </div>\n    </div>\n    ",
        "output": "str",
        "x": 1050,
        "y": 40,
        "wires": [
            [
                "c6c23586.848c58"
            ]
        ]
    },
    {
        "id": "6a7aaea9.6b97f",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var numTraces = 1;\n        var deviceSelect = [];\n        var nameSelect = [];\n        var attrSelect=[];\n        var valSelect=[];\n        var devInfo = [];\n\n        var graph3d = null;\n        var itimeSlice = 0;\n        var timeMax = 32;\n        var dataArray = [];\n        var timeStamp = [];\n        var deltaT = 0;\n        var freeze = false;\n        var sliceViewActive = false;\n        var birdsEyeViewActive = false;\n        var topViewActive = false;\n        var birdsEyeTimeMax = 32;\n        var plotStarted = false;\n        \n        var threedPlotOptions =\n        {\n            width: '850px',\n            height: '600px',\n            style: 'surface',\n            showPerspective: false,\n            showGrid: true,\n            showShadow: false,\n            keepAspectRatio: false,\n            verticalRatio: 0.6,\n            showZAxis: true,\n            xLabel: 'x',\n            yLabel: 'Time',\n            tooltip: true,\n            axisColor: '#ffffff',\n        };\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                deviceSelect[itrace] = document.getElementById('deviceSelect' + itrace.toString());\n                nameSelect[itrace] = document.getElementById('nameSelect' + itrace.toString());\n                attrSelect[itrace] = document.getElementById('attrSelect' + itrace.toString());\n                valSelect[itrace] = document.getElementById('valSelect' + itrace.toString());\n                devInfo[itrace] = {deviceType: '', name : '',  prop : 'reading', attr : '',device : {}};\n            }\n            $(\"#freezeButton\").text('Running');\n            $(\"#plotslices\").val(timeMax.toString());\n            $(\"#plotslices\").change(function()\n            {\n                timeMax = Number($(\"#plotslices\").val());\n                if (timeMax < 2)\n                {\n                    alert('Number of plot slices must be greater than 1');\n                    timeMax = 2;\n                }\n                birdsEyeTimeMax = timeMax;\n                $(\"#plotslices\").val(timeMax.toString());\n                dataArray = [];\n                itimeSlice = 0;\n                plotStarted = false;\n            });\n            sliceViewActive = true;\n            birdsEyeViewActive = false;\n            topViewActive = false;\n            setInterval(getDeviceValues, 1000);\n        }\n        function restartPlot()\n        {\n            $(\"#freezeButton\").text('Running');\n            $(\"#plotslices\").val(timeMax.toString());\n            dataArray = [];\n            itimeSlice = 0;\n            plotStarted = false;\n            sliceViewActive = true;\n            birdsEyeViewActive = false;\n            topViewActive = false;\n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getDeviceList':\n                        loadDeviceList(msg.payload);\n                        break;\n                    case 'getNameList':\n                        loadNameList(msg);\n                        break;\n                    case 'getAttrList':\n                        loadAttrList(msg);\n                        break;\n                    case 'getDeviceValues':\n                        loadDeviceValues(msg);\n                        break;\n                    case 'permissionError':\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                        break;\n                    case 'loginExpired':\n                        location.reload();\n                        break;\n                    default:\n                       break;\n                }\n            }\n         }\n        function onWebSocketOpen()\n        {\n            var actionMsg = \n                {\n                };\n            sendActionMsg('getDeviceList', 'readDatabase', actionMsg);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function loadDeviceList(deviceList)\n        {\n            deviceList.sort();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                for (var ii = 0; ii < deviceList.length; ++ii)\n                {\n                    var opt = document.createElement('option');\n                    opt.value = deviceList[ii];\n                    opt.innerHTML = deviceList[ii];\n                    deviceSelect[itrace].appendChild(opt);\n                }\n            }\n        }\n        function loadNameList(data)\n        {\n            data.nameList.sort();\n            for (var ii = 0; ii < data.nameList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.nameList[ii];\n                opt.innerHTML = data.nameList[ii];\n                nameSelect[data.trace].appendChild(opt);\n            }\n\n            return;\n        }\n        function loadAttrList(data)\n        {\n            data.attrList.sort();\n            for (var ii = 0; ii < data.attrList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.attrList[ii];\n                opt.innerHTML = data.attrList[ii];\n                attrSelect[data.trace].appendChild(opt);\n            }\n        }\n        function deviceSelected(itrace)\n        {\n            clearNameOptionList(itrace);\n            if (deviceSelect[itrace].value == 'notSelected') return;\n            nameSelect[itrace].value = 'notSelected';\n            var actionMsg = \n                {\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value\n                };\n            sendActionMsg('getNameList', 'readDatabase', actionMsg);\n        }\n        function nameSelected(itrace)\n        {\n            clearAttrOptionList(itrace);\n            if (nameSelect[itrace].value == 'notSelected') return;\n            var actionMsg = \n                {\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value,\n                    name        : nameSelect[itrace].value,\n                    prop        : 'reading'\n                };\n            sendActionMsg('getAttrList', 'readDatabase', actionMsg);\n        }\n        function attrSelected(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n            restartPlot();\n            if (attrSelect[itrace].value == 'notSelected')  return;\n            devInfo[itrace].deviceType = deviceSelect[itrace].value;\n            devInfo[itrace].name = nameSelect[itrace].value;\n            devInfo[itrace].attr = attrSelect[itrace].value;\n\n        }\n        function clearNameOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (nameSelect[itrace].firstChild)\n            {\n                nameSelect[itrace].removeChild(nameSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            nameSelect[itrace].appendChild(opt);\n            clearAttrOptionList(itrace);\n        }\n        function clearAttrOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (attrSelect[itrace].firstChild)\n            {\n                attrSelect[itrace].removeChild(attrSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            attrSelect[itrace].appendChild(opt);\n            \n        }\n        function getDeviceValues()\n        {\n            var devList = [];\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if ((devInfo[itrace].deviceType.length > 0) && (devInfo[itrace].name.length > 0)) \n                {\n                    devList[traceCount] = { $and: [ {deviceType : devInfo[itrace].deviceType}, {name : devInfo[itrace].name}]};\n                    ++traceCount;\n                }\n            }\n            if (traceCount < 1) return;\n            var queryFilter = { $or: devList };\n            var actionMsg = \n                {\n                    queryFilter : queryFilter,\n                };\n            sendActionMsg('getDeviceValues', 'readDatabase', actionMsg);\n        }\n        function loadDeviceValues(data)\n        {\n            var devices = data.devices;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (devInfo[itrace].attr.length > 0)\n                {\n                    for (idev = 0; idev < devices.length; ++idev)\n                    {\n                        if (devices[idev].deviceType == devInfo[itrace].deviceType)\n                        {\n                            if(devices[idev].name == devInfo[itrace].name)\n                            {\n                                devInfo[itrace].device = devices[idev];\n                                var attr = devInfo[itrace].device[devInfo[itrace].attr];\n                                upDatePlot(attr.value);\n                            }\n                        }\n                    } \n                }\n            }\n        }\n        function upDatePlot(value)\n        {\n            var npts = value[0].length;\n            if(!plotStarted)\n            {\n                dataArray = [];\n                for (var ix = 0; ix < npts; ++ix)\n                {\n                    dataArray[ix] =\n                    {\n                        'x': value[0][ix],\n                        'y': 0,\n                        'z': value[1][ix],\n                        'style': value[1][ix]\n                    };\n                }\n                var container = document.getElementById('spectrogram');\n            \n                graph3d = new vis.Graph3d(container, dataArray, threedPlotOptions);\n                $(\"#startTime\").text(new Date().toLocaleString());\n                $(\"#stopTime\").text(new Date().toLocaleString());\n                graph3d.on('cameraPositionChange', onCameraPositionChange);\n                if (sliceViewActive) sliceView();\n                if (birdsEyeViewActive) birdsEyeView();\n                if (topViewActive) topView();\n                plotStarted = true;\n            }\n            else\n            {\n                if (freeze) return;\n                if (itimeSlice < timeMax)\n                {\n                    timeStamp[itimeSlice] = new Date().getTime();\n                    deltaT = (timeStamp[itimeSlice] - timeStamp[0]) / 1000;\n                    for (var ix = 0; ix < npts; ++ix)\n                    {\n                        dataArray[itimeSlice * npts + ix] =\n                        {\n                            'x': value[0][ix],\n                            'y': deltaT,\n                            'z': value[1][ix],\n                            'style': value[1][ix]\n                        };\n                    }\n                    ++itimeSlice;\n                }\n                else\n                {\n                    for (var itime = 0; itime < (timeMax - 1); ++itime)\n                    {\n                        timeStamp[itime] = timeStamp[itime + 1];\n                        deltaT = (timeStamp[itime] - timeStamp[0]) / 1000;\n                        for (var ix = 0; ix < npts; ++ix)\n                        {\n                            dataArray[itime * npts + ix] =\n                            {\n                                'x': dataArray[(itime + 1) * npts + ix].x,\n                                'y': deltaT,\n                                'z': dataArray[(itime + 1) * npts + ix].z,\n                                'style': dataArray[(itime + 1) * npts + ix].style\n                            };\n                        }\n                    }\n                    timeStamp[timeMax - 1] = new Date().getTime();\n                    deltaT = (timeStamp[timeMax - 1] - timeStamp[0]) / 1000;\n                    for (var ix = 0; ix < npts; ++ix)\n                    {\n                        dataArray[(timeMax - 1) * npts + ix] =\n                        {\n                            'x': value[0][ix],\n                            'y': deltaT,\n                            'z': value[1][ix],\n                            'style': value[1][ix]\n                        };\n                    }\n                }\n                $(\"#startTime\").text(new Date(timeStamp[0]).toLocaleString());\n                $(\"#stopTime\").text(new Date(timeStamp[itimeSlice - 1]).toLocaleString());\n                graph3d.setData(dataArray);\n            }\n        }\n        function freezeRun()\n        {\n            freeze = !freeze;\n            if (freeze)\n            {\n                $(\"#freezeButton\").text('Frozen');\n            }\n            else\n            {\n                $(\"#freezeButton\").text('Running');\n            }\n        }\n        \n        function birdsEyeView()\n        {\n            var horzAngle = 315.0 * 3.1415927 / 180.0;\n            var vertAngle = 45.0 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n            if (sliceViewActive)\n            {\n                timeMax =  birdsEyeTimeMax;\n                $(\"#plotslices\").val(timeMax.toString());\n            }\n            sliceViewActive = false;\n            birdsEyeViewActive = true;\n            topViewActive = false;\n        }\n        function sliceView()\n        {\n            var horzAngle = 0.0 * 3.1415927 / 180.0;\n            var vertAngle = 0.0 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 1.1});\n            timeMax = 2;\n            $(\"#plotslices\").val(timeMax.toString());\n            itimeSlice = 0;\n            plotStarted = false;\n            sliceViewActive = true;\n            birdsEyeViewActive = false;\n            topViewActive = false;\n        }\n        function topView()\n        {\n            var horzAngle = 0 * 3.1415927 / 180.0;\n            var vertAngle = 90 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n            if (sliceViewActive)\n            {\n                timeMax =  birdsEyeTimeMax;\n                $(\"#plotslices\").val(timeMax.toString());\n            }\n            sliceViewActive = false;\n            birdsEyeViewActive = false;\n            topViewActive = true;\n        }\n        function onCameraPositionChange(event)\n        {\n            if (sliceViewActive) sliceView();\n            if (birdsEyeViewActive) birdsEyeView();\n            if (topViewActive) topView();\n        }",
        "output": "str",
        "x": 640,
        "y": 40,
        "wires": [
            [
                "4f498dd4.8ddad4"
            ]
        ]
    },
    {
        "id": "6f9d3e8e.5dd7c",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vector Plotter",
        "output": "str",
        "x": 930,
        "y": 40,
        "wires": [
            [
                "43013e03.44494"
            ]
        ]
    },
    {
        "id": "c6c23586.848c58",
        "type": "subflow:f22a539a.a67b3",
        "z": "b94899c9.b16088",
        "x": 1190,
        "y": 40,
        "wires": []
    },
    {
        "id": "23847e72.ad5052",
        "type": "switch",
        "z": "b94899c9.b16088",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDeviceList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getNameList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getAttrList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDeviceValues",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getArchiveValues",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 550,
        "y": 340,
        "wires": [
            [
                "239425dd.8a514a"
            ],
            [
                "c143b50b.37c0a8"
            ],
            [
                "567d6cad.83f094"
            ],
            [
                "80e43fea.99b4b"
            ],
            [
                "e42fbd97.1acb"
            ]
        ]
    },
    {
        "id": "239425dd.8a514a",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getDeviceList",
        "func": "var newMsg = \n{\n    topic           : 'getDeviceList',\n    userID          : msg.userID,\n    payload         : [{},{projection:{deviceType:1, _id:0}}]\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 260,
        "wires": [
            [
                "cca5ce34.ad466"
            ]
        ]
    },
    {
        "id": "567d6cad.83f094",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getAttrList",
        "func": "var projectionFilter =  {projection:{_id:0}};\nvar newMsg = \n{\n    topic           : 'getAttrList',\n    userID          : msg.userID,\n    payload         : [{$and : [{deviceType:msg.payload.deviceType}, {name:msg.payload.name}]}, projectionFilter],\n    prop            : msg.payload.prop,\n    name            : msg.payload.name,\n    deviceType      : msg.payload.deviceType,\n    trace           : msg.payload.trace\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 720,
        "y": 340,
        "wires": [
            [
                "cca5ce34.ad466"
            ]
        ]
    },
    {
        "id": "80e43fea.99b4b",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getDeviceValues",
        "func": "var projectionFilter =  {projection:{_id:0}};\nvar newMsg = \n{\n    topic           : 'getDeviceValues',\n    userID          : msg.userID,\n    payload         : [msg.payload.queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 380,
        "wires": [
            [
                "cca5ce34.ad466"
            ]
        ]
    },
    {
        "id": "cca5ce34.ad466",
        "type": "mongodb3 in",
        "z": "b94899c9.b16088",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "find.toArray",
        "x": 1030,
        "y": 300,
        "wires": [
            [
                "cf416706.322028"
            ]
        ]
    },
    {
        "id": "cf416706.322028",
        "type": "switch",
        "z": "b94899c9.b16088",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDeviceList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getNameList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getAttrList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDeviceValues",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1230,
        "y": 300,
        "wires": [
            [
                "1f313e3a.8bfc52"
            ],
            [
                "7737092b.94fb48"
            ],
            [
                "bcfe30d9.5f058"
            ],
            [
                "b731442a.4504b8"
            ]
        ]
    },
    {
        "id": "1f313e3a.8bfc52",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "parse device list",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nvar deviceList = [];\ndeviceList[0] = msg.payload[0].deviceType;\nif (numDevices > 1)\n{\n    for (var idevice = 1; idevice < numDevices; ++idevice)\n    {\n        var deviceAlreadyFound = false;\n        for (ii = 0; ii < idevice; ++ii)\n        {\n            if (msg.payload[idevice].deviceType == deviceList[ii]) deviceAlreadyFound = true;\n        }\n        if (!deviceAlreadyFound) deviceList[idevice] = msg.payload[idevice].deviceType;\n    }\n}\n\nreturn {\n    topic:'getDeviceList',\n    payload:{\n        topic           : 'getDeviceList',\n        payload         : deviceList,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1440,
        "y": 240,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "bcfe30d9.5f058",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "parse attrList",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nif (numDevices < 1) return null;\nvar device = msg.payload[0];\nvar attrList = [];\nvar keys = Object.keys(device);\nfor (var ii = 0; ii < keys.length; ++ii)\n{\n    if (device[keys[ii]].hasOwnProperty('type'))\n    {\n        if (device[keys[ii]].type == 'vector')\n        {\n            if (device[keys[ii]].action == msg.prop)\n            {\n                attrList.push(keys[ii]);\n            }\n        }\n    }\n}\nif (attrList.length < 1) return null;\nreturn {\n    topic:'getAttrList',\n    payload:{\n        topic           : 'getAttrList',\n        userID          : msg.userID,\n        prop            : msg.prop,\n        name            : msg.name,\n        trace           : msg.trace,\n        attrList        : attrList,\n        deviceType      : msg.deviceType,\n\n    }\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1430,
        "y": 320,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "b731442a.4504b8",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "parse getDeviceValues",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nif (numDevices < 1) return null;\nvar devices = [];\nfor (var idev = 0; idev < numDevices; ++idev) devices[idev] = msg.payload[idev];\nreturn {\n    topic:'getDeviceValues',\n    payload:{\n        topic           : 'getDeviceValues',\n        userID          : msg.userID,\n        devices         : devices,\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1460,
        "y": 360,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "e42fbd97.1acb",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getArchiveValues",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n        deviceType                  :   1,  \n        name                        :   1,  \n        timeStamp                   :   1, \n        [msg.payload.device.attr]   :   1\n    } \n};\nvar queryFilter = \n{\n    $and :\n    [\n        {\n            deviceType: msg.payload.device.deviceType\n        },\n        {\n            name: msg.payload.device.name\n        },\n        {\n            timeStamp :\n            {\n                $gte: msg.payload.device.startDate,\n                $lte: msg.payload.device.stopDate\n            }\n        }\n    ] \n    \n}\nvar newMsg = \n{\n    topic           : 'getArchiveValues',\n    userID          : msg.userID,\n    payload         : [queryFilter, projectionFilter],\n    device          : msg.payload.device,\n    maxPtsToPlot    : msg.payload.maxPtsToPlot,\n    itrace          : msg.payload.device.itrace\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 420,
        "wires": [
            [
                "3ea29ec6.e9bfa2"
            ]
        ]
    },
    {
        "id": "3ea29ec6.e9bfa2",
        "type": "mongodb3 in",
        "z": "b94899c9.b16088",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 1030,
        "y": 500,
        "wires": [
            [
                "22a317f1.3a10b8"
            ]
        ]
    },
    {
        "id": "22a317f1.3a10b8",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic:'getArchiveValues',\n        payload:{\n            topic           : 'getArchiveValues',\n            payload         : {itrace: msg.itrace, trace:null},\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\nvar trace = [];\nvar maxPts = msg.maxPtsToPlot;\nvar nstep = numRecords / msg.maxPtsToPlot;\nif (nstep < 1.0) \n{\n    nstep = 1.0;\n    maxPts = numRecords;\n}\nvar icnt = 0;\n\nwhile(icnt < maxPts)\n{\n    var index = Math.round(icnt * nstep);\n    trace[icnt] = {timeStamp: records[index].timeStamp, value: records[index][msg.device.attr]};\n    ++icnt\n}\n\nreturn {\n    topic:'getArchiveValues',\n    payload:{\n        topic           : 'getArchiveValues',\n        payload         : {itrace: msg.itrace, trace:trace},\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1290,
        "y": 520,
        "wires": [
            [
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "a45c73b4.cd0d1",
        "type": "websocket in",
        "z": "b94899c9.b16088",
        "name": "vectorArchivePlotter",
        "server": "869ccabd.6400e8",
        "client": "",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "d8854f8.5c820b"
            ]
        ]
    },
    {
        "id": "aa9e819c.38f8f",
        "type": "websocket out",
        "z": "b94899c9.b16088",
        "name": "vectorArchivePlotter",
        "server": "869ccabd.6400e8",
        "client": "",
        "x": 1700,
        "y": 520,
        "wires": []
    },
    {
        "id": "f424cab0.278588",
        "type": "http in",
        "z": "b94899c9.b16088",
        "name": "/vectorArchivePlotter",
        "url": "/vectorArchivePlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "50b5b5d7.93c8ac"
            ]
        ]
    },
    {
        "id": "a2e15003.8612b",
        "type": "subflow:f22a539a.a67b3",
        "z": "b94899c9.b16088",
        "x": 1210,
        "y": 140,
        "wires": []
    },
    {
        "id": "fd934b09.f641b8",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var numTraces = 1;\n        var deviceSelect = [];\n        var nameSelect = [];\n        var attrSelect=[];\n        var devInfo = [];\n\n        var startDate = 0;\n        var stopDate = 0;\n        var csvFile = [];\n\n        var archiveRequestList = [];\n        var archiveList = [];\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                deviceSelect[itrace] = document.getElementById('deviceSelect' + itrace.toString());\n                nameSelect[itrace] = document.getElementById('nameSelect' + itrace.toString());\n                attrSelect[itrace] = document.getElementById('attrSelect' + itrace.toString());\n                devInfo[itrace] = {deviceType  : '', name : '', prop : 'reading', attr : '',device : {}};\n\n                $('#csv'+ itrace.toString()).removeAttr(\"href\");\n                $('#csv'+ itrace.toString()).css('color', 'black');\n                $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n                $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n                csvFile[itrace] = null;\n\n            }\n            var now = new Date();\n            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n            $('#plotViewButtons').hide();\n        }\n        function onWebSocketOpen()\n        {\n            var actionMsg = {};\n            sendActionMsg('getDeviceList', 'readDatabase',  actionMsg);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getDeviceList':\n                        loadDeviceList(msg.payload);\n                        break;\n                    case 'getNameList':\n                        loadNameList(msg);\n                        break;\n                    case 'getAttrList':\n                        loadAttrList(msg);\n                        break;\n                    case 'getArchiveValues':\n                        archiveList.push(msg.payload);\n                        if (archiveRequestList.length > 0)\n                        {\n                            getArchiveValues();\n                        }\n                        else\n                        {\n                            plotArchive();\n                        }\n                        break;\n                    case 'permissionError':\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                        break;\n                    case 'loginExpired':\n                        location.reload();\n                        break;\n                    default:\n                    // code block\n                }\n            }\n        }\n        function loadDeviceList(deviceList)\n        {\n            deviceList.sort();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                for (var ii = 0; ii < deviceList.length; ++ii)\n                {\n                    var opt = document.createElement('option');\n                    opt.value = deviceList[ii];\n                    opt.innerHTML = deviceList[ii];\n                    deviceSelect[itrace].appendChild(opt);\n                }\n            }\n        }\n        function loadNameList(data)\n        {\n            data.nameList.sort();\n            for (var ii = 0; ii < data.nameList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.nameList[ii];\n                opt.innerHTML = data.nameList[ii];\n                nameSelect[data.trace].appendChild(opt);\n            }\n\n            return;\n        }\n        function loadAttrList(data)\n        {\n            data.attrList.sort();\n            for (var ii = 0; ii < data.attrList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.attrList[ii];\n                opt.innerHTML = data.attrList[ii];\n                attrSelect[data.trace].appendChild(opt);\n            }\n        }\n        function deviceSelected(itrace)\n        {\n            clearNameOptionList(itrace);\n            if (deviceSelect[itrace].value == 'notSelected') return;\n            nameSelect[itrace].value = 'notSelected';\n            var actionMsg = \n                {\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value\n                };\n            sendActionMsg('getNameList', 'readDatabase', actionMsg);\n        }\n        function nameSelected(itrace)\n        {\n            clearAttrOptionList(itrace);\n            if (nameSelect[itrace].value == 'notSelected') return;\n            var actionMsg = \n                {\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value,\n                    name        : nameSelect[itrace].value,\n                    prop        : 'reading'\n                };\n            sendActionMsg('getAttrList', 'readDatabase', actionMsg);\n        }\n        function attrSelected(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n            if (attrSelect[itrace].value == 'notSelected')  return;\n            devInfo[itrace].deviceType = deviceSelect[itrace].value;\n            devInfo[itrace].name = nameSelect[itrace].value;\n            devInfo[itrace].attr = attrSelect[itrace].value;\n\n        }\n        function clearNameOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (nameSelect[itrace].firstChild)\n            {\n                nameSelect[itrace].removeChild(nameSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            nameSelect[itrace].appendChild(opt);\n            clearAttrOptionList(itrace);\n        }\n        function clearAttrOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (attrSelect[itrace].firstChild)\n            {\n                attrSelect[itrace].removeChild(attrSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            attrSelect[itrace].appendChild(opt);\n            \n        }\n        function getArchiveData()\n        {\n\n            archiveRequestList = [];\n            archiveList = [];\n            startDate = new Date($( \"#startDate\" ).val()).getTime();\n            stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (devInfo[itrace].attr.length > 0) \n                {\n                    archiveRequestList[traceCount] = \n                    {\n                        deviceType  : devInfo[itrace].deviceType, \n                        name        : devInfo[itrace].name, \n                        prop        : devInfo[itrace].prop, \n                        attr        : devInfo[itrace].attr,\n                        startDate: startDate, \n                        stopDate: stopDate,\n                        itrace  :   itrace\n                    };\n                    ++traceCount;\n                }\n            }\n            if (traceCount < 1) return;\n            $('#plotSetupTable').hide();\n            $('#timePlotCard').hide();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#csv'+ itrace.toString()).removeAttr(\"href\");\n                $('#csv'+ itrace.toString()).css('color', 'black');\n                $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n                $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n            }\n            messageDialog('Alert', 'Wait!', 'Requesting data ...');\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var maxPtsToPlot = Number($( \"#maxPtsToPlot\" ).val());\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0],\n                    maxPtsToPlot: maxPtsToPlot\n                };\n            sendActionMsg('getArchiveValues', 'readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function plotArchive()\n        {\n            $( \"#messageDialog\" ).dialog('close');\n            $('#plotSetupTable').show();\n            \n            $('#plotViewButtons').show();\n            $('#timePlot').show();\n            makeCsvFile();\n            var npts = archiveList[0].trace.length;\n            var oodataArray = [];\n            \n            var nxMax = archiveList[0].trace[0].value[0].length;\n            for (var ii = 0; ii < npts; ++ii)\n            {\n                var yvalue = Math.round((archiveList[0].trace[ii].timeStamp - archiveList[0].trace[0].timeStamp)/3600) / 1000;\n                for (var ix = 0; ix < nxMax; ++ix)\n                {\n                    var zvalue = archiveList[0].trace[ii].value[1][ix];\n                    oodataArray[ii * nxMax + ix] =\n                    {\n                        'x': archiveList[0].trace[ii].value[0][ix],\n                        'y': yvalue,\n                        'z': zvalue,\n                        'style': zvalue\n                    };\n                }\n            }\n            var options = \n            {\n                width:  '100%',\n                height: '800px',\n                style: 'surface',\n                showPerspective: false,\n                showGrid: true,\n                showShadow: false,\n                keepAspectRatio: false,\n                verticalRatio: 1.0,\n                showZAxis: true,\n                yCenter: '50%',\n                xLabel: 'x',\n                yLabel: 'Time (hr)',\n                zLabel: 'y',\n                tooltip: true,\n                axisColor: '#000000'\n            };\n        \n            // create a graph3d\n            var container = document.getElementById('timePlot');\n        \n            graph3d = new vis.Graph3d(container, oodataArray, options);\n            var horzAngle = 0 * 3.1415927 / 180.0;\n            var vertAngle = 90 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n        }\n        function changePlotView(horzAngleDeg, vertAngleDeg)\n        {\n            var horzAngle = horzAngleDeg * 3.1415927 / 180.0;\n            var vertAngle = vertAngleDeg * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n        }\n        function makeCsvFile ()\n        {\n            var itrace = 0;\n            var dataString = '';\n            var startT = archiveList[0].trace[0].timeStamp;\n        \n            dataString = dataString + 'Device,' + devInfo[0].deviceType + ',' + devInfo[0].name + ',' + devInfo[0].prop + ',' + devInfo[0].attr  +'\\n';\n            dataString = dataString + 'StartDate,' + new Date(startT).toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}) + '\\n';\n            dataString = dataString + 'StartDate (mS),' + startT.toString() + '\\n';\n            dataString = dataString + 'Time (sec),  \\n 0,x';\n            for (var ipt = 0; ipt < archiveList[0].trace[0].value[0].length; ++ipt) dataString = dataString + ',' + archiveList[0].trace[0].value[0][ipt];\n            dataString = dataString + '\\n';\n\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n\n                var x = (archiveList[0].trace[ii].timeStamp - startT) / 1000;\n                dataString = dataString + x.toString() + ',y';\n                for (var ipt = 0; ipt < archiveList[0].trace[ii].value[1].length; ++ipt) dataString = dataString + ',' + archiveList[0].trace[ii].value[1][ipt];\n                dataString = dataString + '\\n';\n            }\n            var data = new Blob([dataString], {type: 'text/plain'});\n        \n            // If we are replacing a previously generated file we need to\n            // manually revoke the object URL to avoid memory leaks.\n            if (csvFile[itrace] !== null) {\n              window.URL.revokeObjectURL(csvFile[itrace]);\n            }\n        \n            csvFile[itrace] = window.URL.createObjectURL(data);\n            // returns a URL you can use as a href\n            $('#csv'+ itrace.toString()).css('color', 'blue');\n            $('#csv'+ itrace.toString()).css('text-decoration', 'underline');\n            $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n            $('#csv'+ itrace.toString()).attr(\"href\", csvFile[itrace]);\n            $('#csv'+ itrace.toString()).attr(\"download\", devInfo[itrace].deviceType + '-' + devInfo[itrace].name + '-' + devInfo[itrace].prop + '-' + devInfo[itrace].attr + '.csv');\n        \n        }\n",
        "output": "str",
        "x": 650,
        "y": 140,
        "wires": [
            [
                "49e3f3a3.2fac0c"
            ]
        ]
    },
    {
        "id": "e01d1110.ea59",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vector Archive Plotter",
        "output": "str",
        "x": 950,
        "y": 140,
        "wires": [
            [
                "7bae9ecc.c5e5b"
            ]
        ]
    },
    {
        "id": "7bae9ecc.c5e5b",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"5%\" align=\"center\"><span class=\"tableHeading \">Tr</span></td>\n                <td width=\"30%\" align=\"center\"><span class=\"tableHeading \">Device</span></td>\n                <td width=\"30%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                <td width=\"30%\" align=\"center\"><span class=\"tableHeading \">Attr</span></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv0' href='' target='_blank' download=\"data0.csv\" class=\"csv-linked\">1</a>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"deviceSelect0\" onchange=\"deviceSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div id='plotSetup'>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotSetupTable'>\n                    <tr>\n                        <td width=10% align=\"center\" class=\"tableHeading\">Max Plot Pts</td>\n                        <td width=20% align=\"center\" class=\"tableHeading\">Start</td>\n                        <td width=20% align=\"center\" class=\"tableHeading\">Stop</td>\n                        <td width=10% align=\"center\"></td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"maxPtsToPlot\" type=\"text\" value=\"500\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getArchiveData()\">Get Data</button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n       </div>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotTable'>\n                    <tr valign=\"top\">\n                        <td width='5%'>\n                            <table id='plotViewButtons'>\n                                <tr>\n                                    <td>\n                                        <button class=\"btn jumbotron-button btn-block\" id=\"birdsEyeButton\" type=\"button\" onclick=\"changePlotView(315,45)\">Birds Eye</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <button class=\"btn jumbotron-button btn-block\" id=\"overviewButton\" type=\"button\" onclick=\"changePlotView(0,90)\" >Overview</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <button class=\"btn jumbotron-button btn-block\" id=\"xviewButton\"    type=\"button\" onclick=\"changePlotView(0,0)\"  >X View</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                        <td width='95%' >\n                            <div id=\"timePlot\" width=\"100%\" class=\"plot\"></div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 1070,
        "y": 140,
        "wires": [
            [
                "a2e15003.8612b"
            ]
        ]
    },
    {
        "id": "4caf3fb1.f3572",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "maxDbSize",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "maxDbSize",
        "payload": "MAXDBSIZE",
        "payloadType": "env",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "2208dd06.5d2ba2"
            ]
        ]
    },
    {
        "id": "2208dd06.5d2ba2",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Save maxDbSize",
        "func": "global.set(msg.topic,Number(msg.payload));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "f62ae826.1bfb58",
        "type": "mqtt in",
        "z": "8475ab9.3d26058",
        "name": "Subscribe Readings",
        "topic": "$(ARCHIVETOPIC)",
        "qos": "0",
        "datatype": "auto",
        "broker": "84d80994.260508",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "764116fd.f6e648"
            ]
        ]
    },
    {
        "id": "2132a017.ba23f",
        "type": "mqtt out",
        "z": "8475ab9.3d26058",
        "name": "Publish Setting",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "84d80994.260508",
        "x": 1120,
        "y": 420,
        "wires": []
    },
    {
        "id": "347f36fe.94ed7a",
        "type": "function",
        "z": "e13648d6.d698c8",
        "name": "Setup accessLog Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n    } \n};\nvar queryFilter = \n{\n    userID: msg.userID\n}\nvar settingLogEntry = {topic:msg.topic, userID: msg.userID, device:msg.payload, timeStamp: new Date().getTime(),username:msg.username};\nvar newMsg = \n{\n    topic           : 'getAccessLog',\n    payload         : [queryFilter, projectionFilter],\n    settingLogEntry : settingLogEntry\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 160,
        "wires": [
            [
                "e24c42fb.5b61a"
            ]
        ]
    },
    {
        "id": "e24c42fb.5b61a",
        "type": "mongodb3 in",
        "z": "e13648d6.d698c8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "findOne",
        "x": 500,
        "y": 160,
        "wires": [
            [
                "c006fe2c.abbb1"
            ]
        ]
    },
    {
        "id": "c006fe2c.abbb1",
        "type": "function",
        "z": "e13648d6.d698c8",
        "name": "setup settingLogEntry",
        "func": "var settingLogEntry = \n{\n    topic       :   msg.settingLogEntry.topic, \n    userID      :   msg.settingLogEntry.userID,\n    device      :   msg.settingLogEntry.device,\n    timeStamp   :   msg.settingLogEntry.timeStamp,\n    username    :   msg.settingLogEntry.username,\n    ipInfo      :   msg.payload\n}\nreturn {topic: 'settingLogEntry', payload: settingLogEntry};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 160,
        "wires": [
            [
                "9c60f57c.b85078"
            ]
        ]
    },
    {
        "id": "9c60f57c.b85078",
        "type": "mongodb3 in",
        "z": "e13648d6.d698c8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "settingsLog",
        "operation": "insertOne",
        "x": 990,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "ee0ee61b.770a18",
        "type": "subflow:e13648d6.d698c8",
        "z": "8475ab9.3d26058",
        "x": 1110,
        "y": 380,
        "wires": []
    },
    {
        "id": "2e134ccf.236a14",
        "type": "subflow:e13648d6.d698c8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 1350,
        "y": 500,
        "wires": []
    },
    {
        "id": "b9df3f26.ab53f",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n{{{payload.head}}}\n  </head>\n  <body>\n{{{payload.navBar}}}\n{{{payload.body}}}\n{{{payload.foot}}}\n  </body>\n</html>",
        "output": "str",
        "x": 1150,
        "y": 40,
        "wires": [
            [
                "d1d9e12b.926ff"
            ]
        ]
    },
    {
        "id": "895ba39c.86e59",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Foot",
        "field": "payload.foot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div id=\"acknowledgeDialog\" title=\"Acknowledge\" class='card'>\n        <p class='card-title' id='acknowledgeDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='acknowledgeDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"optionDialog\" title=\"Option\" class='card'>\n        <p class='card-title' id='optionDialogTitle'>Choice</p>\n        <div class='card-body'>\n            <p class='tableText' id='optionDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"messageDialog\" title=\"Message\" class='card'>\n        <p class='card-title' id='messageDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='messageDialogText'>Text</p>\n        </div>\n    </div>\n    <script src=\"/scripts/popper.js\"></script>\n    <script src=\"/scripts/bootstrap.js\"></script>",
        "output": "str",
        "x": 690,
        "y": 40,
        "wires": [
            [
                "a9a62959.7c01e8"
            ]
        ]
    },
    {
        "id": "aa17ff35.7cdfd",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Head",
        "field": "payload.head",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <meta charset=\"UTF-8\">\n    <link rel=\"icon\" href=\"/img/favicon.ico?v=4\" type=\"image/x-icon\"/>\n    <title>{{payload.title}}</title>\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui-timepicker-addon.css\"/>\n    <script src=\"/jquery/jquery.js\"></script>\n    <script src=\"/jquery/jquery-ui.js\"></script>\n    <script src=\"/jquery/jquery-ui-timepicker-addon.js\"></script>\n    <script src=\"/scripts/plotly-latest.min.js\"></script>\n    <script src=\"/scripts/pako.min.js\"></script>\n{{{payload.extraScripts}}}\n    <style>\n{{{payload.css}}}\n    </style>\n    <style>\n{{{payload.extraCss}}}\n    </style>\n    <script>\n{{{payload.utilityScripts}}}\n    </script>\n    <script>\n{{{payload.javascript}}}\n    </script>",
        "output": "str",
        "x": 570,
        "y": 40,
        "wires": [
            [
                "895ba39c.86e59"
            ]
        ]
    },
    {
        "id": "d1d9e12b.926ff",
        "type": "http response",
        "z": "ca529822.9112f8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1290,
        "y": 40,
        "wires": []
    },
    {
        "id": "c4ed2505.8c07e8",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Utility Scripts",
        "field": "payload.utilityScripts",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var remoteApp = true;\n        var ws;\n        var userID = -1;\n        var useWebSocketsFlag = true;\n        var project = '{{{payload.project}}}';\n        var heartBeatImage = false;\n        var wsUri = '';\n        var wsConnected = false;\n\n        function setRemoteApp(remoteAppSet)\n        {\n            remoteApp  = remoteAppSet;\n        }\n        function webSocketConnected()\n        {\n            return wsConnected;\n        }\n        function useWebSockets(webSocketsFlag)\n        {\n            useWebSocketsFlag = webSocketsFlag;\n        }\n        function wsConnectC()\n        {\n            if (!useWebSocketsFlag)\n            {\n                return;\n            }\n            if (wsUri.length < 1)\n            {\n                var uri = window.location.href.split('://');\n                var wslead = 'ws://';\n                if (uri[0] == 'https') wslead = 'wss://';\n                var questionLocation = uri[1].indexOf('?');\n                if (questionLocation >= 0)\n                {\n                    uri[1] = uri[1].substring(0,questionLocation);\n//                    console.log(uri[1]);\n                }\n                if (uri[1].indexOf('/') < (uri[1].length - 1))\n                {\n                    wsUri = wslead + uri[1] + '/websocket';\n                }\n                else\n                {\n                    wsUri = wslead + uri[1] + 'websocket';\n                }\n            }\n            ws = new WebSocket(wsUri);\n            ws.onmessage = function(event)\n            {\n                onWebSocketMessage(JSON.parse(event.data));\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                wsConnected = true;\n                $('#webSocketStatus').html('Open');\n                $('#reOpenWebSocketButton').hide();\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n                onWebSocketOpen();\n            };\n            ws.onclose = function()\n            {\n                console.log(\"Websocket closed\");\n                wsConnected = false;\n                $('#webSocketStatus').html('Closed');\n                $('#reOpenWebSocketButton').show();\n                $('#webSocketStatusCard').show();\n                $('#webSocketStatusRow').css('padding-bottom','25px');\n                onWebSocketClose();\n                wsConnectC();\n            };\n        }\n\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        $( document ).ready(function()\n        {\n            userID  = {{{payload.userID}}};\n            if (!useWebSocketsFlag)\n            {\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n            }\n            wsConnectC();\n            onDocumentReady();\n       });\n        $( function() \n        {\n            $( \"#acknowledgeDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() { $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n            $( \"#messageDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:[]\n                });\n        } );\n        function optionDialog(headerText, title, text, buttonTexts, buttonFunctions)\n        {\n            var buttonDefinitions = [];\n            for (var ii = 0; ii < buttonTexts.length; ++ii)\n            {\n                buttonDefinitions[ii] = \n                    {\n                        text: buttonTexts[ii],\n                        click: buttonFunctions[ii],\n                        showText: false\n                    };\n            }\n            $( \"#optionDialog\" ).dialog( \"option\", \"title\", headerText );   \n            $( \"#optionDialog\" ).dialog( \"option\", \"buttons\", buttonDefinitions);\n            $( \"#optionDialogTitle\" ).html(title);\n            $( \"#optionDialogText\" ).html(text);\n            $( \"#optionDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#optionDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function acknowledgeDialog(headerText, title, text)\n        {\n            $( \"#acknowledgeDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#acknowledgeDialogTitle\" ).html(title);\n            $( \"#acknowledgeDialogText\" ).html(text);\n            $( \"#acknowledgeDialog\" ).dialog( \"open\" );\n        }\n        function messageDialog(headerText, title, text)\n        {\n            $( \"#messageDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#messageDialogTitle\" ).html(title);\n            $( \"#messageDialogText\" ).html(text);\n            $( \"#messageDialog\" ).dialog( \"open\" );\n        }\n        function heartbeat()\n        {\n            heartBeatImage = !heartBeatImage;\n            var heartBeatImageSrc = '/img/heartRed.png';\n            if (heartBeatImage) heartBeatImageSrc = '/img/heartPink.png';\n            $('#heartBeatID').attr('src',heartBeatImageSrc);\n        }\n        function getCookie(extension)\n        {\n            var cookies = document.cookie.split(';');\n            var token = null;\n            var cookieName = project + extension + \"=\";\n            for (var icookie = 0; icookie < cookies.length; ++icookie)\n            {\n                var index = cookies[icookie].indexOf(cookieName);\n                if (index >= 0)\n                {\n                    token = cookies[icookie].substring(index + cookieName.length);\n                }\n            }\n            return token;\n        }\n        function sendActionMsg(topic,role,actionMsg)\n        {\n            var roleToken = \"\";\n            if (remoteApp) roleToken  = getCookie('Role');\n            if (roleToken == null)\n            {\n                location.reload();\n                return;\n            }\n            var webSocketMsg = \n            {\n                topic     : topic,\n                payload   : actionMsg,\n                userID    : userID,\n                token     : getCookie('Role'),\n                role      : role\n            };\n            ws.send(JSON.stringify(webSocketMsg));\n        }\n",
        "output": "str",
        "x": 430,
        "y": 40,
        "wires": [
            [
                "aa17ff35.7cdfd"
            ]
        ]
    },
    {
        "id": "99bb1519.85fc18",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "Get project name and userID",
        "func": "function getRandomInt(max)\n{\n  return Math.floor(Math.random() * Math.floor(max));\n}\nmsg.payload['project'] = global.get('project')\nmsg.payload['userID'] = getRandomInt(32768);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 40,
        "wires": [
            [
                "c4ed2505.8c07e8"
            ]
        ]
    },
    {
        "id": "a9a62959.7c01e8",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "html.websocket",
        "field": "payload.html.websocket",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- websocket status HTML -->\n    <div width=\"100%\">\n        <div class='row' id='webSocketStatusRow' style='padding-bottom: 0px;'>\n            <div class='col-md-12' align='center'>\n\n                <div class='card' id='webSocketStatusCard' >\n                    <p class='card-title'>Web Socket Status</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Websocket Status</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <button class='btn card-button btn-block big-text' id='reOpenWebSocketButton' onclick=\"wsConnectC()\">Re-open</button>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='webSocketStatus' >Closed</span>\n                                   </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 840,
        "y": 40,
        "wires": [
            [
                "35ffcf83.1547"
            ]
        ]
    },
    {
        "id": "275c08.dff3c3f8",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/core",
        "url": "/core",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "49150800.c088c8"
            ]
        ]
    },
    {
        "id": "59315144.42ea4",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div class='container' width=\"100%\">\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarPlotter\" >Scalar Plotter</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarArchivePlotter\" >Scalar Archive Plotter</a>\n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarViewer\" >Scalar Viewer</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarAlarmScanner\" >Scalar Alarm Scanner</a> \n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/vectorPlotter\" >Vector Plotter</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/vectorArchivePlotter\" >Vector Archive Plotter</a>\n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/access-log\" >Access Log</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/settings-log\" >Settings Log</a>\n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-12' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/apps\" >Custom App Index</a> \n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 1030,
        "y": 60,
        "wires": [
            [
                "a9d47de1.dae3f"
            ]
        ]
    },
    {
        "id": "a9d47de1.dae3f",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Core Applications",
        "output": "str",
        "x": 1150,
        "y": 60,
        "wires": [
            [
                "1e988252.38bf7e"
            ]
        ]
    },
    {
        "id": "f1353403.af8cb8",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 890,
        "y": 60,
        "wires": [
            [
                "59315144.42ea4"
            ]
        ]
    },
    {
        "id": "2666eb47.cb2c24",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/access-log",
        "url": "/access-log",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "1e9bf28b.344d8d"
            ]
        ]
    },
    {
        "id": "c41bff2c.e8b63",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div id='querySetup'>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotSetupTable'>\n                    <tr>\n                        <td align=\"center\">\n                            <span>Start Date</span>\n                        </td>\n                        <td align=\"center\">\n                            <span>Stop Date</span>\n                        </td>\n                        <td align=\"center\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getData()\">Get Data</button>\n                        </td>\n                    </tr>\n                </table>\n                <table width='100%' id='accessLogTable'>\n                    <thead>\n                        <tr>\n                            <th width='10%'>url</th>\n                            <th width='10%'>ip</th>\n                            <th width='10%' >user</th>\n                            <th width='10%' >city</th>\n                            <th width='20%'>rdns</th>\n                            <th width='10%'>isp</th>\n                            <th width='10%'>Date</th>\n                            <th width='10%'>Time</th>\n                        </tr>\n                    </thead>\n                    <tbody id=\"accessLogTableBody\"></tbody>\n                </table>\n            </div>\n       </div>\n    </div>\n",
        "output": "str",
        "x": 1030,
        "y": 120,
        "wires": [
            [
                "56402369.244bec"
            ]
        ]
    },
    {
        "id": "56402369.244bec",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Access Log",
        "output": "str",
        "x": 1150,
        "y": 120,
        "wires": [
            [
                "e4c1258f.54e248"
            ]
        ]
    },
    {
        "id": "3836124.ae654ee",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(true);\n        function onDocumentReady()\n        {\n            var now = new Date();\n            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getAccessLog':\n                        displayData(msg);\n                        break;\n                    case 'permissionError':\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                        break;\n                    case 'loginExpired':\n                        location.reload();\n                        break;\n                    default:\n                    // code block\n                }\n            }\n        }\n        function getData()\n        {\n            var startDate = new Date($( \"#startDate\" ).val()).getTime();\n            var stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            $(\"#accessLogTableBody\").remove();\n            var actionMsg = \n                {\n                    startDate   : startDate,\n                    stopDate    : stopDate,\n                };\n            sendActionMsg('getAccessLog', 'readDatabase', actionMsg);\n\n        }\n        function displayData(msg)\n        {\n            console.log(msg)\n            var markup = '<tbody id=\"accessLogTableBody\">';\n            for (var ii = 0; ii < msg.payload.length; ++ii)\n            {\n                markup = markup + addRow(msg.payload[ii]);\n            }\n            markup = markup + '</tbody>';\n            $(\"#accessLogTable\").append(markup);\n        }\n\n        function addRow(record)\n        {\n            var markup = '<tr>';\n            markup = markup + '<td>' + record.url + '</td>';\n            markup = markup + '<td>' + record.ip + '</td>';\n            markup = markup + '<td>' + record.user + '</td>';\n            markup = markup + '<td>' + record.city + '</td>';\n            markup = markup + '<td>' + record.rdns + '</td>';\n            markup = markup + '<td>' + record.isp + '</td>';\n            markup = markup + '<td>' + new Date(record.timeStamp).toLocaleDateString() + '</td>';\n            markup = markup + '<td>' + new Date(record.timeStamp).toLocaleTimeString() + '</td>';\n            markup = markup + '</tr>';\n            return markup;\n            \n        }\n",
        "output": "str",
        "x": 890,
        "y": 120,
        "wires": [
            [
                "c41bff2c.e8b63"
            ]
        ]
    },
    {
        "id": "47b50e0.c7354f4",
        "type": "websocket in",
        "z": "90f83725.6dae08",
        "name": "/access-log/websocket",
        "server": "47794345.2e8b8c",
        "client": "",
        "x": 160,
        "y": 200,
        "wires": [
            [
                "d29bdb5c.25fd58"
            ]
        ]
    },
    {
        "id": "b9aba820.9dbf78",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Setup AccessLog Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id : 0, \n    } \n};\nvar queryFilter = \n{\n    timeStamp :\n    {\n        $gte: msg.payload.startDate,\n        $lte: msg.payload.stopDate\n    }\n}\nvar newMsg = \n{\n    topic           : 'getAccessLog',\n    userID          : msg.userID,\n    payload         : [queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 200,
        "wires": [
            [
                "aef63175.9e1f7"
            ]
        ]
    },
    {
        "id": "aef63175.9e1f7",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "find.toArray",
        "x": 920,
        "y": 200,
        "wires": [
            [
                "c60d9fa2.da0d4"
            ]
        ]
    },
    {
        "id": "c60d9fa2.da0d4",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic : msg.device.name,\n        payload:{\n            topic           : 'getAccessLog',\n            payload         : null,\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\n\nreturn {\n    payload:{\n        topic           : 'getAccessLog',\n        payload         : records,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1170,
        "y": 200,
        "wires": [
            [
                "7a08c826.6c9ca8"
            ]
        ]
    },
    {
        "id": "7a08c826.6c9ca8",
        "type": "websocket out",
        "z": "90f83725.6dae08",
        "name": "/access-log/websocket",
        "server": "47794345.2e8b8c",
        "client": "",
        "x": 1380,
        "y": 200,
        "wires": []
    },
    {
        "id": "7db6e983.ea0948",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/settings-log",
        "url": "/settings-log",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 300,
        "wires": [
            [
                "b213f397.94307"
            ]
        ]
    },
    {
        "id": "207a1450.67f23c",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div id='querySetup'>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotSetupTable'>\n                    <tr>\n                        <td align=\"center\">\n                            <span>Start Date</span>\n                        </td>\n                        <td align=\"center\">\n                            <span>Stop Date</span>\n                        </td>\n                        <td align=\"center\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getData()\">Get Data</button>\n                        </td>\n                    </tr>\n                </table>\n                <table width='100%' id='settingsLogTable'>\n                    <thead>\n                        <tr>\n                            <th width='10%' >url</th>\n                            <th width='10%' >device</th>\n                            <th width='10%' >ip</th>\n                            <th width='10%'  >user</th>\n                            <th width='10%'  >city</th>\n                            <th width='20%' >rdns</th>\n                            <th width='10%' >isp</th>\n                            <th width='10%' >Date</th>\n                            <th width='10%' >Time</th>\n                        </tr>\n                    </thead>\n                    <tbody id=\"settingsLogTableBody\"></tbody>\n                </table>\n            </div>\n       </div>\n   </div>\n    <div id=\"showDeviceDialog\" title=\"Device\" class='card'>\n        <p class='card-title' id='showDeviceDialogName'>Device</p>\n        <div class='card-body'>\n            <table id='showDeviceTable' width='100%'>\n                <thead>\n                    <tr>\n                        <th width='50%' >Attribute</th>\n                        <th width='50%' >Value</th>\n                    </tr>\n                </thead>\n                <tbody id=\"showDeviceTableBody\"></tbody>\n            </table>\n        </div>\n    </div>  ",
        "output": "str",
        "x": 1010,
        "y": 300,
        "wires": [
            [
                "c3c60f3c.51f22"
            ]
        ]
    },
    {
        "id": "c3c60f3c.51f22",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Settings Log",
        "output": "str",
        "x": 1130,
        "y": 300,
        "wires": [
            [
                "1f057b8c.e3a574"
            ]
        ]
    },
    {
        "id": "78d16800.4adc18",
        "type": "websocket in",
        "z": "90f83725.6dae08",
        "name": "/settings-log/websocket",
        "server": "fcd0f0f1.e1a0f",
        "client": "",
        "x": 160,
        "y": 380,
        "wires": [
            [
                "2f50dfa8.90179"
            ]
        ]
    },
    {
        "id": "8d3e512a.420f",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Setup SettingsLog Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id : 0, \n    } \n};\nvar queryFilter = \n{\n    timeStamp :\n    {\n        $gte: msg.payload.startDate,\n        $lte: msg.payload.stopDate\n    }\n}\nvar newMsg = \n{\n    topic           : 'getSettingsLog',\n    userID          : msg.userID,\n    payload         : [queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 380,
        "wires": [
            [
                "ce493245.30ca8"
            ]
        ]
    },
    {
        "id": "ce493245.30ca8",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "settingsLog",
        "operation": "find.toArray",
        "x": 920,
        "y": 380,
        "wires": [
            [
                "e1eb29b.c5c23d8"
            ]
        ]
    },
    {
        "id": "e1eb29b.c5c23d8",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic : msg.device.name,\n        payload:{\n            topic           : 'getSettingsLog',\n            payload         : null,\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\n\nreturn {\n    payload:{\n        topic           : 'getSettingsLog',\n        payload         : records,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1170,
        "y": 380,
        "wires": [
            [
                "89be3294.49e69"
            ]
        ]
    },
    {
        "id": "89be3294.49e69",
        "type": "websocket out",
        "z": "90f83725.6dae08",
        "name": "/settings-log/websocket",
        "server": "fcd0f0f1.e1a0f",
        "client": "",
        "x": 1390,
        "y": 380,
        "wires": []
    },
    {
        "id": "3ff05971.6144b6",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var settingsHistory = null;\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            var now = new Date();\n            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getSettingsLog':\n                        settingsHistory = msg.payload;\n                        displayData();\n                        break;\n                    case 'permissionError':\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                        break;\n                    case 'loginExpired':\n                        location.reload();\n                        break;\n                    default:\n                    // code block\n                }\n            }\n        }\n        function getData()\n        {\n            var startDate = new Date($( \"#startDate\" ).val()).getTime();\n            var stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            settingsHistory = null;\n            $(\"#settingsLogTableBody\").remove();\n            var actionMsg = \n                {\n                    startDate   : startDate,\n                    stopDate    : stopDate,\n                };\n            sendActionMsg('getSettingsLog', 'readDatabase', actionMsg);\n        }\n        function displayData()\n        {\n            var markup = '<tbody id=\"settingsLogTableBody\">';\n            for (var ii = 0; ii < settingsHistory.length; ++ii)\n            {\n                markup = markup + addRow(ii);\n            }\n            markup = markup + '</tbody>';\n            $(\"#settingsLogTable\").append(markup);\n        }\n\n        function addRow(ii)\n        {\n            var markup = '<tr>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.url + '</td>';\n            var topic = settingsHistory[ii].topic.split('/');\n            markup = markup + '<td>' \n                +  '<button onclick=\"displayDevice(' + ii.toString() + ')\">' + topic[1]  + '-' + topic[2] + '</button>' \n                + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.ip + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].username + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.city + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.rdns + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.isp + '</td>';\n            markup = markup + '<td>' + new Date(settingsHistory[ii].timeStamp).toLocaleDateString() + '</td>';\n            markup = markup + '<td>' + new Date(settingsHistory[ii].timeStamp).toLocaleTimeString() + '</td>';\n            markup = markup + '</tr>';\n            return markup;\n            \n        }\n        function displayDevice(index)\n        {\n\n            var time = new Date(settingsHistory[index].timeStamp).toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', '');\n\n            var topic = settingsHistory[index].topic.split('/');\n            $( \"#showDeviceDialogName\" ).html(topic[1]  + '-' + topic[2] + ' ' + time);\n            $( \"#showDeviceTableBody\" ).remove();\n            var markup = '<tbody id=\"showDeviceTableBody\">';\n\n            markup = markup +'<tr>';\n            markup = markup + '<td align=\"center\">' + settingsHistory[index].device.attr + '</td>';\n            markup = markup + '<td>' + settingsHistory[index].device.value.toString() + '</td>';\n            markup = markup + '</tr>';\n            markup = markup + '</tbody>';\n            $(\"#showDeviceTable\").append(markup);\n\n            $( \"#showDeviceDialog\" ).dialog( \"option\", \"title\", \"Device Setting\"); \n            $( \"#showDeviceDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#showDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Close\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n",
        "output": "str",
        "x": 870,
        "y": 300,
        "wires": [
            [
                "207a1450.67f23c"
            ]
        ]
    },
    {
        "id": "4140c1ee.dca18",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 700,
        "wires": [
            [
                "8bfd61eb.0f8f1"
            ]
        ]
    },
    {
        "id": "8bfd61eb.0f8f1",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "remove 127.0.0.1 from settings log",
        "func": "var queryFilter = \n{\n    'ipInfo.ip' : '127.0.0.1'\n}\nvar newMsg = \n{\n    topic           : 'remove127',\n    payload         : [queryFilter, null],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 700,
        "wires": [
            [
                "f7ff007a.8d8b"
            ]
        ]
    },
    {
        "id": "f7ff007a.8d8b",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "settingsLog",
        "operation": "removeMany",
        "x": 700,
        "y": 700,
        "wires": [
            [
                "ab1257ae.74fda8"
            ]
        ]
    },
    {
        "id": "ab1257ae.74fda8",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 940,
        "y": 700,
        "wires": []
    },
    {
        "id": "79a0dc4b.21aaa4",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 780,
        "wires": [
            [
                "d3d9bc03.02e38"
            ]
        ]
    },
    {
        "id": "d3d9bc03.02e38",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "remove 127.0.0.1 from access log",
        "func": "var queryFilter = \n{\n    'ip' : '127.0.0.1'\n}\nvar newMsg = \n{\n    topic           : 'remove127',\n    payload         : [queryFilter, null],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 780,
        "wires": [
            [
                "7ffae9ab.87bee8"
            ]
        ]
    },
    {
        "id": "7ffae9ab.87bee8",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "removeMany",
        "x": 700,
        "y": 780,
        "wires": [
            [
                "35a0f533.d24c2a"
            ]
        ]
    },
    {
        "id": "35a0f533.d24c2a",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 940,
        "y": 780,
        "wires": []
    },
    {
        "id": "1e988252.38bf7e",
        "type": "subflow:f22a539a.a67b3",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 1290,
        "y": 60,
        "wires": []
    },
    {
        "id": "e4c1258f.54e248",
        "type": "subflow:f22a539a.a67b3",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 1290,
        "y": 120,
        "wires": []
    },
    {
        "id": "1f057b8c.e3a574",
        "type": "subflow:f22a539a.a67b3",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 1270,
        "y": 300,
        "wires": []
    },
    {
        "id": "80b3fbd.ba21908",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getNameList",
        "func": "var newMsg = \n{\n    topic           : 'getNameList',\n    userID          : msg.userID,\n    payload         : [{deviceType:msg.payload.deviceType},{projection:{name:1, _id:0}}],\n    deviceType      : msg.payload.deviceType,\n    trace           : msg.payload.trace\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 340,
        "wires": [
            [
                "699dce99.1fe68"
            ]
        ]
    },
    {
        "id": "818972ac.61492",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "parse name list",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numNames = objectLength(msg.payload);\nvar nameList = [];\n\nfor (var iname = 0; iname < numNames; ++iname)\n{\n    nameList[iname] = msg.payload[iname].name;\n}\nreturn {\n    topic:'getNameList',\n    payload:{\n        topic           : 'getNameList',\n        nameList        : nameList,\n        userID          : msg.userID,\n        deviceType      : msg.deviceType,\n        trace           : msg.trace,\n    }\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 340,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "fa0c0cab.d9876",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "javascript.specialscalar",
        "field": "payload.javascript.specialscalar",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var editedTrace = -1;\n        \n        function onDocumentReadySpecial()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#setDeviceButton'+ itrace.toString()).hide();\n                $('#conDeviceButton'+ itrace.toString()).hide();\n            }\n        }\n        function onWebSocketMessageSpecial(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'getJwtToken':\n                    loadJwtToken(msg);\n                    break;\n                case 'settingAcknowledge':\n                    acknowledgeDialog('Acknowledge', 'Setting', msg.payload);\n                    break;\n                default:\n                // code block\n            }\n        }\n        $( function() \n        {\n            $( \"#setDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {disableButtons(false); sendSetting(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {disableButtons(false); $( this ).dialog( \"close\" ); permitGetDeviceValues = true;},\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        $( function() \n        {\n            $( \"#conDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {disableButtons(false); sendConfig(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {disableButtons(false); $( this ).dialog( \"close\" ); permitGetDeviceValues = true;},\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function disableButtons(disable)\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#setDeviceButton'+ itrace.toString()).attr('disabled',disable);\n                $('#conDeviceButton'+ itrace.toString()).attr('disabled',disable);\n            }\n        }\n        function setDevice(itrace)\n        {\n            permitGetDeviceValues = false;\n            editedTrace = itrace;\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\");    \n            $( \"#editDeviceDialogAttribute\").html(devInfo[itrace].deviceType + '-'  + devInfo[itrace].name + '-'  + devInfo[itrace].prop + '-'  + devInfo[itrace].attr);\n            var attr = devInfo[itrace].device[devInfo[itrace].attr];\n            $( \"#attrValue\").val(attr.value);\n            disableButtons(true);\n\n\n            $( \"#setDeviceDialog\" ).dialog( \"open\" );\n        }\n        function conDevice(itrace)\n        {\n            permitGetDeviceValues = false;\n            editedTrace = itrace;\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\");    \n            $( \"#editDeviceDialogAttribute\").html(devInfo[itrace].deviceType + '-'  + devInfo[itrace].name + '-'  + devInfo[itrace].prop + '-'  + devInfo[itrace].attr);\n            var attr = devInfo[itrace].device[devInfo[itrace].attr];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n            disableButtons(true);\n\n            $( \"#conDeviceDialog\" ).dialog( \"open\" );\n        }\n        function sendSetting()\n        {\n            var attr = devInfo[editedTrace].device[devInfo[editedTrace].attr];\n            if (isNaN($('#attrValue').val()))\n            {\n                permitGetDeviceValues = true;\n                acknowledgeDialog('Error', 'Entry not a number!', attr.attr);\n                return;\n            }\n\n            var actionMsg = \n                {\n                    topic   : project + '/' + devInfo[editedTrace].device.deviceType + '/' + devInfo[editedTrace].device.name + '/setting/setting',\n                    payload : {'attr': devInfo[editedTrace].attr, 'value':Number($( \"#attrValue\").val())}\n                };\n            sendActionMsg('sendSettingToMqtt','setting',actionMsg);\n\n            permitGetDeviceValues = true;\n        }\n        function sendConfig()\n        {\n            var attr = devInfo[editedTrace].device[devInfo[editedTrace].attr];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                permitGetDeviceValues = true;\n                acknowledgeDialog('Error', 'Entry not a number!', attr.attr);\n                return;\n            }\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            var actionMsg = \n                {\n                    topic   : project + '/' + devInfo[editedTrace].device.deviceType + '/' + devInfo[editedTrace].device.name + '/setting/config',\n                    payload :  devInfo[editedTrace].device\n                };\n            sendActionMsg('sendConfigToMqtt', 'setting',  actionMsg);\n            permitGetDeviceValues = true;\n        }\n        function loadDeviceValuesSpecial(data)\n        {\n        }\n        function clearAttrOptionListSpecial(itrace)\n        {\n            $('#setDeviceButton'+ itrace.toString()).hide();\n            $('#conDeviceButton'+ itrace.toString()).hide();\n        }\n        function attrSelectedSpecial(itrace)\n        {\n            if (devInfo[itrace].prop == 'setting') $('#setDeviceButton'+ itrace.toString()).show();\n            $('#conDeviceButton'+ itrace.toString()).show();\n\n        }\n\n",
        "output": "str",
        "x": 670,
        "y": 160,
        "wires": [
            [
                "93a819a0.6e9808"
            ]
        ]
    },
    {
        "id": "93a819a0.6e9808",
        "type": "subflow:df70f6f.9e4ed08",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "env": [],
        "x": 900,
        "y": 160,
        "wires": [
            [
                "64bfcc43.f50934"
            ]
        ]
    },
    {
        "id": "e98d4d33.bcca2",
        "type": "template",
        "z": "df70f6f.9e4ed08",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.javascript.specialscalar}}}\n{{{payload.javascript.scalardevicemenu}}}",
        "output": "str",
        "x": 420,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "da88a362.516c9",
        "type": "subflow:df70f6f.9e4ed08",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "env": [],
        "x": 900,
        "y": 40,
        "wires": [
            [
                "662fe630.391fd8"
            ]
        ]
    },
    {
        "id": "7d3145f.8eb39bc",
        "type": "subflow:df70f6f.9e4ed08",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "env": [],
        "x": 900,
        "y": 100,
        "wires": [
            [
                "c767ad27.32df7"
            ]
        ]
    },
    {
        "id": "78c1fcc3.ec6164",
        "type": "debug",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1270,
        "y": 880,
        "wires": []
    },
    {
        "id": "c143b50b.37c0a8",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getNameList",
        "func": "var newMsg = \n{\n    topic           : 'getNameList',\n    userID          : msg.userID,\n    payload         : [{deviceType:msg.payload.deviceType},{projection:{name:1, _id:0}}],\n    deviceType      : msg.payload.deviceType,\n    trace           : msg.payload.trace\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 300,
        "wires": [
            [
                "cca5ce34.ad466"
            ]
        ]
    },
    {
        "id": "7737092b.94fb48",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "parse name list",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numNames = objectLength(msg.payload);\nvar nameList = [];\n\nfor (var iname = 0; iname < numNames; ++iname)\n{\n    nameList[iname] = msg.payload[iname].name;\n}\nreturn {\n    topic:'getNameList',\n    payload:{\n        topic           : 'getNameList',\n        nameList        : nameList,\n        userID          : msg.userID,\n        deviceType      : msg.deviceType,\n        trace           : msg.trace,\n    }\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1440,
        "y": 280,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "aea924a9.6a9e68",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "",
        "url": "/device",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 960,
        "wires": [
            [
                "96140e28.f0af"
            ]
        ]
    },
    {
        "id": "fe60c45b.b5b258",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "findOne",
        "x": 1070,
        "y": 960,
        "wires": [
            [
                "5610900e.5ca0b"
            ]
        ]
    },
    {
        "id": "5610900e.5ca0b",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1250,
        "y": 960,
        "wires": []
    },
    {
        "id": "7db15dac.050a44",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Prep query",
        "func": "var queryMsg = \n[\n    {\n        $and    :\n        [\n            {\n                deviceType  :   msg.payload.deviceType\n            },\n            {\n                name        :   msg.payload.name\n            }\n        ]\n    },\n    {\n        projection: \n        {\n            _id :   0\n        }\n    }\n];\nmsg.payload = queryMsg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 870,
        "y": 960,
        "wires": [
            [
                "fe60c45b.b5b258"
            ]
        ]
    },
    {
        "id": "281ae8e3.adc998",
        "type": "comment",
        "z": "90f83725.6dae08",
        "name": "curl \"http://localhost:60427/device?deviceType=blinky-basic&name=01&token=$(< blinky-lite-v2-token.txt)\"",
        "info": "",
        "x": 420,
        "y": 880,
        "wires": []
    },
    {
        "id": "a3efdc0a.76eff",
        "type": "mongodb3 in",
        "z": "8475ab9.3d26058",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 610,
        "y": 740,
        "wires": [
            [
                "28d7885b.29ba58"
            ]
        ]
    },
    {
        "id": "c3761de5.51f6a",
        "type": "mqtt in",
        "z": "e17f7487.2a78e8",
        "name": "Subscribe Readings",
        "topic": "$(ARCHIVETOPIC)",
        "qos": "0",
        "datatype": "auto",
        "broker": "84d80994.260508",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "1de67fe2.40e2e"
            ]
        ]
    },
    {
        "id": "1de67fe2.40e2e",
        "type": "json",
        "z": "e17f7487.2a78e8",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 100,
        "wires": [
            [
                "2f6b8176.8101fe"
            ]
        ]
    },
    {
        "id": "2f6b8176.8101fe",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Split MQTT topic",
        "func": "var mqttArray = msg.topic.split('/');\nvar device = \n{\n    project     : mqttArray[0],\n    deviceType  : mqttArray[1],\n    name        : mqttArray[2],\n    prop        : mqttArray[3],\n};\nreturn {topic : msg.topic, mqttDevice : device, payload:msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 100,
        "wires": [
            [
                "fec4a75b.95ea48"
            ]
        ]
    },
    {
        "id": "ee4c177c.2435b8",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "parse topic",
        "func": "return {\n    topic   :msg.payload.name, \n    payload : \n    [\n        {\n            $and   :    \n            [\n                {\n                    deviceType : msg.payload.deviceType\n                },\n                {\n                    name : msg.payload.name\n                }\n            ]\n        }, \n        {\n            projection  :\n            {\n                _id :   0\n                \n            }\n        }\n    ],\n    'device'    :   msg.payload\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 100,
        "wires": [
            [
                "731fcbcd.96f0a4"
            ]
        ]
    },
    {
        "id": "4627d72c.810368",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "Prune every 2 hours",
        "repeat": "7200",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 520,
        "wires": [
            [
                "6d14548b.92e89c"
            ]
        ]
    },
    {
        "id": "6d14548b.92e89c",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "stats",
        "x": 400,
        "y": 520,
        "wires": [
            [
                "cdfc8294.43d83"
            ]
        ]
    },
    {
        "id": "eae07f83.bcf2c",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 940,
        "y": 520,
        "wires": [
            [
                "f226d7aa.824b28"
            ]
        ]
    },
    {
        "id": "cdfc8294.43d83",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Find Number of Records to cut",
        "func": "var maxDbSize = global.get('maxDbSize');\nif (maxDbSize == undefined) return null;\nif (msg.payload.size < maxDbSize) return null;\nvar cutRecords = Math.round( (msg.payload.size - 0.9 * maxDbSize) / msg.payload.avgObjSize);\nvar newMsg = \n{\n    topic           : 'test',\n    payload         : [{},{projection:{timeStamp:1, _id:0}}],\n    cutRecords      : cutRecords\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 520,
        "wires": [
            [
                "eae07f83.bcf2c"
            ]
        ]
    },
    {
        "id": "f226d7aa.824b28",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Find latest Time Stamp",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nvar timeStampList = [];\n\nfor (var idevice = 0; idevice < numDevices; ++idevice)\n{\n    timeStampList[idevice] = msg.payload[idevice].timeStamp;\n}\ntimeStampList.sort();\n\n\nvar newMsg = \n{\n    topic           : 'test',\n    payload         : [{timeStamp: {\"$lte\": timeStampList[msg.cutRecords]}},{projection:{timeStamp:1, _id:0}}],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 910,
        "y": 580,
        "wires": [
            [
                "6532f8b6.6c31b8"
            ]
        ]
    },
    {
        "id": "6532f8b6.6c31b8",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "removeMany",
        "x": 940,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "6c3053f6.dc3e9c",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 700,
        "wires": [
            [
                "729cd6f7.ca5578"
            ]
        ]
    },
    {
        "id": "729cd6f7.ca5578",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Find Device Type",
        "func": "var queryFilter = \n{\n    $and :\n    [\n        {\n            \"deviceType\": \"blinky-DS18B20\"\n        },\n        {\n            \"name\": \"03\"\n        },\n        {\n            \"tempA.value\" : -100\n        }\n    ] \n    \n}\nvar newMsg = \n{\n    topic           : 'getArchiveValues',\n    payload         :  [queryFilter,{projection:{timeStamp:1, _id:0}}]\n};\nreturn newMsg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 700,
        "wires": [
            [
                "cf34c25.b29984"
            ]
        ]
    },
    {
        "id": "cf34c25.b29984",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "removeMany",
        "x": 540,
        "y": 740,
        "wires": [
            [
                "4dd34a88.974344"
            ]
        ]
    },
    {
        "id": "2d28afa.778ba5",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 540,
        "y": 660,
        "wires": [
            [
                "4dd34a88.974344"
            ]
        ]
    },
    {
        "id": "4dd34a88.974344",
        "type": "debug",
        "z": "e17f7487.2a78e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 780,
        "y": 720,
        "wires": []
    },
    {
        "id": "29822a72.7731e6",
        "type": "JsonWebToken",
        "z": "2dba0745.a98d98",
        "name": "decrypt Token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 400,
        "y": 60,
        "wires": [
            [
                "f3358361.19029"
            ]
        ]
    },
    {
        "id": "3deefd6d.1dde92",
        "type": "function",
        "z": "2dba0745.a98d98",
        "name": "Check for Project Cookies",
        "func": "var projectCookie = msg.req.cookies[global.get('project') + 'Role'];\nif(projectCookie == undefined)\n{\n    msg.cookies = { };\n    msg.payload.errorMsg = \"Credentials needed\";\n    return [null,msg];\n}\nmsg.token = projectCookie;\nmsg.payload['roleToken'] = msg.token;\nreturn [msg,null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "29822a72.7731e6"
            ],
            [
                "c0be6557.9ceae8"
            ]
        ]
    },
    {
        "id": "f3358361.19029",
        "type": "function",
        "z": "2dba0745.a98d98",
        "name": "Check permitted roles",
        "func": "var tokenError = msg.error;\nif (tokenError != undefined)\n{\n    msg.payload.errorMsg = tokenError;\n    msg.cookies = { };\n    return [null,msg];\n}\nif (msg.token.expDate > 0)\n{\n    if (msg.token.expDate < new Date().getTime())\n    {\n        msg.payload.errorMsg = 'Login Expired. Please login again';\n        msg.cookies = { };\n        return [null,msg];\n    }\n}\nvar permittedRole = false;\nfor (irole = 0; irole < msg.payload.allowedRoles.length; ++irole)\n{\n    for (itoken = 0; itoken < msg.token.roles.length; ++itoken)\n    {\n        if (msg.token.roles[itoken] == msg.payload.allowedRoles[irole]) permittedRole = true;\n    }\n}\nif (!permittedRole)\n{\n    msg.payload.errorMsg = 'Credentials not valid for App';\n    msg.cookies = { };\n    return [null,msg];\n}\nmsg.payload['profile'] = JSON.stringify(msg.token);\nreturn [msg,null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 60,
        "wires": [
            [],
            [
                "c0be6557.9ceae8"
            ]
        ]
    },
    {
        "id": "3966deae.453262",
        "type": "subflow:2dba0745.a98d98",
        "z": "2d027d69.1fdeb2",
        "name": "",
        "x": 200,
        "y": 80,
        "wires": [
            [],
            [
                "6a38d804.df8fa8"
            ]
        ]
    },
    {
        "id": "6a38d804.df8fa8",
        "type": "subflow:8341090a.df9758",
        "z": "2d027d69.1fdeb2",
        "name": "",
        "x": 370,
        "y": 120,
        "wires": []
    },
    {
        "id": "8e411315.2b09f",
        "type": "subflow:2dba0745.a98d98",
        "z": "495f0879.c831c8",
        "name": "",
        "x": 200,
        "y": 80,
        "wires": [
            [],
            [
                "ecfe972c.7c72e8"
            ]
        ]
    },
    {
        "id": "ecfe972c.7c72e8",
        "type": "subflow:f22a539a.a67b3",
        "z": "495f0879.c831c8",
        "name": "",
        "x": 370,
        "y": 100,
        "wires": []
    },
    {
        "id": "3dbc8e22.aafca2",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/process-login",
        "url": "/process-login",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1640,
        "wires": [
            [
                "2623a5b9.60e51a"
            ]
        ]
    },
    {
        "id": "c7dcd2fd.f38ec",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "users",
        "operation": "findOne",
        "x": 510,
        "y": 1640,
        "wires": [
            [
                "d0b46e62.c61f3"
            ]
        ]
    },
    {
        "id": "2623a5b9.60e51a",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "user query",
        "func": "msg.userData = {cred : {}, url : msg.payload.url};\nmsg.userData.cred = \n{\n    username : msg.payload.username, \n    password : msg.payload.password,\n};\nmsg.payload =  [{username : msg.userData.cred.username },  {projection  :{_id :   0}}]\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 1640,
        "wires": [
            [
                "c7dcd2fd.f38ec"
            ]
        ]
    },
    {
        "id": "d0b46e62.c61f3",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check username",
        "func": "function isEmpty(obj) {\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\nif (isEmpty(msg.payload))\n{\n    delete msg.userData['cred'];\n    msg.payload.errorMsg = 'Error: Invalid Credentials';\n    return [msg, null];\n}\nvar pwcheck = \n{\n    \"topic\"     : \"checkPassword\",\n    \"txt\"       : msg.userData.cred.password,\n    \"hash\"      : msg.payload.password\n}\nmsg.payload.profile['expDate'] = -1;\nif ( msg.payload.profile.timeoutMin > 0)\n{\n    msg.payload.profile['expDate'] = new Date().getTime() + msg.payload.profile.timeoutMin * 60000;\n}\nmsg.payload.profile['username'] = msg.payload.username;\nmsg.userData.cred.profile = msg.payload.profile;\nmsg.payload = pwcheck;\nreturn [null,msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1640,
        "wires": [
            [
                "d1cf61fb.35fc1"
            ],
            [
                "2497b9a4.db7a46"
            ]
        ]
    },
    {
        "id": "2497b9a4.db7a46",
        "type": "bcrypt",
        "z": "90f83725.6dae08",
        "name": "decrypt password",
        "action": "verify",
        "field": "payload.txt",
        "hash": "payload.hash",
        "rounds": 10,
        "x": 930,
        "y": 1680,
        "wires": [
            [
                "25cbcda4.aaf522"
            ]
        ]
    },
    {
        "id": "25cbcda4.aaf522",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check password",
        "func": "if (msg.match == false)  \n{\n    delete msg.userData['cred'];\n    msg.payload.errorMsg = 'Error: Invalid Credentials';\n    return [msg, null];\n\n}\nmsg.payload = msg.userData.cred.profile;\ndelete msg.userData['cred'];\ndelete msg['match'];\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1680,
        "wires": [
            [
                "abf9b132.7c298"
            ],
            [
                "3abe79d2.fee286"
            ]
        ]
    },
    {
        "id": "3abe79d2.fee286",
        "type": "JsonWebToken",
        "z": "90f83725.6dae08",
        "name": "get Token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 940,
        "y": 1760,
        "wires": [
            [
                "26477e37.472222"
            ]
        ]
    },
    {
        "id": "c10f4686.4bfa58",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <h1 style=\"text-align:center;color:#415c71;\">{{{payload.errorMsg}}}</h1>\n    <form action=\"/process-login\" method=\"POST\">\n        <table align='center'>\n            <tr>\n                <td>\n                    <label for=\"username\" class=\"big-text\">User</label>\n                </td>\n                <td>\n                    <input name=\"username\" type=\"text\" class=\"big-text\"/>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label for=\"password\" class=\"big-text\">Password</label>\n                </td>\n                <td>\n                    <input name=\"password\" type=\"password\" class=\"big-text\"/>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                </td>\n                <td>\n                    <input type=\"submit\" class=\"btn jumbotron-button btn-block big-text bold-text\"/>\n                </td>\n            </tr>\n        </table>    \n        <input type=\"hidden\" name=\"url\" value=\"{{{userData.url}}}\" />\n    </form>  ",
        "output": "str",
        "x": 630,
        "y": 1540,
        "wires": [
            [
                "67f4ab6d.c1fd04"
            ]
        ]
    },
    {
        "id": "7e91110a.c2165",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Log-in",
        "output": "str",
        "x": 350,
        "y": 1540,
        "wires": [
            [
                "5a857f25.a6af6"
            ]
        ]
    },
    {
        "id": "aff12a21.2e53c8",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 210,
        "y": 1540,
        "wires": [
            [
                "7e91110a.c2165"
            ]
        ]
    },
    {
        "id": "67f4ab6d.c1fd04",
        "type": "subflow:8341090a.df9758",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 770,
        "y": 1540,
        "wires": []
    },
    {
        "id": "5a857f25.a6af6",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "basicYellow.png",
        "output": "str",
        "x": 490,
        "y": 1540,
        "wires": [
            [
                "c10f4686.4bfa58"
            ]
        ]
    },
    {
        "id": "26477e37.472222",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Set project cookie",
        "func": "msg.cookies = { };\nmsg.cookies[global.get('project') + 'Role'] = msg.token;\nmsg.cookies[global.get('project') + 'Username'] = msg.payload.username;\nmsg.cookies[global.get('project') + 'ExpDate'] = msg.payload.expDate;\nmsg.statusCode = 302;\nmsg.headers = {};\nmsg.headers.location = '/'\nvar previousUrl = msg.userData.url;\nif(previousUrl == undefined)\n{\n    msg.headers.location = '/'\n}\nelse\n{\n    msg.headers.location = previousUrl;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1110,
        "y": 1760,
        "wires": [
            [
                "fee60e7.48d0cf"
            ]
        ]
    },
    {
        "id": "fee60e7.48d0cf",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1270,
        "y": 1760,
        "wires": []
    },
    {
        "id": "e322d811.8b4178",
        "type": "link in",
        "z": "90f83725.6dae08",
        "name": "Login Error",
        "links": [
            "d1cf61fb.35fc1",
            "abf9b132.7c298"
        ],
        "x": 75,
        "y": 1540,
        "wires": [
            [
                "aff12a21.2e53c8"
            ]
        ]
    },
    {
        "id": "d1cf61fb.35fc1",
        "type": "link out",
        "z": "90f83725.6dae08",
        "name": "No User",
        "links": [
            "e322d811.8b4178"
        ],
        "x": 855,
        "y": 1620,
        "wires": []
    },
    {
        "id": "abf9b132.7c298",
        "type": "link out",
        "z": "90f83725.6dae08",
        "name": "Bad Password",
        "links": [
            "e322d811.8b4178"
        ],
        "x": 1315,
        "y": 1640,
        "wires": []
    },
    {
        "id": "ab328d8b.b827a",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "users",
        "operation": "insertOne",
        "x": 570,
        "y": 1860,
        "wires": [
            [
                "1965db8f.5178e4"
            ]
        ]
    },
    {
        "id": "1965db8f.5178e4",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 830,
        "y": 1860,
        "wires": []
    },
    {
        "id": "ba337c11.0eb2f",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Add User",
        "func": "var user = {\n    \"username\"  :   \"dmcginnis427\",\n    \"password\"  :   \"$2a$10$A0..ostRUI2TSke4/c.g8.B4afXgy.J1tCX0g7zOP07YBG1ntInm2\",\n    \"profile\"   :   \n    {\n        \"timeoutMin\"    :   15,\n        \"roles\"         :   [\"reading\",\"setting\",\"rsetting\",\"ping\",\"readDatabase\",\"renew\",\"appView\",\"coreView\"]\n        \n    }\n}\nreturn {topic:'user',payload:user};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 1860,
        "wires": [
            [
                "ab328d8b.b827a"
            ]
        ]
    },
    {
        "id": "297ec315.26eb4c",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1860,
        "wires": [
            [
                "ba337c11.0eb2f"
            ]
        ]
    },
    {
        "id": "ea16c2f2.cc51f",
        "type": "bcrypt",
        "z": "90f83725.6dae08",
        "name": "",
        "action": "encrypt",
        "field": "",
        "hash": "payload",
        "rounds": 10,
        "x": 310,
        "y": 1920,
        "wires": [
            [
                "b3869c42.e862d"
            ]
        ]
    },
    {
        "id": "78dde377.f2284c",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "TestEncrypt",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "maxlab2015",
        "payloadType": "str",
        "x": 170,
        "y": 1920,
        "wires": [
            [
                "ea16c2f2.cc51f"
            ]
        ]
    },
    {
        "id": "b3869c42.e862d",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 430,
        "y": 1920,
        "wires": []
    },
    {
        "id": "174053b9.1f51bc",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "TestVerify",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"txt\":\"zebograf\",\"hash\":\"$2a$10$NO0QftMJiHQPA8z7BmlFWOW0uajRSg3gP4Nq1IdwjEndxHRRihjkW\"}",
        "payloadType": "json",
        "x": 160,
        "y": 1980,
        "wires": [
            [
                "3a224a45.c10eb6"
            ]
        ]
    },
    {
        "id": "f1f8d58.a302028",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 430,
        "y": 1980,
        "wires": []
    },
    {
        "id": "3a224a45.c10eb6",
        "type": "bcrypt",
        "z": "90f83725.6dae08",
        "name": "",
        "action": "verify",
        "field": "payload.txt",
        "hash": "payload.hash",
        "rounds": 10,
        "x": 310,
        "y": 1980,
        "wires": [
            [
                "f1f8d58.a302028"
            ]
        ]
    },
    {
        "id": "781dbbc5.3a2e14",
        "type": "subflow:495f0879.c831c8",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 700,
        "y": 60,
        "wires": [
            [
                "f1353403.af8cb8"
            ]
        ]
    },
    {
        "id": "44733e49.ba7ec",
        "type": "subflow:495f0879.c831c8",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 700,
        "y": 120,
        "wires": [
            [
                "3836124.ae654ee"
            ]
        ]
    },
    {
        "id": "64665cab.c46c24",
        "type": "subflow:495f0879.c831c8",
        "z": "90f83725.6dae08",
        "name": "",
        "env": [],
        "x": 690,
        "y": 300,
        "wires": [
            [
                "3ff05971.6144b6"
            ]
        ]
    },
    {
        "id": "83301a46.e7b368",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 40,
        "wires": [
            [
                "5edcffd1.23572"
            ]
        ]
    },
    {
        "id": "5edcffd1.23572",
        "type": "subflow:495f0879.c831c8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 460,
        "y": 40,
        "wires": [
            [
                "7b9e1c55.c445c4"
            ]
        ]
    },
    {
        "id": "5fe2ee6b.e7801",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 160,
        "wires": [
            [
                "86c26641.91e478"
            ]
        ]
    },
    {
        "id": "86c26641.91e478",
        "type": "subflow:495f0879.c831c8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 460,
        "y": 160,
        "wires": [
            [
                "fa0c0cab.d9876"
            ]
        ]
    },
    {
        "id": "fac3ac47.cbce",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 220,
        "wires": [
            [
                "6141143b.207eec"
            ]
        ]
    },
    {
        "id": "6141143b.207eec",
        "type": "subflow:495f0879.c831c8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 460,
        "y": 220,
        "wires": [
            [
                "30fbb3de.45ba1c"
            ]
        ]
    },
    {
        "id": "bc63b66b.867d18",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 100,
        "wires": [
            [
                "87b81ba7.286ac8"
            ]
        ]
    },
    {
        "id": "87b81ba7.286ac8",
        "type": "subflow:495f0879.c831c8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 460,
        "y": 100,
        "wires": [
            [
                "3662caf5.96ce96"
            ]
        ]
    },
    {
        "id": "50b5b5d7.93c8ac",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 140,
        "wires": [
            [
                "bb1b3802.2e34b8"
            ]
        ]
    },
    {
        "id": "bb1b3802.2e34b8",
        "type": "subflow:495f0879.c831c8",
        "z": "b94899c9.b16088",
        "name": "",
        "x": 480,
        "y": 140,
        "wires": [
            [
                "fd934b09.f641b8"
            ]
        ]
    },
    {
        "id": "421bd3a6.9feaac",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 40,
        "wires": [
            [
                "1a4ad963.adfef7"
            ]
        ]
    },
    {
        "id": "1a4ad963.adfef7",
        "type": "subflow:495f0879.c831c8",
        "z": "b94899c9.b16088",
        "name": "",
        "x": 480,
        "y": 40,
        "wires": [
            [
                "6a7aaea9.6b97f"
            ]
        ]
    },
    {
        "id": "91235a13.6c4198",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Change device name",
        "func": "var newMsg = \n{\n    topic           : 'changeName',\n    payload         : [{ \"name\": \"demo02\"}, { $set: { \"name\" : \"Demo-02\" } }],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 300,
        "y": 880,
        "wires": [
            [
                "f40aa393.052ae"
            ]
        ]
    },
    {
        "id": "f40aa393.052ae",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "updateMany",
        "x": 550,
        "y": 880,
        "wires": [
            [
                "5d7e61b7.94062"
            ]
        ]
    },
    {
        "id": "36864c40.8e8b94",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 880,
        "wires": [
            [
                "91235a13.6c4198"
            ]
        ]
    },
    {
        "id": "5d7e61b7.94062",
        "type": "debug",
        "z": "e17f7487.2a78e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 880,
        "wires": []
    },
    {
        "id": "a5eca460.0e66c8",
        "type": "http in",
        "z": "a858ad3a.95706",
        "name": "/apps",
        "url": "/apps",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "433db7b4.42d728"
            ]
        ]
    },
    {
        "id": "1871f1b7.8fa49e",
        "type": "subflow:8341090a.df9758",
        "z": "a858ad3a.95706",
        "name": "",
        "x": 1190,
        "y": 140,
        "wires": []
    },
    {
        "id": "7d5c1f82.04cd2",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Apps",
        "output": "str",
        "x": 320,
        "y": 100,
        "wires": [
            [
                "5de7f76ee6d8655e"
            ]
        ]
    },
    {
        "id": "e7a2ef05.36c48",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "appsYellow.png",
        "output": "str",
        "x": 330,
        "y": 60,
        "wires": [
            [
                "7d5c1f82.04cd2"
            ]
        ]
    },
    {
        "id": "433db7b4.42d728",
        "type": "function",
        "z": "a858ad3a.95706",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView','coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "7413bfa1.a556d"
            ]
        ]
    },
    {
        "id": "7413bfa1.a556d",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "a858ad3a.95706",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "e7a2ef05.36c48"
            ]
        ]
    },
    {
        "id": "78a482dc.b332ac",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "insertOne",
        "x": 580,
        "y": 2060,
        "wires": [
            [
                "389f1443.3ce90c"
            ]
        ]
    },
    {
        "id": "389f1443.3ce90c",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 830,
        "y": 2060,
        "wires": []
    },
    {
        "id": "31c358e4.c01978",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Add device",
        "func": "var device = \n{\n  \"deviceType\": \"blinky-basic\",\n  \"name\": \"01\",\n  \"arcPeriod\": 60000,\n  \"timeStamp\": 1584283380359,\n  \"lastArchive\": 1584283329231,\n  \"ledState\": {\n    \"action\": \"reading\",\n    \"type\": \"scalar\",\n    \"value\": 0,\n    \"unit\": \"unit\",\n    \"alarm\": {\n      \"value\": 0,\n      \"limits\": {\n        \"lolo\": -2,\n        \"low\": -1,\n        \"high\": 2,\n        \"hihi\": 3\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"linkQuality\": {\n    \"action\": \"reading\",\n    \"type\": \"scalar\",\n    \"value\": 52,\n    \"unit\": \"/70\",\n    \"alarm\": {\n      \"value\": 0,\n      \"limits\": {\n        \"lolo\": 30,\n        \"low\": 40,\n        \"high\": 71,\n        \"hihi\": 80\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"signalLevel\": {\n    \"action\": \"reading\",\n    \"type\": \"scalar\",\n    \"value\": -58,\n    \"unit\": \"dBm\",\n    \"alarm\": {\n      \"value\": 0,\n      \"limits\": {\n        \"lolo\": -70,\n        \"low\": -60,\n        \"high\": 0,\n        \"hihi\": 30\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"ledOn\": {\n    \"action\": \"setting\",\n    \"type\": \"scalar\",\n    \"value\": 1,\n    \"unit\": \"unit\",\n    \"alarm\": {\n      \"value\": 0,\n      \"limits\": {\n        \"lolo\": -2,\n        \"low\": -1,\n        \"high\": 2,\n        \"hihi\": 3\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"ledToggle\": {\n    \"action\": \"setting\",\n    \"type\": \"scalar\",\n    \"value\": 0,\n    \"unit\": \"unit\",\n    \"alarm\": {\n      \"value\": 0,\n      \"limits\": {\n        \"lolo\": -2,\n        \"low\": -1,\n        \"high\": 2,\n        \"hihi\": 3\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"loopDelay\": {\n    \"action\": \"setting\",\n    \"type\": \"scalar\",\n    \"value\": 500,\n    \"unit\": \"unit\",\n    \"alarm\": {\n      \"value\": 0,\n      \"limits\": {\n        \"lolo\": 0,\n        \"low\": 0,\n        \"high\": 20000,\n        \"hihi\": 30000\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  }\n};\nreturn {topic:'user',payload:device};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 370,
        "y": 2060,
        "wires": [
            [
                "78a482dc.b332ac"
            ]
        ]
    },
    {
        "id": "c3990995.c6ea18",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 2060,
        "wires": [
            [
                "31c358e4.c01978"
            ]
        ]
    },
    {
        "id": "81c39fe.b208a6",
        "type": "switch",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "payload.mqttDevice.deviceType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "blinky-modbus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-power-mon",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-stepper",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-beadpull",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-scale",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "espotPrice",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 510,
        "y": 180,
        "wires": [
            [
                "4a0e93c9.98b4fc"
            ],
            [
                "76b3cf58f503afba"
            ],
            [
                "ff51cbb44f28111e"
            ],
            [
                "19829ced5affe7c9"
            ],
            [
                "97b56364e8f8efec"
            ],
            []
        ]
    },
    {
        "id": "764116fd.f6e648",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Split MQTT topic",
        "func": "var mqttArray = msg.topic.split('/');\nvar device = \n{\n    project     : mqttArray[0],\n    deviceType  : mqttArray[1],\n    name        : mqttArray[2],\n    prop        : mqttArray[3],\n};\nreturn {topic : msg.topic, payload:{topic:'readings', mqttDevice : device, payload:msg.payload}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 180,
        "wires": [
            [
                "81c39fe.b208a6"
            ]
        ]
    },
    {
        "id": "b6b8b063.9f62f",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Setup Archive Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n        deviceType                  :   1,  \n        name                        :   1,  \n        timeStamp                   :   1 \n    } \n};\nfor (var ii = 0; ii < msg.payload.device.attr.length; ++ii)\n{\n    projectionFilter.projection[msg.payload.device.attr[ii]] = 1;\n}\nvar queryFilter = \n{\n    $and :\n    [\n        {\n            deviceType: msg.payload.device.deviceType\n        },\n        {\n            name: msg.payload.device.name\n        },\n        {\n            timeStamp :\n            {\n                $gte: msg.payload.device.startDate,\n                $lte: msg.payload.device.stopDate\n            }\n        }\n    ] \n    \n}\nvar newMsg = \n{\n    topic           : msg.topic,\n    userID          : msg.userID,\n    payload         : [queryFilter, projectionFilter],\n    device          : msg.payload.device,\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 740,
        "wires": [
            [
                "a3efdc0a.76eff"
            ]
        ]
    },
    {
        "id": "28d7885b.29ba58",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic : msg.device.deviceType,\n        payload:{\n            topic           : msg.topic,\n            payload         : {device: msg.device, trace:null},\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\nvar trace = [];\nfor (var ii = 0; ii < numRecords; ++ii)\n{\n    trace[ii] = {timeStamp: records[ii].timeStamp};\n    for (var ij = 0; ij < msg.device.attr.length; ++ij)\n    {\n        trace[ii][msg.device.attr[ij]] = records[ii][msg.device.attr[ij]];\n    }\n}\n\nreturn {\n    topic : msg.device.deviceType,\n    payload:{\n        topic           : msg.topic,\n        payload         : {device: msg.device, trace: trace},\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 740,
        "wires": [
            [
                "36088082.3139d"
            ]
        ]
    },
    {
        "id": "36088082.3139d",
        "type": "switch",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "blinky-modbus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-power-mon",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-stepper",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-beadpull",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-scale",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "espotPrice",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 1050,
        "y": 740,
        "wires": [
            [
                "7011908d.95c51"
            ],
            [
                "ab40734a9039d27b"
            ],
            [
                "2e079a098c3745e9"
            ],
            [
                "9fe517e47c90283b"
            ],
            [
                "5eef535208c9625b"
            ],
            [
                "df90abfd748bbd25"
            ]
        ]
    },
    {
        "id": "4bda293b.6a4c38",
        "type": "switch",
        "z": "8475ab9.3d26058",
        "name": "Action Switch",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "setting",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ping",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "config",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "readDatabase",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "renew",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 680,
        "y": 460,
        "wires": [
            [
                "d6984859.a267c8"
            ],
            [
                "332bf8c3d3829b95"
            ],
            [
                "332bf8c3d3829b95"
            ],
            [
                "332bf8c3d3829b95"
            ],
            [
                "cc1f29ab.67bb78"
            ],
            [
                "14b7f9da.2d7c86"
            ]
        ]
    },
    {
        "id": "1e710224.de723e",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "Action Error Message Out",
        "links": [
            "7e343bf8.8fec14",
            "80b48a2e.fb2228",
            "d0705889.a79d18",
            "a8a88b3.a878478",
            "4d17b368.0e74ac",
            "3b3f00c.e1f7e",
            "c7b674e2.931c88",
            "6d4ae2aa.ffa1cc",
            "ae6d0749.651b58",
            "d8b0e2fe.3e47e",
            "ebb358f3.95c638",
            "bf657e74.6ac66",
            "ffb80136.883f8",
            "9ef4d388.4bcf7",
            "80c07ebe.4f177",
            "8c18e9cd.f40f08",
            "435b9182.cc3ac",
            "8d0f331.1da14d",
            "b7a01bb7.010988",
            "fb8b1545.8b1a38",
            "0ed0e6d8928c14de",
            "3d0299782e275c92",
            "de21e03a7ded2d46",
            "ee630ac232b19d93",
            "355850f24ee88a60",
            "a8eff39aaa50d4ee",
            "3906b8f2c8f56585",
            "a61d9213f6edc11c"
        ],
        "x": 815,
        "y": 580,
        "wires": []
    },
    {
        "id": "49150800.c088c8",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 60,
        "wires": [
            [
                "781dbbc5.3a2e14"
            ]
        ]
    },
    {
        "id": "1e9bf28b.344d8d",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 120,
        "wires": [
            [
                "44733e49.ba7ec"
            ]
        ]
    },
    {
        "id": "b213f397.94307",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 300,
        "wires": [
            [
                "64665cab.c46c24"
            ]
        ]
    },
    {
        "id": "cc1f29ab.67bb78",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "readDatabase out",
        "links": [
            "c4595efc.a717b"
        ],
        "x": 815,
        "y": 480,
        "wires": []
    },
    {
        "id": "c4595efc.a717b",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "Setup Archive in",
        "links": [
            "cc1f29ab.67bb78",
            "8257a0f.6bb886",
            "a66aeb44.77e748",
            "e826b9af.41ca18",
            "38378280.30819e",
            "1ba08149.e5642f",
            "c7ccca02.902f08",
            "8a054338.b6be3",
            "7ceba2d4.4dcf3c",
            "721a7865.6ff7e8",
            "3d600dd.1fe0cf2",
            "d958fbdd.fe1e48",
            "a92d4c9a.7f5e4"
        ],
        "x": 195,
        "y": 740,
        "wires": [
            [
                "b6b8b063.9f62f"
            ]
        ]
    },
    {
        "id": "54f691be.e6b47",
        "type": "json",
        "z": "fee416c.fb205e8",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 200,
        "y": 80,
        "wires": [
            [
                "7de7a240.cf57fc"
            ]
        ]
    },
    {
        "id": "7de7a240.cf57fc",
        "type": "function",
        "z": "fee416c.fb205e8",
        "name": "Shift msg",
        "func": "return msg.payload;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 80,
        "wires": [
            [
                "632b2f1c.15e43"
            ]
        ]
    },
    {
        "id": "632b2f1c.15e43",
        "type": "JsonWebToken",
        "z": "fee416c.fb205e8",
        "name": "roleToken",
        "tokenconfig": "6acefdd9.69f124",
        "x": 480,
        "y": 80,
        "wires": [
            [
                "92d40c38.2026a"
            ]
        ]
    },
    {
        "id": "92d40c38.2026a",
        "type": "function",
        "z": "fee416c.fb205e8",
        "name": "Check Role",
        "func": "var errMsg = null;\nvar tokenError = msg.error;\nif (tokenError != undefined)\n{\n    errMsg = \n    {\n        topic : msg.topic, \n        payload:\n        {\n            topic:'badToken', \n            payload: msg.topic + \" badToken\",\n            userID : msg.userID,\n            role   : msg.role\n        }\n    };\n    return [null,errMsg];\n}\nif (msg.token.expDate > 0)\n{\n    if (msg.token.expDate < new Date().getTime())\n    {\n        errMsg = \n        {\n            topic : msg.topic, \n            payload:\n            {\n                topic:'loginExpired', \n                payload: msg.topic + \" login expired\",\n                userID : msg.userID,\n                role   : msg.role\n            }\n        };\n        return [null,errMsg];\n    }\n}\npermittedRole = false;\nfor (itoken = 0; itoken < msg.token.roles.length; ++itoken)\n{\n    if (msg.token.roles[itoken] == msg.role) permittedRole = true;\n}\nif (permittedRole) return [msg,null];\n\nerrMsg = \n{\n    topic : msg.topic, \n    payload:\n    {\n        topic  : 'permissionError', \n        payload: msg.topic + \" not permitted\",\n        userID : msg.userID,\n        role   : msg.role\n    }\n};\n\nreturn [null,errMsg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 630,
        "y": 80,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e6d1a4ad.2186e8",
        "type": "subflow:fee416c.fb205e8",
        "z": "8475ab9.3d26058",
        "x": 510,
        "y": 560,
        "wires": [
            [
                "4bda293b.6a4c38"
            ],
            [
                "1e710224.de723e"
            ]
        ]
    },
    {
        "id": "e6871441.93cb88",
        "type": "subflow:fee416c.fb205e8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 350,
        "y": 380,
        "wires": [
            [
                "f445d1dd.72e4"
            ],
            [
                "192cf6bb.b61fc9"
            ]
        ]
    },
    {
        "id": "192cf6bb.b61fc9",
        "type": "link out",
        "z": "dc20c6e0.0feb98",
        "name": "permission error out",
        "links": [
            "23adba5a.1575e6"
        ],
        "x": 435,
        "y": 440,
        "wires": []
    },
    {
        "id": "d8854f8.5c820b",
        "type": "subflow:fee416c.fb205e8",
        "z": "b94899c9.b16088",
        "name": "",
        "x": 350,
        "y": 340,
        "wires": [
            [
                "23847e72.ad5052"
            ],
            [
                "e6340f03.d4d27"
            ]
        ]
    },
    {
        "id": "e6340f03.d4d27",
        "type": "link out",
        "z": "b94899c9.b16088",
        "name": "permission error out",
        "links": [
            "91ece6bd.2f67d8"
        ],
        "x": 415,
        "y": 420,
        "wires": []
    },
    {
        "id": "91ece6bd.2f67d8",
        "type": "link in",
        "z": "b94899c9.b16088",
        "name": "vector websocket in",
        "links": [
            "e6340f03.d4d27"
        ],
        "x": 1625,
        "y": 340,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "d29bdb5c.25fd58",
        "type": "subflow:fee416c.fb205e8",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 390,
        "y": 200,
        "wires": [
            [
                "b9aba820.9dbf78"
            ],
            [
                "6b0f35.479560cc"
            ]
        ]
    },
    {
        "id": "6b0f35.479560cc",
        "type": "link out",
        "z": "90f83725.6dae08",
        "name": "Access Log Permission check",
        "links": [
            "29e4a.7f1061b68"
        ],
        "x": 535,
        "y": 240,
        "wires": []
    },
    {
        "id": "29e4a.7f1061b68",
        "type": "link in",
        "z": "90f83725.6dae08",
        "name": "Access Log Websocket in",
        "links": [
            "6b0f35.479560cc"
        ],
        "x": 1255,
        "y": 240,
        "wires": [
            [
                "7a08c826.6c9ca8"
            ]
        ]
    },
    {
        "id": "2f50dfa8.90179",
        "type": "subflow:fee416c.fb205e8",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 390,
        "y": 380,
        "wires": [
            [
                "8d3e512a.420f"
            ],
            [
                "96bdbbff.532998"
            ]
        ]
    },
    {
        "id": "96bdbbff.532998",
        "type": "link out",
        "z": "90f83725.6dae08",
        "name": "Settings Log Permission check",
        "links": [
            "ad5167e6.cd9ed8"
        ],
        "x": 535,
        "y": 420,
        "wires": []
    },
    {
        "id": "ad5167e6.cd9ed8",
        "type": "link in",
        "z": "90f83725.6dae08",
        "name": "Settings Log Websocket in",
        "links": [
            "96bdbbff.532998"
        ],
        "x": 1255,
        "y": 420,
        "wires": [
            [
                "89be3294.49e69"
            ]
        ]
    },
    {
        "id": "f728a8f0.ad8b68",
        "type": "template",
        "z": "2dba0745.a98d98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <h1 style=\"text-align:center;color:#415c71;\">{{{payload.errorMsg}}}</h1>\n    <form action=\"/process-login\" method=\"POST\">\n        <table align='center'>\n            <tr>\n                <td>\n                    <label for=\"username\" class=\"big-text\">User</label>\n                </td>\n                <td>\n                    <input name=\"username\" type=\"text\" class=\"big-text\"/>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label for=\"password\" class=\"big-text\">Password</label>\n                </td>\n                <td>\n                    <input name=\"password\" type=\"password\" class=\"big-text\"/>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                </td>\n                <td>\n                    <input type=\"submit\" class=\"btn jumbotron-button btn-block big-text bold-text\"/>\n                </td>\n            </tr>\n        </table>    \n        <input type=\"hidden\" name=\"url\" value=\"{{{req.url}}}\" />\n    </form>  ",
        "output": "str",
        "x": 1030,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "9c382ca2.1a311",
        "type": "template",
        "z": "2dba0745.a98d98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Log-in",
        "output": "str",
        "x": 750,
        "y": 120,
        "wires": [
            [
                "5896b9d2.764738"
            ]
        ]
    },
    {
        "id": "c0be6557.9ceae8",
        "type": "template",
        "z": "2dba0745.a98d98",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 610,
        "y": 120,
        "wires": [
            [
                "9c382ca2.1a311"
            ]
        ]
    },
    {
        "id": "5896b9d2.764738",
        "type": "template",
        "z": "2dba0745.a98d98",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "basicYellow.png",
        "output": "str",
        "x": 890,
        "y": 120,
        "wires": [
            [
                "f728a8f0.ad8b68"
            ]
        ]
    },
    {
        "id": "5726b4b4.e7359c",
        "type": "websocket in",
        "z": "a858ad3a.95706",
        "name": "/apps/websocket",
        "server": "9375a6d1.3e14e8",
        "client": "",
        "x": 120,
        "y": 340,
        "wires": [
            [
                "56e9df4a.f6e63"
            ]
        ]
    },
    {
        "id": "56e9df4a.f6e63",
        "type": "subflow:fee416c.fb205e8",
        "z": "a858ad3a.95706",
        "name": "",
        "x": 330,
        "y": 340,
        "wires": [
            [
                "c60da0b.fd1f96"
            ],
            [
                "6458b16b.42fe9"
            ]
        ]
    },
    {
        "id": "c60da0b.fd1f96",
        "type": "function",
        "z": "a858ad3a.95706",
        "name": "Renew Token",
        "func": "msg.token.expDate = new Date().getTime() + msg.token.timeoutMin * 60000;\ndelete msg.token['iat']\nmsg.payload = JSON.parse(JSON.stringify(msg.token));\ndelete msg['token'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 300,
        "wires": [
            [
                "503fb1fa.e2bb1"
            ]
        ]
    },
    {
        "id": "503fb1fa.e2bb1",
        "type": "JsonWebToken",
        "z": "a858ad3a.95706",
        "name": "encrypt token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 720,
        "y": 300,
        "wires": [
            [
                "271627bb.951278"
            ]
        ]
    },
    {
        "id": "271627bb.951278",
        "type": "function",
        "z": "a858ad3a.95706",
        "name": "Renew Cookies",
        "func": "var newMsg = \n{\n    topic : 'renew',\n    payload: \n    {\n        topic       : 'renew',\n        userID      : msg.userID,\n        role        : msg.token,\n        expDate     : msg.payload.expDate.toString(),\n        username    : msg.payload.username\n    }\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 900,
        "y": 300,
        "wires": [
            [
                "6458b16b.42fe9"
            ]
        ]
    },
    {
        "id": "6458b16b.42fe9",
        "type": "websocket out",
        "z": "a858ad3a.95706",
        "name": "/apps/websocket",
        "server": "9375a6d1.3e14e8",
        "client": "",
        "x": 1090,
        "y": 300,
        "wires": []
    },
    {
        "id": "1b76d304.e576bd",
        "type": "JsonWebToken",
        "z": "90f83725.6dae08",
        "name": "check token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 490,
        "y": 960,
        "wires": [
            [
                "e57a1a0e.507818"
            ]
        ]
    },
    {
        "id": "96140e28.f0af",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Set token and Role",
        "func": "msg.token = msg.payload.token;\ndelete  msg.payload.token;\nmsg.payload.allowedRoles = [\"readDatabase\"];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 960,
        "wires": [
            [
                "1b76d304.e576bd"
            ]
        ]
    },
    {
        "id": "e57a1a0e.507818",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check permitted roles",
        "func": "var tokenError = msg.error;\nif (tokenError != undefined)\n{\n    msg.payload = 'Error-BadToken';\n    return [null,msg];\n}\nif (msg.token.expDate > 0)\n{\n    if (msg.token.expDate < new Date().getTime())\n    {\n        msg.payload = 'Error-LoginExpired';\n        return [null,msg];\n    }\n}\nvar permittedRole = false;\nfor (irole = 0; irole < msg.payload.allowedRoles.length; ++irole)\n{\n    for (itoken = 0; itoken < msg.token.roles.length; ++itoken)\n    {\n        if (msg.token.roles[itoken] == msg.payload.allowedRoles[irole]) permittedRole = true;\n    }\n}\nif (!permittedRole)\n{\n    msg.payload = 'Error-CredentialsNotValidForApp';\n    return [null,msg];\n}\ndelete msg.token;\ndelete msg.payload.allowedRoles;\nreturn [msg,null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 960,
        "wires": [
            [
                "7db15dac.050a44"
            ],
            [
                "8cf93fbc.123f4"
            ]
        ]
    },
    {
        "id": "8cf93fbc.123f4",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 1000,
        "wires": []
    },
    {
        "id": "544d2b75.abe264",
        "type": "comment",
        "z": "90f83725.6dae08",
        "name": "curl \"http://localhost:60427/device?deviceType=blinky-basic&name=01&token=$(< blinky-lite-v2-token.txt)\" | json_pp > out.json",
        "info": "",
        "x": 480,
        "y": 920,
        "wires": []
    },
    {
        "id": "9a2f9ea0.84376",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "",
        "url": "/setDevice",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1120,
        "wires": [
            [
                "aa38fdda.bad9d"
            ]
        ]
    },
    {
        "id": "8fb8e5ba.bc08a8",
        "type": "JsonWebToken",
        "z": "90f83725.6dae08",
        "name": "check token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 510,
        "y": 1120,
        "wires": [
            [
                "39c11e39.486842"
            ]
        ]
    },
    {
        "id": "aa38fdda.bad9d",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Set token and Role",
        "func": "msg.token = msg.payload.token;\ndelete  msg.payload.token;\nmsg.payload.allowedRoles = [\"rsetting\"];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 1120,
        "wires": [
            [
                "8fb8e5ba.bc08a8"
            ]
        ]
    },
    {
        "id": "39c11e39.486842",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check permitted roles",
        "func": "var tokenError = msg.error;\nif (tokenError != undefined)\n{\n    msg.payload = 'Error-BadToken';\n    return [null,msg];\n}\nif (msg.token.expDate > 0)\n{\n    if (msg.token.expDate < new Date().getTime())\n    {\n        msg.payload = 'Error-LoginExpired';\n        return [null,msg];\n    }\n}\nvar permittedRole = false;\nfor (irole = 0; irole < msg.payload.allowedRoles.length; ++irole)\n{\n    for (itoken = 0; itoken < msg.token.roles.length; ++itoken)\n    {\n        if (msg.token.roles[itoken] == msg.payload.allowedRoles[irole]) permittedRole = true;\n    }\n}\nif (!permittedRole)\n{\n    msg.payload = 'Error-CredentialsNotValidFoApp';\n    return [null,msg];\n}\ndelete msg.token;\ndelete msg.payload.allowedRoles;\nreturn [msg,null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 700,
        "y": 1120,
        "wires": [
            [
                "ac020639.dbe368"
            ],
            [
                "9f2b501a.06c8c"
            ]
        ]
    },
    {
        "id": "9f2b501a.06c8c",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1050,
        "y": 1180,
        "wires": []
    },
    {
        "id": "ac020639.dbe368",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Prep query",
        "func": "msg['userData'] = [];\nvar ikey = 0;\nfor( var key in msg.payload ) \n{\n    if ((key != 'deviceType') && (key != 'name') )\n    {\n        msg['userData'][ikey] = {attr : key, value: Number(msg.payload[key])};\n        ++ikey\n    }\n}\nif (msg['userData'] < 1)\n{\n    msg.payload = 'Error-NoAttributesFound';\n    return [null,msg];\n}\nvar queryMsg = \n[\n    {\n        $and    :\n        [\n            {\n                deviceType  :   msg.payload.deviceType\n            },\n            {\n                name        :   msg.payload.name\n            }\n        ]\n    },\n    {\n        projection: \n        {\n            _id :   0\n        }\n    }\n];\nmsg.payload = queryMsg;\nreturn [msg,null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 890,
        "y": 1120,
        "wires": [
            [
                "4a7b7cdd.65e2a4"
            ],
            [
                "9f2b501a.06c8c"
            ]
        ]
    },
    {
        "id": "4a7b7cdd.65e2a4",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "findOne",
        "x": 1090,
        "y": 1120,
        "wires": [
            [
                "50d24d87.ef19d4"
            ]
        ]
    },
    {
        "id": "50d24d87.ef19d4",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Setup MQTT",
        "func": "function isEmpty(obj) \n{\n    for(var prop in obj) {\n        if(obj.hasOwnProperty(prop))\n            return false;\n    }\n    return true;\n}\nif (isEmpty(msg.payload))\n{\n    msg.payload = 'Error-DeviceNotFound';\n    return [null,null,msg];\n}\nfor (var ii = 0; ii < msg.userData.length; ++ii)\n{\n    try\n    {\n        msg.payload[msg.userData[ii]['attr']].value = msg.userData[ii]['value'];\n    }\n    catch (e)\n    {\n        msg.payload = 'Error-' + msg.userData[ii]['attr'] + 'NotFound';\n        return [null,null,msg];\n    }\n}\nvar newMsg = \n{\n    topic : global.get('project') + '/' + msg.payload.deviceType + '/' + msg.payload.name + '/setting',\n    payload : JSON.stringify(msg.payload)\n}\nmsg.payload = 'Success';\nflow.set('setDeviceMqtt',{mqttTopic:newMsg.topic, mqttDevice: JSON.parse(newMsg.payload)})\nreturn [newMsg,msg,msg];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1290,
        "y": 1120,
        "wires": [
            [
                "56debf6b.c8177"
            ],
            [
                "624fda40.949a64"
            ],
            [
                "1448fbc5.6b29b4"
            ]
        ]
    },
    {
        "id": "1448fbc5.6b29b4",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1390,
        "y": 1180,
        "wires": []
    },
    {
        "id": "56debf6b.c8177",
        "type": "gzip",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 1450,
        "y": 1100,
        "wires": [
            [
                "6c992b47.a19184"
            ]
        ]
    },
    {
        "id": "6c992b47.a19184",
        "type": "mqtt out",
        "z": "90f83725.6dae08",
        "name": "Publish Setting",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "84d80994.260508",
        "x": 1620,
        "y": 1100,
        "wires": []
    },
    {
        "id": "f46a4c46.e6b3a",
        "type": "mongodb3 in",
        "z": "ca529822.9112f8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "insertOne",
        "x": 1090,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "624fda40.949a64",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "IP filter",
        "func": "var ipfilter = [\n    \"127.0.0.16\"];\nvar ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nif (ipAddress==undefined) return null;\nvar ipAddressSplit = ipAddress.split(\".\");\nfor (var ii =  0; ii < ipfilter.length; ++ii)\n{\n    var ipfilterSplit = ipfilter[ii].split(\".\");\n    if (ipAddress == ipfilter[ii])\n    { \n        return null;\n    }\n    if (ipfilterSplit[2] == '*')\n    {\n        if ((ipfilterSplit[0] == ipAddressSplit[0]) && (ipfilterSplit[1] == ipAddressSplit[1]))\n        {\n            return null;\n        }\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1570,
        "y": 1160,
        "wires": [
            [
                "32e0be49.2d3482"
            ]
        ]
    },
    {
        "id": "32e0be49.2d3482",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "ClientInfo",
        "func": "var ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nreturn {\n    topic:'clientInfo', \n    payload:{\n        ipAddress   : ipAddress\n    },\n    extraInfo       : {},\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1580,
        "y": 1200,
        "wires": [
            [
                "f2042f45.64c2a"
            ]
        ]
    },
    {
        "id": "f2042f45.64c2a",
        "type": "http request",
        "z": "90f83725.6dae08",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://tools.keycdn.com/geo.json?host={{{payload.ipAddress}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "basic",
        "x": 1590,
        "y": 1240,
        "wires": [
            [
                "b7dcd98.26fbd28"
            ]
        ]
    },
    {
        "id": "b7dcd98.26fbd28",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "parseIpRequest",
        "func": "var data = msg.payload.data.geo;\ndata['url'] = '/setDevice';\ndata['userID'] = -1;\ndata['timeStamp'] = new Date().getTime();\nvar setDeviceMqtt = flow.get('setDeviceMqtt');\nvar newMsg = \n{\n    topic:'settingLogEntry',\n    payload:\n    {\n        topic     : setDeviceMqtt.mqttTopic,\n        userID    : -1,\n        device    : setDeviceMqtt.mqttDevice,\n        timeStamp : data['timeStamp'],\n        ipInfo    : data\n    }\n}\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1600,
        "y": 1280,
        "wires": [
            [
                "54b525ac.6a602c"
            ]
        ]
    },
    {
        "id": "54b525ac.6a602c",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "settingsLog",
        "operation": "insertOne",
        "x": 1650,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "35ffcf83.1547",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "IP filter",
        "func": "var ipfilter = [\n    \"127.0.0.16\"];\nvar ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nif (ipAddress==undefined) return null;\nvar ipAddressSplit = ipAddress.split(\".\");\nfor (var ii =  0; ii < ipfilter.length; ++ii)\n{\n    var ipfilterSplit = ipfilter[ii].split(\".\");\n    if (ipAddress == ipfilter[ii])\n    { \n        return null;\n    }\n    if (ipfilterSplit[2] == '*')\n    {\n        if ((ipfilterSplit[0] == ipAddressSplit[0]) && (ipfilterSplit[1] == ipAddressSplit[1]))\n        {\n            return null;\n        }\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 40,
        "wires": [
            [
                "b9df3f26.ab53f",
                "41efb541.ee2eec"
            ]
        ]
    },
    {
        "id": "9ac12bdb.3cd258",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "parseIpRequest",
        "func": "var data = msg.payload.data.geo;\ndata['url'] = msg.extraInfo.url;\ndata['userID'] = msg.extraInfo.userID;\ndata['timeStamp'] = new Date().getTime();\ndata['user'] = msg.extraInfo.user;\nreturn {topic:'ipData', payload:data};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 180,
        "wires": [
            [
                "f46a4c46.e6b3a"
            ]
        ]
    },
    {
        "id": "80520db7.bb9d6",
        "type": "comment",
        "z": "90f83725.6dae08",
        "name": "curl \"http://localhost:60427/setDevice?deviceType=blinky-basic&name=02&ledOn=0&token=$(< blinky-lite-v2-token.txt)\"",
        "info": "",
        "x": 460,
        "y": 1060,
        "wires": []
    },
    {
        "id": "95559ed1.ef85a",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "",
        "url": "/rlogin",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1400,
        "wires": [
            [
                "167b94d7.2438fb"
            ]
        ]
    },
    {
        "id": "7ec14c90.e05b84",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "users",
        "operation": "findOne",
        "x": 470,
        "y": 1400,
        "wires": [
            [
                "e8388d01.1c89a"
            ]
        ]
    },
    {
        "id": "167b94d7.2438fb",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "user query",
        "func": "msg.userData = {cred : {}, url : msg.payload.url};\nmsg.userData.cred = \n{\n    username : msg.payload.username, \n    password : msg.payload.password,\n};\nmsg.payload =  [{username : msg.userData.cred.username },  {projection  :{_id :   0}}]\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 270,
        "y": 1400,
        "wires": [
            [
                "7ec14c90.e05b84"
            ]
        ]
    },
    {
        "id": "e8388d01.1c89a",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check username",
        "func": "function isEmpty(obj) {\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\nif (isEmpty(msg.payload))\n{\n    delete msg.userData['cred'];\n    msg.payload = 'Error-UserNotFound';\n    return [msg, null];\n}\nvar pwcheck = \n{\n    \"topic\"     : \"checkPassword\",\n    \"txt\"       : msg.userData.cred.password,\n    \"hash\"      : msg.payload.password\n}\nmsg.payload.profile['expDate'] = -1;\nif ( msg.payload.profile.timeoutMin > 0)\n{\n    msg.payload.profile['expDate'] = new Date().getTime() + msg.payload.profile.timeoutMin * 60000;\n}\nmsg.payload.profile['username'] = msg.payload.username;\nmsg.userData.cred.profile = msg.payload.profile;\nmsg.payload = pwcheck;\nreturn [null,msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 690,
        "y": 1400,
        "wires": [
            [
                "25881126.cb17ae"
            ],
            [
                "c8f33f39.e1014"
            ]
        ]
    },
    {
        "id": "25881126.cb17ae",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 1340,
        "wires": []
    },
    {
        "id": "c8f33f39.e1014",
        "type": "bcrypt",
        "z": "90f83725.6dae08",
        "name": "decrypt password",
        "action": "verify",
        "field": "payload.txt",
        "hash": "payload.hash",
        "rounds": 10,
        "x": 890,
        "y": 1400,
        "wires": [
            [
                "50b2e9d4.8c3558"
            ]
        ]
    },
    {
        "id": "50b2e9d4.8c3558",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check password",
        "func": "if (msg.match == false)  \n{\n    delete msg.userData['cred'];\n    msg.payload = 'Error-InvalidPassword';\n    return [msg, null];\n\n}\nmsg.payload = msg.userData.cred.profile;\ndelete msg.userData['cred'];\ndelete msg['match'];\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 1400,
        "wires": [
            [
                "25881126.cb17ae"
            ],
            [
                "2585d0a4.d3cd9"
            ]
        ]
    },
    {
        "id": "2585d0a4.d3cd9",
        "type": "JsonWebToken",
        "z": "90f83725.6dae08",
        "name": "get Token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 1300,
        "y": 1400,
        "wires": [
            [
                "9f2410e6.14e8"
            ]
        ]
    },
    {
        "id": "9f2410e6.14e8",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Set token",
        "func": "msg.payload = msg.token;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1440,
        "y": 1400,
        "wires": [
            [
                "9f444dd0.9583"
            ]
        ]
    },
    {
        "id": "9f444dd0.9583",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1570,
        "y": 1400,
        "wires": []
    },
    {
        "id": "8e76fa92.a3ca88",
        "type": "comment",
        "z": "90f83725.6dae08",
        "name": "curl \"http://localhost:60427/rlogin?username=user&password=blinky-lite\" > blinky-lite-v2-token.txt",
        "info": "",
        "x": 400,
        "y": 1300,
        "wires": []
    },
    {
        "id": "28ebc7b7.46b498",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Renew Token",
        "func": "msg.token.expDate = new Date().getTime() + msg.token.timeoutMin * 60000;\ndelete msg.token['iat']\nmsg.payload = JSON.parse(JSON.stringify(msg.token));\ndelete msg['token'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 320,
        "y": 820,
        "wires": [
            [
                "5b671f90.f02c1"
            ]
        ]
    },
    {
        "id": "5b671f90.f02c1",
        "type": "JsonWebToken",
        "z": "8475ab9.3d26058",
        "name": "encrypt token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 500,
        "y": 820,
        "wires": [
            [
                "7569e60e.54a608"
            ]
        ]
    },
    {
        "id": "7569e60e.54a608",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Renew Cookies",
        "func": "var newMsg = \n{\n    topic : 'renew',\n    payload: \n    {\n        topic       : 'renew',\n        userID      : msg.userID,\n        role        : msg.token,\n        expDate     : msg.payload.expDate.toString(),\n        username    : msg.payload.username\n    }\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 820,
        "wires": [
            [
                "224d9b05.f92104"
            ]
        ]
    },
    {
        "id": "f4326ad5.3e47e8",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "Setup Renew in",
        "links": [
            "14b7f9da.2d7c86"
        ],
        "x": 195,
        "y": 820,
        "wires": [
            [
                "28ebc7b7.46b498"
            ]
        ]
    },
    {
        "id": "14b7f9da.2d7c86",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "renew out",
        "links": [
            "f4326ad5.3e47e8"
        ],
        "x": 815,
        "y": 520,
        "wires": []
    },
    {
        "id": "224d9b05.f92104",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "renew out",
        "links": [
            "3b3f00c.e1f7e",
            "435b9182.cc3ac",
            "4d17b368.0e74ac",
            "7e343bf8.8fec14",
            "80b48a2e.fb2228",
            "80c07ebe.4f177",
            "8c18e9cd.f40f08",
            "8d0f331.1da14d",
            "9ef4d388.4bcf7",
            "a8a88b3.a878478",
            "ae6d0749.651b58",
            "b7a01bb7.010988",
            "bf657e74.6ac66",
            "d0705889.a79d18",
            "d8b0e2fe.3e47e",
            "ebb358f3.95c638",
            "ffb80136.883f8",
            "fb8b1545.8b1a38",
            "0ed0e6d8928c14de",
            "3d0299782e275c92",
            "de21e03a7ded2d46",
            "ee630ac232b19d93",
            "a8eff39aaa50d4ee"
        ],
        "x": 795,
        "y": 820,
        "wires": []
    },
    {
        "id": "4f498dd4.8ddad4",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "extraScripts",
        "field": "payload.extraScripts",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <script src=\"/scripts/visDist/vis.js\"></script>\n",
        "output": "str",
        "x": 790,
        "y": 40,
        "wires": [
            [
                "6f9d3e8e.5dd7c"
            ]
        ]
    },
    {
        "id": "49e3f3a3.2fac0c",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "extraScripts",
        "field": "payload.extraScripts",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <script src=\"/scripts/visDist/vis.js\"></script>\n",
        "output": "str",
        "x": 810,
        "y": 140,
        "wires": [
            [
                "e01d1110.ea59"
            ]
        ]
    },
    {
        "id": "78d0accf.e38584",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/blinky-modbus/websocket",
        "server": "c9f0eb6c.93d8d8",
        "client": "",
        "x": 1040,
        "y": 100,
        "wires": []
    },
    {
        "id": "ae6d0749.651b58",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "blinky thermo input socket",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "4a0e93c9.98b4fc",
            "7011908d.95c51"
        ],
        "x": 875,
        "y": 100,
        "wires": [
            [
                "78d0accf.e38584"
            ]
        ]
    },
    {
        "id": "4a0e93c9.98b4fc",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-thermo mqtt",
        "links": [
            "ae6d0749.651b58"
        ],
        "x": 595,
        "y": 100,
        "wires": []
    },
    {
        "id": "5ebecf5c.01f9",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/blinky-modbus/websocket",
        "server": "c9f0eb6c.93d8d8",
        "client": "",
        "x": 210,
        "y": 480,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "7011908d.95c51",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-thermo-archive",
        "links": [
            "ae6d0749.651b58"
        ],
        "x": 1155,
        "y": 660,
        "wires": []
    },
    {
        "id": "48e0f477.ea0e4c",
        "type": "template",
        "z": "f22a539a.a67b3",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color:var(--white);\n          padding-bottom: 10px;\n          padding-top: 10px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n          font-weight: 900;\n        }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n          padding: 10px;\n        }\n        .card-body\n        {\n          background-color: var(--color3);\n        }\n        .card-button\n        {\n          color: var(--color5);\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: bold;\n        }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n        }\n        .tableHeading\n        {\n          color:var(--color1);\n          font-weight: 900;\n        }\n        .tableText\n        {\n          color:var(--color1);\n          font-weight: 900;\n        }\n        .custom-select\n        {\n          color: white;\n          background-color: var(--color3);\n        \n        }\n        .form-control\n        {\n          text-align: center;\n        }\n        .checkbox-align\n        {\n          vertical-align: middle;\n          text-align: center;\n        }\n        .csv-linked\n        {\n            color: blue;\n        }\n        .csv-unlinked\n        {\n            color: red;\n        }\n        .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n        .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        div.ui-datepicker\n        {\n            font-size:30px;\n        }",
        "output": "str",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "b7076b42.4012e8"
            ]
        ]
    },
    {
        "id": "b7076b42.4012e8",
        "type": "template",
        "z": "f22a539a.a67b3",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                    <a href='/' >\n                        <img src=\"/img/bl-mc-icon-inverse.png\" height=\"75px\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title big-text bold-text\">{{{payload.title}}}</h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\" width=\"20%\">\n                    <a href='/core'><img src=\"/img/coreYellow.png\" height=\"75px\"/></a>\n                </td>\n            </tr>\n        </table>\n    </div>\n    \n",
        "output": "str",
        "x": 280,
        "y": 80,
        "wires": [
            [
                "8a439be9.030ab8"
            ]
        ]
    },
    {
        "id": "a3eb7ad8.27c498",
        "type": "template",
        "z": "8341090a.df9758",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n       .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n        .googleSlide4by3-container \n        {\n            position: relative;\n            overflow: hidden;\n            padding-top: 75.0%;\n        }\n        .googleSlide4by3-iframe {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 0;\n        }        \n        .custom-select\n        {\n            color: black;\n            background-color: white;\n            height:80px;\n            line-height:70px;\n        }\n",
        "output": "str",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "6f95e75a.75d6d8"
            ]
        ]
    },
    {
        "id": "6f95e75a.75d6d8",
        "type": "template",
        "z": "8341090a.df9758",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                    <a href='/' >\n                        <img src=\"/img/bl-mc-icon-inverse.png\" height=\"75px\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title big-text bold-text\">\n                        <img src=\"/img/{{{payload.navBarIcon}}}\" height=\"75px\" style=\"padding-right:20px;\"/><span>{{{payload.title}}}</span>\n                    </h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\" width=\"20%\">\n                    <a href='/apps'><img src=\"/img/home.png\" height=\"75px\"/></a>\n                </td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 280,
        "y": 80,
        "wires": [
            [
                "9460eaf0.da7628"
            ]
        ]
    },
    {
        "id": "de38cb39.638048",
        "type": "http request",
        "z": "ca529822.9112f8",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://tools.keycdn.com/geo.json?host={{{payload.ipAddress}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "basic",
        "x": 1030,
        "y": 140,
        "wires": [
            [
                "9ac12bdb.3cd258"
            ]
        ]
    },
    {
        "id": "41efb541.ee2eec",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "ClientInfo",
        "func": "var ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nvar url = msg.req.url;\nvar header = {};\nheader['User-Agent'] = 'keycdn-tools:' + global.get('ipRefWeb');\nvar user = \"anon\"\nif (msg.hasOwnProperty(\"token\"))\n{\n    user = msg.token.username;\n}\nreturn {\n    topic:'clientInfo', \n    headers: header,\n    payload:{\n        ipAddress   : ipAddress\n    },\n    extraInfo       : {url:url, userID:msg.payload.userID, user:user},\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 100,
        "wires": [
            [
                "de38cb39.638048"
            ]
        ]
    },
    {
        "id": "c7984811.67e8f8",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "ipRefWeb",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "ipRefWeb",
        "payload": "IPREFWEB",
        "payloadType": "env",
        "x": 130,
        "y": 440,
        "wires": [
            [
                "daa5f679.c0a968"
            ]
        ]
    },
    {
        "id": "daa5f679.c0a968",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Save ipRefWeb",
        "func": "global.set(msg.topic,msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "fec4a75b.95ea48",
        "type": "switch",
        "z": "e17f7487.2a78e8",
        "name": "",
        "property": "mqttDevice.deviceType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "blinky-modbus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-power-mon",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-stepper",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-beadpull",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-scale",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "espotPrice",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 630,
        "y": 100,
        "wires": [
            [
                "ee4c177c.2435b8"
            ],
            [
                "ee4c177c.2435b8"
            ],
            [
                "ee4c177c.2435b8"
            ],
            [
                "ee4c177c.2435b8"
            ],
            [
                "ee4c177c.2435b8"
            ],
            [
                "ee4c177c.2435b8"
            ]
        ]
    },
    {
        "id": "c634a8d3.297848",
        "type": "http in",
        "z": "a858ad3a.95706",
        "name": "/",
        "url": "/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 460,
        "wires": [
            [
                "ca68de71.c19fe"
            ]
        ]
    },
    {
        "id": "65a7590b.59a2a8",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n",
        "output": "str",
        "x": 830,
        "y": 460,
        "wires": [
            [
                "be6906a5.f0c178"
            ]
        ]
    },
    {
        "id": "9709fa69.9daac8",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Bake",
        "output": "str",
        "x": 550,
        "y": 460,
        "wires": [
            [
                "a36869fc.6f5e58"
            ]
        ]
    },
    {
        "id": "ca68de71.c19fe",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n            window.location = '/apps'\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 410,
        "y": 460,
        "wires": [
            [
                "9709fa69.9daac8"
            ]
        ]
    },
    {
        "id": "a36869fc.6f5e58",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "thermoYellow.png",
        "output": "str",
        "x": 690,
        "y": 460,
        "wires": [
            [
                "65a7590b.59a2a8"
            ]
        ]
    },
    {
        "id": "be6906a5.f0c178",
        "type": "subflow:8341090a.df9758",
        "z": "a858ad3a.95706",
        "name": "",
        "x": 970,
        "y": 460,
        "wires": []
    },
    {
        "id": "76301eec54b1bee2",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-modbus';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 60,
        "wires": [
            [
                "33e97cdd30af026f"
            ]
        ]
    },
    {
        "id": "ffcf30c512e5d801",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Modbus {{{payload.script.name}}}",
        "output": "str",
        "x": 360,
        "y": 140,
        "wires": [
            [
                "accf00968965316c"
            ]
        ]
    },
    {
        "id": "33e97cdd30af026f",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "basicYellow.png",
        "output": "str",
        "x": 370,
        "y": 100,
        "wires": [
            [
                "ffcf30c512e5d801"
            ]
        ]
    },
    {
        "id": "6353ee91dcdddd4e",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1290,
        "y": 340,
        "wires": []
    },
    {
        "id": "13556b470e013ec2",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/blinky-modbus",
        "url": "/blinky-modbus",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "14bd9d4f855846e3"
            ]
        ]
    },
    {
        "id": "14bd9d4f855846e3",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "35fa0f06d43baac7"
            ]
        ]
    },
    {
        "id": "35fa0f06d43baac7",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9c854ea3.68416",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "76301eec54b1bee2"
            ]
        ]
    },
    {
        "id": "d6984859.a267c8",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Prep MQTT",
        "func": "var newMsg = msg.payload;\nnewMsg.userID = msg.userID;\nnewMsg.username = msg.token.username;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 400,
        "wires": [
            [
                "2132a017.ba23f",
                "ee0ee61b.770a18"
            ]
        ]
    },
    {
        "id": "332bf8c3d3829b95",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Prep MQTT",
        "func": "var newMsg = msg.payload;\nnewMsg.userID = msg.userID\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 870,
        "y": 440,
        "wires": [
            [
                "2132a017.ba23f"
            ]
        ]
    },
    {
        "id": "d516654b507b71c6",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div class='container' width=\"100%\">\n        <div class='row' style='padding-top: 1px;'>\n            <div class=\"col-md-12\" align=\"center\">\n{{{payload.html.launcher}}}\n            </div>\n        </div>\n        <div class='row' style='padding-top: 25px;'>\n            <div class=\"col-md-3\" align=\"center\">\n            </div>\n            <div class=\"col-md-6\" align=\"center\">\n                <a class='btn btn-block card-button big-text' href='/core' >Utilites</a>\n            </div>\n            <div class=\"col-md-3\" align=\"center\">\n            </div>\n        </div>\n        <div class='row' style='padding-top: 25px;'>\n            <div class=\"col-md-12\" align=\"center\">\n{{{payload.html.user}}}\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 910,
        "y": 140,
        "wires": [
            [
                "1871f1b7.8fa49e"
            ]
        ]
    },
    {
        "id": "841cdca3e549b476",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.launcher}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 560,
        "y": 180,
        "wires": [
            [
                "f866a4801f31a7e4"
            ]
        ]
    },
    {
        "id": "385a54c277c0dd14",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 920,
        "y": 100,
        "wires": [
            [
                "d516654b507b71c6"
            ]
        ]
    },
    {
        "id": "f866a4801f31a7e4",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.launcher",
        "field": "payload.html.launcher",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card'>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"col-md-4\" align=\"center\">\n                                <span class='card-text' >App</span>\n                            </div>\n                            <div class=\"col-md-8\" align=\"center\">\n                                <select class=\"custom-select big-text\" id=\"application\" onchange=\"appSelected()\">\n                                    <option value=\"none\">none</option>\n                                    <option value=\"blinky-beadpull\">blinky-beadpull</option>\n                                    <option value=\"blinky-modbus\">blinky-modbus</option>\n                                    <option value=\"blinky-power-mon\">blinky-power-mon</option>\n                                    <option value=\"blinky-scale\">blinky-scale</option>\n                                    <option value=\"blinky-stepper\">blinky-stepper</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"col-md-4\" align=\"center\">\n                                <span class='card-text' >Device</span>\n                            </div>\n                            <div class=\"col-md-8\" align=\"center\">\n                                <select class=\"custom-select big-text\" id=\"deviceA\" onchange=\"deviceAselected()\">\n                                    <option value=\"none\">none</option>\n                                    <option value=\"01\">01</option>\n                                    <option value=\"02\">02</option>\n                                    <option value=\"03\">03</option>\n                                    <option value=\"04\">04</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"col-md-1\" align=\"center\">\n                            </div>\n                            <div class=\"col-md-5\" align=\"center\">\n                            </div>\n                            <div class=\"col-md-5\" align=\"center\">\n                                <button class='btn btn-block card-button big-text' id='launchAppButton' onclick=\"launchApp()\" >Launch</button>\n                            </div>\n                            <div class=\"col-md-1\" align=\"center\">\n                            </div>\n                        </div>\n                    </div>\n                </div>",
        "output": "str",
        "x": 940,
        "y": 60,
        "wires": [
            [
                "385a54c277c0dd14"
            ]
        ]
    },
    {
        "id": "5de7f76ee6d8655e",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(true);\n        function onDocumentReady()\n        {\n            getCreds();\n            setInterval(function(){getCreds();}, 1000);\n            initLaunchMenu();\n            \n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n",
        "output": "str",
        "x": 570,
        "y": 60,
        "wires": [
            [
                "5e523f3a71059946"
            ]
        ]
    },
    {
        "id": "5e523f3a71059946",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "script.launcher",
        "field": "payload.script.launcher",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function initLaunchMenu()\n        {\n            $('#deviceA').prop('disabled', true);\n            $('#launchAppButton').prop('disabled', true);\n        }\n\n        function appSelected()\n        {\n            var application = $('#application').val();\n            if (application == 'none')\n            {\n                initLaunchMenu();\n            }\n            else\n            {\n                $('#deviceA').prop('disabled', false);\n                $('#launchAppButton').prop('disabled', true);\n            }\n        }\n        function deviceAselected()\n        {\n            var deviceA = $('#deviceA').val();\n            if (deviceA == 'none')\n            {\n               $('#launchAppButton').prop('disabled', true);\n            }\n            else\n            {\n                $('#launchAppButton').prop('disabled', false);\n            }\n        }\n        function launchApp()\n        {\n            var application = $('#application').val();\n            var deviceA = $('#deviceA').val();\n            var link = \"/\" + application + '?name=' + deviceA;\n            window.location.href = link;\n//            window.open(link, '_blank');\n        }\n",
        "output": "str",
        "x": 580,
        "y": 100,
        "wires": [
            [
                "4fd42739baa9eee8"
            ]
        ]
    },
    {
        "id": "4fd42739baa9eee8",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 570,
        "y": 140,
        "wires": [
            [
                "841cdca3e549b476"
            ]
        ]
    },
    {
        "id": "90ff25e663c0cc27",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "sendConfigToMqtt",
        "func": "return {\n    topic   : msg.payload.topic, \n    payload : msg.payload.payload, \n    userID  : msg.userID };\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 540,
        "wires": [
            [
                "6381975d.b98928"
            ]
        ]
    },
    {
        "id": "76b3cf58f503afba",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-power-mon mqtt",
        "links": [
            "0ed0e6d8928c14de",
            "355850f24ee88a60",
            "a8eff39aaa50d4ee",
            "3906b8f2c8f56585",
            "a61d9213f6edc11c"
        ],
        "x": 595,
        "y": 140,
        "wires": []
    },
    {
        "id": "ab40734a9039d27b",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-power-mon-archive",
        "links": [
            "0ed0e6d8928c14de",
            "355850f24ee88a60",
            "a8eff39aaa50d4ee",
            "3906b8f2c8f56585",
            "a61d9213f6edc11c"
        ],
        "x": 1155,
        "y": 700,
        "wires": []
    },
    {
        "id": "feef1b91cf3c555e",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/blinky-stepper/websocket",
        "server": "1ea60968c67f4c49",
        "client": "",
        "x": 1030,
        "y": 180,
        "wires": []
    },
    {
        "id": "018771a85c600ef7",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/blinky-stepper-mon/websocket",
        "server": "1ea60968c67f4c49",
        "client": "",
        "x": 230,
        "y": 520,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "3d0299782e275c92",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "blinky stepper input socket",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "ff51cbb44f28111e",
            "2e079a098c3745e9"
        ],
        "x": 875,
        "y": 180,
        "wires": [
            [
                "feef1b91cf3c555e"
            ]
        ]
    },
    {
        "id": "ff51cbb44f28111e",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-stepper mqtt",
        "links": [
            "3d0299782e275c92",
            "de21e03a7ded2d46"
        ],
        "x": 595,
        "y": 180,
        "wires": []
    },
    {
        "id": "2e079a098c3745e9",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-stepper-archive",
        "links": [
            "3d0299782e275c92",
            "de21e03a7ded2d46"
        ],
        "x": 1155,
        "y": 740,
        "wires": []
    },
    {
        "id": "9582b2865099028f",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Stepper {{{payload.script.name}}}",
        "output": "str",
        "x": 360,
        "y": 500,
        "wires": [
            [
                "1c634290b1de23eb"
            ]
        ]
    },
    {
        "id": "3aee4ed02defb833",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "stairsYellow.png",
        "output": "str",
        "x": 370,
        "y": 460,
        "wires": [
            [
                "9582b2865099028f"
            ]
        ]
    },
    {
        "id": "16d3066c19e02864",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-stepper';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 420,
        "wires": [
            [
                "3aee4ed02defb833"
            ]
        ]
    },
    {
        "id": "1c634290b1de23eb",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var archiveList = [];\n        var pingInterval = 2000;\n        var lastPing = 0;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            setInterval(function()\n            {\n                if (device != null)\n                {\n                    if (device.settingInProgress == 1) return;\n                }\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/setting/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n            $('#noStepsToTurnButtonId').hide();\n            $('#stepDelayuSButtonId').hide();\n            $('#delayAfterRotationmSButtonId').hide();\n\n            disableSettings(true);\n        }\n        function onWebSocketOpen()\n        {\n            if (remoteApp) getArchive(24);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(msg.payload);\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings(device);\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting(payload)\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting/setting',\n                    payload : payload\n                };\n            sendActionMsg('setting','setting',actionMsg);\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    var actionMsg = \n                        {\n                            topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting/reset',\n                            payload : actionFlag\n                        };\n                    sendActionMsg('reset','setting',actionMsg);\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n            \n        }\n",
        "output": "str",
        "x": 690,
        "y": 420,
        "wires": [
            [
                "d4354f0a893f8d24"
            ]
        ]
    },
    {
        "id": "c4549f4814738720",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDeviceConfig(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDeviceConfig()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting/config',\n                    payload : device\n                };\n            sendActionMsg('config','setting',actionMsg);\n        }\n",
        "output": "str",
        "x": 700,
        "y": 580,
        "wires": [
            [
                "567fae5a540de2fe"
            ]
        ]
    },
    {
        "id": "a9a8d96c07bfa239",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.timePlot}}}\n{{{payload.script.archive}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 680,
        "y": 660,
        "wires": [
            [
                "5904cf26f71570c4"
            ]
        ]
    },
    {
        "id": "4339bfbb0176dc3f",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n{{{payload.html.dashboard}}}\n{{{payload.html.timePlot}}}\n{{{payload.html.archive}}}\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 990,
        "y": 660,
        "wires": [
            [
                "7d5765c4bb7e9f42"
            ]
        ]
    },
    {
        "id": "a9c16fd95d2b76de",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 580,
        "wires": [
            [
                "e8d3740d240751e0"
            ]
        ]
    },
    {
        "id": "0f32f29b711c4342",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1010,
        "y": 500,
        "wires": [
            [
                "f1b66db7e2e7637f"
            ]
        ]
    },
    {
        "id": "f1b66db7e2e7637f",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 540,
        "wires": [
            [
                "a9c16fd95d2b76de"
            ]
        ]
    },
    {
        "id": "567fae5a540de2fe",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 690,
        "y": 620,
        "wires": [
            [
                "a9a8d96c07bfa239"
            ]
        ]
    },
    {
        "id": "e8d3740d240751e0",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='resetButton' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='rebootButton'onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 620,
        "wires": [
            [
                "4339bfbb0176dc3f"
            ]
        ]
    },
    {
        "id": "5904cf26f71570c4",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.dashboard",
        "field": "payload.html.dashboard",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n        <div class='row' style='padding-top:50px;padding-bottom:80px;'>\n            <div class='col-md-12' align='center'>\n                <table  width='100%'>\n                   <tr>\n                        <td width='20%' align='left'> </td>\n                        <td width='60%' align='center'>\n                            <button class='btn btn-block card-button big-text' id=\"moveMotorButton\" onclick=\"moveMotor()\" >Move</button>\n                        </td>\n                        <td width='20%' align='left'> </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <p class='card-title'>Controls</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"container-fluid \" align=\"center\" style='padding-top: 0px;'>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Motor location</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <span class='card-text' id=\"stepLocationId\" >0</span>\n                                                </td>\n                                                <td width='20%'>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >No. Of Steps</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"noStepsToTurnInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"noStepsToTurnChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"noStepsToTurnButtonId\" onclick=\"noStepsToTurn()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Step Direction</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <select class=\"custom-select big-text\"  id=\"stepForwardInputId\" onchange=\"stepForward()\" >\n                                                        <option value=\"0\">-</option>\n                                                        <option value=\"1\">+</option>\n                                                    </select>\n                                                </td>\n                                                <td width='20%'>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Step Delay (uS)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"stepDelayuSInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"stepDelayuSChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"stepDelayuSButtonId\" onclick=\"stepDelayuS()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Delay After Rotation (mS)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"delayAfterRotationmSInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"delayAfterRotationmSChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"delayAfterRotationmSButtonId\" onclick=\"delayAfterRotationmS()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Resolution</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <select class=\"custom-select big-text\"  id=\"resolutionInputId\" onchange=\"resolution()\" >\n                                                        <option value=\"0\">200</option>\n                                                        <option value=\"1\">400</option>\n                                                        <option value=\"2\">800</option>\n                                                        <option value=\"3\">1600</option>\n                                                        <option value=\"4\">3200</option>\n                                                        <option value=\"5\">6400</option>\n                                                    </select>\n                                                </td>\n                                                <td width='20%'>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Keep Awake</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <select class=\"custom-select big-text\"  id=\"stayAwakeAfterRotationInputId\" onchange=\"stayAwakeAfterRotation()\" >\n                                                        <option value=\"0\">No</option>\n                                                        <option value=\"1\">Yes</option>\n                                                    </select>\n                                                </td>\n                                                <td width='20%'>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Reset Readback</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <select class=\"custom-select big-text\"  id=\"resetStepReadingInputId\" onchange=\"resetStepReading()\" >\n                                                        <option value=\"0\">No</option>\n                                                        <option value=\"1\">Reset</option>\n                                                    </select>\n                                                </td>\n                                                <td width='20%'>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                   </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1020,
        "y": 420,
        "wires": [
            [
                "31276cae2372e14d"
            ]
        ]
    },
    {
        "id": "d4354f0a893f8d24",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        var noStepsToTurnChanged = false;\n        var stepDelayuSChanged = false;\n        var delayAfterRotationmSChanged = false;\n        function updateDmaReadings(device)\n        {\n            if (device.settingInProgress == 0)\n            {\n                disableSettings(false);\n            }\n            else\n            {\n                disableSettings(true);\n            }\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            if (!noStepsToTurnChanged) $('#noStepsToTurnInputId').val(device.noStepsToTurn.value);\n            if (!stepDelayuSChanged)   $('#stepDelayuSInputId').val(device.stepDelayuS.value);\n            if (!delayAfterRotationmSChanged)   $('#delayAfterRotationmSInputId').val(device.delayAfterRotationmS.value);\n\n            $('#resolutionInputId').val(device.resolution.value);\n            $('#stayAwakeAfterRotationInputId').val(device.stayAwakeAfterRotation.value);\n            $('#stepForwardInputId').val(device.stepForward.value);\n            $('#resetStepReadingInputId').val(device.resetStepReading.value);\n\n            $('#stepLocationId').text(device.stepLocation.value);\n            if (device.moveMotor.value == 0)\n            {\n                $('#moveMotorButton').text('Move');\n            }\n            else\n            {\n                $('#moveMotorButton').text('Stop Motor');\n            }\n            addTracePointsToTimePlot([device.stepLocation.value]);\n\n        }\n        function disableSettings(disable)\n        {\n            $('#noStepsToTurnButtonId').attr('disabled',disable);\n            $('#stepDelayuSButtonId').attr('disabled',disable);\n            $('#delayAfterRotationmSButtonId').attr('disabled',disable);\n            $('#moveMotorButton').attr('disabled',disable);\n\n            $('#resetButton').attr('disabled',disable);\n            $('#rebootButton').attr('disabled',disable);\n\n        }\n        function noStepsToTurnChange()\n        {\n            noStepsToTurnChanged = true;\n            $('#noStepsToTurnButtonId').show();\n        }\n        function stepDelayuSChange()\n        {\n            stepDelayuSChanged = true;\n            $('#stepDelayuSButtonId').show();\n        }\n        function delayAfterRotationmSChange()\n        {\n            delayAfterRotationmSChanged = true;\n            $('#delayAfterRotationmSButtonId').show();\n        }\n        function noStepsToTurn()\n        {\n            $('#noStepsToTurnButtonId').hide();\n            if (isNaN($('#noStepsToTurnInputId').val()))\n            {\n                noStepsToTurnChanged = false;\n                return;\n            }\n            var payload = {'attr': 'noStepsToTurn', 'value':Number($('#noStepsToTurnInputId').val())};\n            sendSetting(payload);\n            noStepsToTurnChanged = false;\n        }\n        function stepDelayuS()\n        {\n            $('#stepDelayuSButtonId').hide();\n            if (isNaN($('#stepDelayuSInputId').val()))\n            {\n                stepDelayuSChanged = false;\n                return;\n            }\n            var payload = {'attr': 'stepDelayuS', 'value':Number($('#stepDelayuSInputId').val())};\n            sendSetting(payload);\n            stepDelayuSChanged = false;\n        }\n        function delayAfterRotationmS()\n        {\n            $('#delayAfterRotationmSButtonId').hide();\n            if (isNaN($('#delayAfterRotationmSInputId').val()))\n            {\n                delayAfterRotationmSChanged = false;\n                return;\n            }\n            var payload = {'attr': 'delayAfterRotationmS', 'value':Number($('#delayAfterRotationmSInputId').val())};\n            sendSetting(payload);\n            delayAfterRotationmSChanged = false;\n        }\n        function moveMotor()\n        {\n            if (device.moveMotor.value == 0)\n            {\n                device.moveMotor.value = 1;\n                $('#moveMotorButton').text('Stop Motor');\n            }\n            else\n            {\n                device.moveMotor.value = 0;\n                $('#moveMotorButton').text('Move');\n            }\n            var payload = {'attr': 'moveMotor', 'value':device.moveMotor.value};\n            sendSetting(payload);\n        }\n        function resolution()\n        {\n            if (isNaN($('#resolutionInputId').val()))\n            {\n                 return;\n            }\n            var payload = {'attr': 'resolution', 'value':Number($('#resolutionInputId').val())};\n            sendSetting(payload);\n        }\n        function stepForward()\n        {\n            if (isNaN($('#stepForwardInputId').val()))\n            {\n                 return;\n            }\n            var payload = {'attr': 'stepForward', 'value':Number($('#stepForwardInputId').val())};\n            sendSetting(payload);\n        }\n        function stayAwakeAfterRotation()\n        {\n            if (isNaN($('#stayAwakeAfterRotationInputId').val()))\n            {\n                 return;\n            }\n            var payload = {'attr': 'stayAwakeAfterRotation', 'value':Number($('#stayAwakeAfterRotationInputId').val())};\n            sendSetting(payload);\n        }\n        function resetStepReading()\n        {\n            if (isNaN($('#resetStepReadingInputId').val()))\n            {\n                 return;\n            }\n            var payload = {'attr': 'resetStepReading', 'value':Number($('#resetStepReadingInputId').val())};\n            sendSetting(payload);\n        }\n",
        "output": "str",
        "x": 720,
        "y": 460,
        "wires": [
            [
                "80fcbf8860fe822f"
            ]
        ]
    },
    {
        "id": "8c3f0bc85228584a",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['stepLocation'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n            yaxis:\n            {\n                title           : 'Position (Steps)',\n                titlefont       : {color: '#557a95'},\n                tickfont        : {color: '#557a95'},\n                gridcolor       : '#beceda',\n                zerolinecolor   : '#beceda',\n                linecolor       : '#beceda'\n//                rangemode       : 'tozero'\n            },\n/*\n            yaxis2:\n            {\n                title           : 'Steps to turn',\n                titlefont       : {color: '#f2a31f'},\n                tickfont        : {color: '#f2a31f'},\n                gridcolor       : '#f2a31f',\n                zerolinecolor   : '#f2a31f',\n                linecolor       : '#f2a31f',\n                overlaying: 'y',\n                side: 'right'\n                range: [0, 100]\n            },\n*/\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            var trace1 = \n            {\n                x: [],\n                y: [],\n                name: 'Position',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'blue'}\n        \n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n//                var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n             }\n\n\n            Plotly.newPlot('archiveChart', [trace1], layout);\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 690,
        "y": 540,
        "wires": [
            [
                "c4549f4814738720"
            ]
        ]
    },
    {
        "id": "80fcbf8860fe822f",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.timePlot",
        "field": "payload.script.timePlot",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        var timePlotLength = 600000;\n        var timePlotLayout =\n        {\n            showlegend  : true,\n            legend      : { x: 0, y: 1.15},\n            height      : '500',\n            width       : '',\n            xaxis       :\n            {\n                type: 'date'\n            },\n            yaxis:\n            {\n                title           : 'Position (Steps)',\n                titlefont       : {color: '#557a95'},\n                tickfont        : {color: '#557a95'},\n                gridcolor       : '#beceda',\n                zerolinecolor   : '#beceda',\n                linecolor       : '#beceda'\n//                rangemode       : 'tozero'\n            },\n/*\n            yaxis2:\n            {\n                title           : 'Steps to turn',\n                titlefont       : {color: '#f2a31f'},\n                tickfont        : {color: '#f2a31f'},\n                gridcolor       : '#f2a31f',\n                zerolinecolor   : '#f2a31f',\n                linecolor       : '#f2a31f',\n                overlaying: 'y',\n                side: 'right'\n                range: [0, 100]\n            },\n*/\n            margin: \n                {\n                    t: 30, //top margin\n//                    l: 0, //left margin\n//                    r: 0, //right margin\n//                    b: 20 //bottom margin\n                },\n        };\n        var timePlotTraces = [];\n        timePlotTraces[0] = \n        {\n            x: [],\n            y: [],\n            name: 'Position',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: {color: 'blue'}\n    \n        };\n        function addTracePointsToTimePlot(pts)\n        {\n            var now = new Date().getTime();\n            var plotBeginning = now - timePlotLength;\n            var removeDone = false;\n            while(!removeDone)\n            {\n                if (timePlotTraces[0].x[0] < plotBeginning)\n                {\n                    for (var ii = 0; ii < timePlotTraces.length; ++ii)\n                    {\n                        timePlotTraces[ii].x.shift();\n                        timePlotTraces[ii].y.shift();\n                    }\n                }\n                else\n                {\n                    removeDone = true;\n                }\n            }\n            for (var ii = 0; ii < timePlotTraces.length; ++ii)\n            {\n                timePlotTraces[ii].x.push(now);\n                timePlotTraces[ii].y.push(pts[ii]);\n            }    \n            Plotly.newPlot(\"timePlotChart\", timePlotTraces, timePlotLayout);\n        }\n\n",
        "output": "str",
        "x": 700,
        "y": 500,
        "wires": [
            [
                "8c3f0bc85228584a"
            ]
        ]
    },
    {
        "id": "31276cae2372e14d",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.timePlot",
        "field": "payload.html.timePlot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <p class='card-title'>Time Plot</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"timePlotChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1010,
        "y": 460,
        "wires": [
            [
                "0f32f29b711c4342"
            ]
        ]
    },
    {
        "id": "7d5765c4bb7e9f42",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1290,
        "y": 660,
        "wires": []
    },
    {
        "id": "422c2780aca78ca8",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/blinky-stepper",
        "url": "/blinky-stepper",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "dc43776465459265"
            ]
        ]
    },
    {
        "id": "dc43776465459265",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "6091033a136895a8"
            ]
        ]
    },
    {
        "id": "6091033a136895a8",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9c854ea3.68416",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "16d3066c19e02864"
            ]
        ]
    },
    {
        "id": "accf00968965316c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var archiveList = [];\n        var pingInterval = 2000;\n        var lastPing = 0;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            setInterval(function()\n            {\n                if (device != null)\n                {\n                    if (device.settingInProgress == 1) return;\n                }\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/setting/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n\n            disableSettings(true);\n        }\n        function onWebSocketOpen()\n        {\n            if (remoteApp) getArchive(24);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(msg.payload);\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings(device);\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting(payload)\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting/setting',\n                    payload : payload\n                };\n            sendActionMsg('setting','setting',actionMsg);\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    var actionMsg = \n                        {\n                            topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting/reset',\n                            payload : actionFlag\n                        };\n                    sendActionMsg('reset','setting',actionMsg);\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n            \n        }\n",
        "output": "str",
        "x": 690,
        "y": 60,
        "wires": [
            [
                "8b6286159a458d12"
            ]
        ]
    },
    {
        "id": "267e2d0d1bc2de6f",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDeviceConfig(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDeviceConfig()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting/config',\n                    payload : device\n                };\n            sendActionMsg('config','setting',actionMsg);\n        }\n",
        "output": "str",
        "x": 700,
        "y": 220,
        "wires": [
            [
                "909ea25b3da51e24"
            ]
        ]
    },
    {
        "id": "31f8bef312ed306d",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.timePlot}}}\n{{{payload.script.archive}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 680,
        "y": 300,
        "wires": [
            [
                "af3e42a7d2df1518"
            ]
        ]
    },
    {
        "id": "727548bd55d40550",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n{{{payload.html.dashboard}}}\n{{{payload.html.control}}}\n{{{payload.html.timePlot}}}\n{{{payload.html.archive}}}\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 990,
        "y": 340,
        "wires": [
            [
                "6353ee91dcdddd4e"
            ]
        ]
    },
    {
        "id": "296a8e943e3edfd0",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 260,
        "wires": [
            [
                "794374eac9f30e6c"
            ]
        ]
    },
    {
        "id": "632346ea538517c8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1010,
        "y": 180,
        "wires": [
            [
                "9e7deb4be93350d3"
            ]
        ]
    },
    {
        "id": "9e7deb4be93350d3",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 220,
        "wires": [
            [
                "296a8e943e3edfd0"
            ]
        ]
    },
    {
        "id": "909ea25b3da51e24",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 690,
        "y": 260,
        "wires": [
            [
                "31f8bef312ed306d"
            ]
        ]
    },
    {
        "id": "794374eac9f30e6c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='resetButton' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='rebootButton'onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 300,
        "wires": [
            [
                "727548bd55d40550"
            ]
        ]
    },
    {
        "id": "af3e42a7d2df1518",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.dashboard",
        "field": "payload.html.dashboard",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <p class='card-title'>LED Status</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text'  >LED 1</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/yellowLight.png' height=\"90px\" id='led1img'/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"led1EditButton\" onclick=\"editDevice('led1')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text'  >LED 2</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/yellowLight.png' height=\"90px\" id='led2img'/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"led2EditButton\" onclick=\"editDevice('led2')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text'  >LED 3</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/yellowLight.png' height=\"90px\" id='led3img'/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"led3EditButton\" onclick=\"editDevice('led3')\" >Edit</button>\n                                    </td>\n                                </tr>\n                           </table>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1020,
        "y": 60,
        "wires": [
            [
                "2fbd72219061ec65"
            ]
        ]
    },
    {
        "id": "8b6286159a458d12",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings(device)\n        {\n            if (device.settingInProgress == 0)\n            {\n                disableSettings(false);\n            }\n            else\n            {\n                disableSettings(true);\n            }\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            addTracePointsToTimePlot([device.led1.value, device.led2.value, device.led3.value]);\n\n            if (device.led1.value == 0)\n            {\n                $('#led1img').attr('src','/img/greenLight.png');\n                $('#toggleLed1Button').attr('style','background-color:green;');\n            }\n            else\n            {\n                $('#led1img').attr('src','/img/redLight.png');\n                $('#toggleLed1Button').attr('style','background-color:red;');\n            }\n\n            if (device.led2.value == 0)\n            {\n                $('#led2img').attr('src','/img/greenLight.png');\n                $('#toggleLed2Button').attr('style','background-color:green;');\n            }\n            else\n            {\n                $('#led2img').attr('src','/img/redLight.png');\n                $('#toggleLed2Button').attr('style','background-color:red;');\n            }\n\n            if (device.led3.value == 0)\n            {\n                $('#led3img').attr('src','/img/greenLight.png');\n                $('#toggleLed3Button').attr('style','background-color:green;');\n            }\n            else\n            {\n                $('#led3img').attr('src','/img/redLight.png');\n                $('#toggleLed3Button').attr('style','background-color:red;');\n            }\n\n        }\n        function toggleLed(led)\n        {\n            device.settingInProgress.value = 1;\n            disableSettings(true);\n            var attr = 'led' + led.toString();\n            var ledValue = device[attr].value;\n            if (ledValue == 0)\n            {\n                ledValue = 1;\n            }\n            else\n            {\n                ledValue = 0;\n            }\n\n            var payload = {'attr': attr, 'value':ledValue};\n            sendSetting(payload);\n        }\n        function disableSettings(disable)\n        {\n            $('#led1EditButton').attr('disabled',disable);\n            $('#led2EditButton').attr('disabled',disable);\n            $('#led3EditButton').attr('disabled',disable);\n            $('#toggleLed1Button').attr('disabled',disable);\n            $('#toggleLed2Button').attr('disabled',disable);\n            $('#toggleLed3Button').attr('disabled',disable);\n\n            $('#resetButton').attr('disabled',disable);\n            $('#rebootButton').attr('disabled',disable);\n\n        }\n",
        "output": "str",
        "x": 720,
        "y": 100,
        "wires": [
            [
                "1d1981281b17d934"
            ]
        ]
    },
    {
        "id": "2fbd72219061ec65",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.control",
        "field": "payload.html.control",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <p class='card-title'>LED Control</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'>\n                            <table width='100%'>\n                                <tr >\n                                    <td width=20%></td>\n                                    <td width=60% style='padding-top: 10px;'><button class='btn btn-block big-text' id=\"toggleLed1Button\" style=\"background-color:yellow;\" onclick=\"toggleLed(1)\" >LED 1</button></td>\n                                    <td width=20%></td>\n                                </tr>\n                                <tr>\n                                    <td width=20%></td>\n                                    <td width=60% style='padding-top: 10px;'><button class='btn btn-block big-text' id=\"toggleLed2Button\" style=\"background-color:yellow;\" onclick=\"toggleLed(2)\" >LED 2</button></td>\n                                    <td width=20%></td>\n                                </tr>\n                                <tr>\n                                    <td width=20%></td>\n                                    <td width=60% style='padding-top: 10px;'><button class='btn btn-block big-text' id=\"toggleLed3Button\" style=\"background-color:yellow;\" onclick=\"toggleLed(3)\" >LED 3</button></td>\n                                    <td width=20%></td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1010,
        "y": 100,
        "wires": [
            [
                "262b5c8cadea3585"
            ]
        ]
    },
    {
        "id": "109921d7209d0ded",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['led1','led2', 'led3'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : 'LED',\n                    titlefont       : {color: '#557a95'},\n                    tickfont        : {color: '#557a95'},\n                    gridcolor       : '#beceda',\n                    zerolinecolor   : '#beceda',\n                    linecolor       : '#beceda',\n                    range: [-0.5, 1.5]\n    //                rangemode       : 'tozero'\n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            var trace1 = \n            {\n                x: [],\n                y: [],\n                name: 'LED1',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'red'}\n        \n            };\n            var trace2 = \n            {\n                x: [],\n                y: [],\n                name: 'LED2',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'orange'}\n            };\n            var trace3 = \n            {\n                x: [],\n                y: [],\n                name: 'LED3',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'green'}\n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n//                var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n                trace2.x[ii] = x;\n                trace2.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[1]];\n                trace3.x[ii] = x;\n                trace3.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[2]];\n             }\n\n\n            Plotly.newPlot('archiveChart', [trace1,trace2, trace3], layout);\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 690,
        "y": 180,
        "wires": [
            [
                "267e2d0d1bc2de6f"
            ]
        ]
    },
    {
        "id": "262b5c8cadea3585",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.timePlot",
        "field": "payload.html.timePlot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <p class='card-title'>Time Plot</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"timePlotChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1010,
        "y": 140,
        "wires": [
            [
                "632346ea538517c8"
            ]
        ]
    },
    {
        "id": "1d1981281b17d934",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.timePlot",
        "field": "payload.script.timePlot",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        var timePlotLength = 600000;\n        var timePlotLayout =\n        {\n            showlegend  : true,\n            legend      : { x: 0, y: 1.15},\n            height      : '500',\n            width       : '',\n            xaxis       :\n            {\n                type: 'date'\n            },\n            yaxis:\n            {\n                title           : 'LED',\n                titlefont       : {color: '#557a95'},\n                tickfont        : {color: '#557a95'},\n                gridcolor       : '#beceda',\n                zerolinecolor   : '#beceda',\n                linecolor       : '#beceda',\n                range: [-0.5, 1.5]\n//                rangemode       : 'tozero'\n            },\n/*\n            yaxis2:\n            {\n                title           : 'Duty Factor (%)',\n                titlefont       : {color: '#f2a31f'},\n                tickfont        : {color: '#f2a31f'},\n                gridcolor       : '#f2a31f',\n                zerolinecolor   : '#f2a31f',\n                linecolor       : '#f2a31f',\n                overlaying: 'y',\n                side: 'right',\n                range: [0, 100]\n            },\n*/\n            margin: \n                {\n                    t: 30, //top margin\n//                    l: 0, //left margin\n//                    r: 0, //right margin\n//                    b: 20 //bottom margin\n                },\n        };\n        var timePlotTraces = [];\n        timePlotTraces[0] = \n        {\n            x: [],\n            y: [],\n            name: 'LED1',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: {color: 'red'}\n    \n        };\n        timePlotTraces[1] = \n        {\n            x: [],\n            y: [],\n            name: 'LED2',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: {color: 'orange'}\n        };\n        timePlotTraces[2] = \n        {\n            x: [],\n            y: [],\n            name: 'LED3',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: {color: 'green'}\n        };\n        function addTracePointsToTimePlot(pts)\n        {\n            var now = new Date().getTime();\n            var plotBeginning = now - timePlotLength;\n            var removeDone = false;\n            while(!removeDone)\n            {\n                if (timePlotTraces[0].x[0] < plotBeginning)\n                {\n                    for (var ii = 0; ii < timePlotTraces.length; ++ii)\n                    {\n                        timePlotTraces[ii].x.shift();\n                        timePlotTraces[ii].y.shift();\n                    }\n                }\n                else\n                {\n                    removeDone = true;\n                }\n            }\n            for (var ii = 0; ii < timePlotTraces.length; ++ii)\n            {\n                timePlotTraces[ii].x.push(now);\n                timePlotTraces[ii].y.push(pts[ii]);\n            }    \n            Plotly.newPlot(\"timePlotChart\", timePlotTraces, timePlotLayout);\n        }\n\n",
        "output": "str",
        "x": 700,
        "y": 140,
        "wires": [
            [
                "109921d7209d0ded"
            ]
        ]
    },
    {
        "id": "19829ced5affe7c9",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-beadpull mqtt",
        "links": [
            "de21e03a7ded2d46"
        ],
        "x": 595,
        "y": 220,
        "wires": []
    },
    {
        "id": "de21e03a7ded2d46",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "blinky beadpull input socket",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "9fe517e47c90283b",
            "19829ced5affe7c9",
            "ff51cbb44f28111e",
            "2e079a098c3745e9"
        ],
        "x": 875,
        "y": 220,
        "wires": [
            [
                "caf1f0493ed3ee4f"
            ]
        ]
    },
    {
        "id": "caf1f0493ed3ee4f",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/blinky-beadpull/websocket",
        "server": "874828cc9941fa30",
        "client": "",
        "x": 1040,
        "y": 220,
        "wires": []
    },
    {
        "id": "60a72974c379b07b",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/blinky-beadpull/websocket",
        "server": "874828cc9941fa30",
        "client": "",
        "x": 210,
        "y": 600,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "9fe517e47c90283b",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-beadpull-archive",
        "links": [
            "de21e03a7ded2d46"
        ],
        "x": 1155,
        "y": 780,
        "wires": []
    },
    {
        "id": "68f91193.6031a",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Bead Pull {{{payload.script.name}}}",
        "output": "str",
        "x": 340,
        "y": 860,
        "wires": [
            [
                "493fb622.d8afc8"
            ]
        ]
    },
    {
        "id": "6ff41f15.de1a2",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "beadYellow.png",
        "output": "str",
        "x": 350,
        "y": 820,
        "wires": [
            [
                "68f91193.6031a"
            ]
        ]
    },
    {
        "id": "71ce0943.81bf18",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Set Name And Device Type",
        "func": "msg.payload['beadpull'] = {};\nmsg.payload['beadpull']['name'] = '01'\nmsg.payload['beadpull']['deviceType'] = 'blinky-beadpull';\nmsg.payload['beadpull']['project'] = global.get('project');\nmsg.payload['stepper'] = {};\nmsg.payload['stepper']['name'] = '02';\nmsg.payload['stepper']['deviceType'] = 'blinky-stepper';\nmsg.payload['stepper']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 780,
        "wires": [
            [
                "6ff41f15.de1a2"
            ]
        ]
    },
    {
        "id": "cd62d659eca3c39d",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1310,
        "y": 1020,
        "wires": []
    },
    {
        "id": "cfe4a658f4c13c98",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/blinky-beadpull",
        "url": "/blinky-beadpull",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 780,
        "wires": [
            [
                "0b236be672f61161"
            ]
        ]
    },
    {
        "id": "0b236be672f61161",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 820,
        "wires": [
            [
                "439465f15c1f1d19"
            ]
        ]
    },
    {
        "id": "439465f15c1f1d19",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9c854ea3.68416",
        "x": 140,
        "y": 860,
        "wires": [
            [
                "71ce0943.81bf18"
            ]
        ]
    },
    {
        "id": "493fb622.d8afc8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var archiveRequestList = [];\n        var archiveList = [];\n        var archiveList = [];\n        var stepperPingInterval = 5000;\n        var lastStepperPing = 0;\n        var allowStepperPing = true;\n        \n        var beadpullDeviceConfig = \n        {\n            deviceType  : '{{{payload.beadpull.deviceType}}}',\n            name        : '{{{payload.beadpull.name}}}',\n            project     : '{{{payload.beadpull.project}}}'\n        };\n        var stepperDeviceConfig = \n        {\n            deviceType  : '{{{payload.stepper.deviceType}}}',\n            name        : '{{{payload.stepper.name}}}',\n            project     : '{{{payload.stepper.project}}}'\n        };\n\n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            $('#noStepsToTurnButtonId').hide();\n            $('#stepDelayuSButtonId').hide();\n            $('#delayAfterRotationmSButtonId').hide();\n            $('#noScanPtsButtonId').hide();\n            $('#markerFreqButtonId').hide();\n            $('#scanNameButtonId').hide();\n\n            disableBeadPullSettings(true);\n            disableStepperSettings(true);\n            $('#scanButton').prop('disabled',true);\n            $('#homeBeadButton').prop('disabled',true);\n\n        }\n        function onWebSocketOpen()\n        {\n            if (remoteApp) getArchive(24);\n            var actionMsg = \n                {\n                    topic   : beadpullDeviceConfig.project + '/' +  beadpullDeviceConfig.deviceType + '/' +  beadpullDeviceConfig.name + '/setting/ping',\n                    payload : true\n                };\n            sendActionMsg('ping', 'ping', actionMsg);\n            setInterval(function()\n            {\n                var now = new Date().getTime();\n                if (((now - lastStepperPing) > stepperPingInterval) && allowStepperPing)\n                {\n                    lastStepperPing = now;\n                    var actionMsg = \n                        {\n                            topic   : stepperDeviceConfig.project + '/' +  stepperDeviceConfig.deviceType + '/' +  stepperDeviceConfig.name + '/setting/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == beadpullDeviceConfig.name) && (msg.mqttDevice.deviceType == beadpullDeviceConfig.deviceType)  && (msg.mqttDevice.project == beadpullDeviceConfig.project) )\n                    {\n                        heartbeat();\n                        updateBeadpullReadings(JSON.parse(msg.payload));\n                    }\n                    if ((msg.mqttDevice.name == stepperDeviceConfig.name) && (msg.mqttDevice.deviceType == stepperDeviceConfig.deviceType)  && (msg.mqttDevice.project == stepperDeviceConfig.project) )\n                    {\n                        lastStepperPing = new Date().getTime();\n                        heartbeat();\n                        updateStepperReadings(JSON.parse(msg.payload));\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting(deviceConfig, payload)\n        {\n            var actionMsg = \n                {\n                    topic   : deviceConfig.project + '/' +  deviceConfig.deviceType + '/' +  deviceConfig.name + '/setting/setting',\n                    payload : payload\n                };\n            sendActionMsg('setting','setting',actionMsg);\n        }\n        function reset(deviceConfig, actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    var actionMsg = \n                        {\n                            topic   : deviceConfig.project + '/' +  deviceConfig.deviceType + '/' +  deviceConfig.name + '/setting/reset',\n                            payload : actionFlag\n                        };\n                    sendActionMsg('reset','setting',actionMsg);\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n            \n        }\n",
        "output": "str",
        "x": 690,
        "y": 780,
        "wires": [
            [
                "e29616e2.2e2988"
            ]
        ]
    },
    {
        "id": "9c813756.6c5c38",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.timePlot}}}\n{{{payload.script.archive}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 680,
        "y": 980,
        "wires": [
            [
                "f6ab8485.5f47e8"
            ]
        ]
    },
    {
        "id": "864cffa0.3724b",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n{{{payload.html.dashboard}}}\n{{{payload.html.timePlot}}}\n{{{payload.html.archive}}}\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 990,
        "y": 1020,
        "wires": [
            [
                "cd62d659eca3c39d"
            ]
        ]
    },
    {
        "id": "cefdafa8.91d69",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 940,
        "wires": [
            [
                "3fb4b4a8.ec76fc"
            ]
        ]
    },
    {
        "id": "7974c464.11ebac",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1010,
        "y": 860,
        "wires": [
            [
                "4f8cafa.a57065"
            ]
        ]
    },
    {
        "id": "4f8cafa.a57065",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 900,
        "wires": [
            [
                "cefdafa8.91d69"
            ]
        ]
    },
    {
        "id": "6f5a5e46.8a941",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 690,
        "y": 940,
        "wires": [
            [
                "9c813756.6c5c38"
            ]
        ]
    },
    {
        "id": "3fb4b4a8.ec76fc",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='resetButton' onclick=\"reset(beadpullDeviceConfig, 1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='rebootButton'onclick=\"reset(beadpullDeviceConfig, 2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 980,
        "wires": [
            [
                "864cffa0.3724b"
            ]
        ]
    },
    {
        "id": "f6ab8485.5f47e8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.dashboard",
        "field": "payload.html.dashboard",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n        <div class='row' style='padding-top:20px;padding-bottom:20px;'>\n            <div class='col-md-12' align='center'>\n                <table  width='100%'>\n                   <tr>\n                        <td width='20%' align='left'> </td>\n                        <td width='60%' align='center'>\n                            <button class='btn btn-block card-button big-text' id=\"scanButton\" scanAttr=\"10\" onclick=\"scan()\" >Start Scan</button>\n                        </td>\n                        <td width='20%' align='left'> </td>\n                    </tr>\n                   <tr>\n                        <td width='20%' align='left'> </td>\n                        <td width='60%' align='center' style='padding-top:20px;'>\n                            <button class='btn btn-block card-button big-text' id=\"homeBeadButton\" homeBeadAttr=\"10\" onclick=\"homeBead()\" >Home Bead</button>\n                        </td>\n                        <td width='20%' align='left'> </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <p class='card-title'>Controls</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"container-fluid \" align=\"center\" style='padding-top: 0px;'>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Bead location</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <span class='card-text' id=\"stepLocationId\" >0</span>\n                                                </td>\n                                                <td width='20%'>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Scan Name</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"scanNameInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"10\" oninput=\"scanNameChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"scanNameButtonId\" onclick=\"scanName()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >No. of points / scan</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"noScanPtsInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"10\" oninput=\"noScanPtsChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"noScanPtsButtonId\" onclick=\"noScanPts()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Marker Freq (Hz)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"markerFreqInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"10\" oninput=\"markerFreqChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"markerFreqButtonId\" onclick=\"markerFreq()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >No. of steps / pt.</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"noStepsToTurnInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"10\" oninput=\"noStepsToTurnChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"noStepsToTurnButtonId\" onclick=\"noStepsToTurn()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Step Delay (uS)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"stepDelayuSInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"10\" oninput=\"stepDelayuSChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"stepDelayuSButtonId\" onclick=\"stepDelayuS()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Delay After Rotation (mS)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"delayAfterRotationmSInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"10\" oninput=\"delayAfterRotationmSChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"delayAfterRotationmSButtonId\" onclick=\"delayAfterRotationmS()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Reset Steps</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <select class=\"custom-select big-text\"  id=\"resetStepReadingInputId\" onchange=\"resetStepReading()\" >\n                                                        <option value=\"0\">No</option>\n                                                        <option value=\"1\">Reset</option>\n                                                    </select>\n                                                </td>\n                                                <td width='20%'>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >NWA Center Frequency(Hz)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <span class='card-text' id=\"centerFreqId\" >0</span>\n                                                </td>\n                                                <td width='20%'>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                   </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1020,
        "y": 780,
        "wires": [
            [
                "64b8974a8d469849"
            ]
        ]
    },
    {
        "id": "e29616e2.2e2988",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        var noStepsToTurnChanged = false;\n        var stepDelayuSChanged = false;\n        var delayAfterRotationmSChanged = false;\n        var noScanPtsChanged = false;\n        var markerFreqChanged = false;\n        var scanNameChanged = false;\n        function updateBeadpullReadings(device)\n        {\n            if (!noScanPtsChanged) $('#noScanPtsInputId').val(device.noScanPts.value);\n            if (!markerFreqChanged) $('#markerFreqInputId').val(device.markerFreq.value);\n            if (!scanNameChanged) $('#scanNameInputId').val(device.scanName.value);\n            $('#centerFreqId').text(device.centerFreq.value);\n            $('#scanButton').attr('scanAttr',device.scan.value.toString());\n            $('#homeBeadButton').attr('homeBeadAttr',device.homeBead.value.toString());\n            switch(device.scan.value)\n            {\n                case -1:\n                    $('#scanButton').text(\"Abort in Progress\");\n                    disableBeadPullSettings(true);\n                    disableStepperSettings(true);\n                    $('#scanButton').prop('disabled',true);\n                    $('#homeBeadButton').prop('disabled',true);\n                    allowStepperPing = false;\n                    break;\n                case  0:\n                    allowStepperPing = true;\n                    if (device.homeBead.value == 0)\n                    {\n                        $('#scanButton').text(\"Start Scan\");\n                        $('#scanButton').prop('disabled',false);\n                        $('#homeBeadButton').prop('disabled',false);\n                        disableBeadPullSettings(false);\n                        disableStepperSettings(false);\n                   }\n                    else\n                    {\n                        $('#scanButton').text(\"Start Scan\");\n                        $('#scanButton').prop('disabled',true);\n                        $('#homeBeadButton').prop('disabled',true);\n                        disableBeadPullSettings(true);\n                        disableStepperSettings(true);\n                    }\n                    break;\n                case  1:\n                    allowStepperPing = false;\n                    $('#scanButton').text(\"Abort Scan\");\n                    $('#scanButton').prop('disabled',false);\n                    $('#homeBeadButton').prop('disabled',true);\n                    disableBeadPullSettings(true);\n                    disableStepperSettings(true);\n                    break;\n                default:\n                    break;\n            }\n\n        }\n        function updateStepperReadings(device)\n        {\n            var scanVal = Number($('#scanButton').attr('scanAttr'));\n            var homeBeadVal = Number($('#homeBeadButton').attr('homeBeadAttr'));\n            if ((scanVal == 0) && (homeBeadVal == 0))\n            {\n                if (device.settingInProgress == 0)\n                {\n                    disableStepperSettings(false);\n                }\n                else\n                {\n                    disableStepperSettings(true);\n                }\n            }\n            else\n            {\n                disableStepperSettings(true);\n            }\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            if (!noStepsToTurnChanged) $('#noStepsToTurnInputId').val(device.noStepsToTurn.value);\n            if (!stepDelayuSChanged)   $('#stepDelayuSInputId').val(device.stepDelayuS.value);\n            if (!delayAfterRotationmSChanged)   $('#delayAfterRotationmSInputId').val(device.delayAfterRotationmS.value);\n\n            $('#resolutionInputId').val(device.resolution.value);\n            $('#stayAwakeAfterRotationInputId').val(device.stayAwakeAfterRotation.value);\n            $('#stepForwardInputId').val(device.stepForward.value);\n            $('#resetStepReadingInputId').val(device.resetStepReading.value);\n\n            $('#stepLocationId').text(device.stepLocation.value);\n            addTracePointsToTimePlot([device.stepLocation.value]);\n\n        }\n        function disableStepperSettings(disable)\n        {\n            $('#noStepsToTurnInputId').attr('disabled',disable);\n            $('#stepDelayuSInputId').attr('disabled',disable);\n            $('#delayAfterRotationmSInputId').attr('disabled',disable);\n            $('#resetStepReadingInputId').attr('disabled',disable);\n            \n        }\n        function disableBeadPullSettings(disable)\n        {\n            $('#noScanPtsInputId').attr('disabled',disable);\n            $('#markerFreqInputId').attr('disabled',disable);\n            $('#scanNameInputId').attr('disabled',disable);\n\n        }\n        function noStepsToTurnChange()\n        {\n            noStepsToTurnChanged = true;\n            $('#noStepsToTurnButtonId').show();\n        }\n        function stepDelayuSChange()\n        {\n            stepDelayuSChanged = true;\n            $('#stepDelayuSButtonId').show();\n        }\n        function delayAfterRotationmSChange()\n        {\n            delayAfterRotationmSChanged = true;\n            $('#delayAfterRotationmSButtonId').show();\n        }\n\n        function noScanPtsChange()\n        {\n            noScanPtsChanged = true;\n            $('#noScanPtsButtonId').show();\n        }\n        function markerFreqChange()\n        {\n            markerFreqChanged = true;\n            $('#markerFreqButtonId').show();\n        }\n        function scanNameChange()\n        {\n            scanNameChanged = true;\n            $('#scanNameButtonId').show();\n        }\n\n        function noStepsToTurn()\n        {\n            $('#noStepsToTurnButtonId').hide();\n            if (isNaN($('#noStepsToTurnInputId').val()))\n            {\n                noStepsToTurnChanged = false;\n                return;\n            }\n            var payload = {'attr': 'noStepsToTurn', 'value':Number($('#noStepsToTurnInputId').val())};\n            sendSetting(stepperDeviceConfig, payload);\n            noStepsToTurnChanged = false;\n        }\n        function stepDelayuS()\n        {\n            $('#stepDelayuSButtonId').hide();\n            if (isNaN($('#stepDelayuSInputId').val()))\n            {\n                stepDelayuSChanged = false;\n                return;\n            }\n            var payload = {'attr': 'stepDelayuS', 'value':Number($('#stepDelayuSInputId').val())};\n            sendSetting(stepperDeviceConfig,payload);\n            stepDelayuSChanged = false;\n        }\n        function delayAfterRotationmS()\n        {\n            $('#delayAfterRotationmSButtonId').hide();\n            if (isNaN($('#delayAfterRotationmSInputId').val()))\n            {\n                delayAfterRotationmSChanged = false;\n                return;\n            }\n            var payload = {'attr': 'delayAfterRotationmS', 'value':Number($('#delayAfterRotationmSInputId').val())};\n            sendSetting(stepperDeviceConfig,payload);\n            delayAfterRotationmSChanged = false;\n        }\n        function resetStepReading()\n        {\n            if (isNaN($('#resetStepReadingInputId').val()))\n            {\n                 return;\n            }\n            var payload = {'attr': 'resetStepReading', 'value':Number($('#resetStepReadingInputId').val())};\n            sendSetting(stepperDeviceConfig,payload);\n        }\n        function noScanPts()\n        {\n            $('#noScanPtsButtonId').hide();\n            if (isNaN($('#noScanPtsInputId').val()))\n            {\n                noScanPtsChanged = false;\n                return;\n            }\n            var payload = {'attr': 'noScanPts', 'value':Number($('#noScanPtsInputId').val())};\n            sendSetting(beadpullDeviceConfig, payload);\n            noScanPtsChanged = false;\n        }\n        function markerFreq()\n        {\n            $('#markerFreqButtonId').hide();\n            if (isNaN($('#markerFreqInputId').val()))\n            {\n                markerFreqChanged = false;\n                return;\n            }\n            var payload = {'attr': 'markerFreq', 'value':Number($('#markerFreqInputId').val())};\n            sendSetting(beadpullDeviceConfig, payload);\n            markerFreqChanged = false;\n        }\n        function scanName()\n        {\n            $('#scanNameButtonId').hide();\n            var payload = {'attr': 'scanName', 'value':$('#scanNameInputId').val()};\n            sendSetting(beadpullDeviceConfig, payload);\n            scanNameChanged = false;\n        }\n        function scan()\n        {\n           var scanVal = Number($('#scanButton').attr('scanAttr'));\n           switch(scanVal)\n           {\n                case  0:\n                    $('#scanButton').text(\"Abort Scan\");\n                    $('#scanButton').prop('disabled',false);\n                    $('#homeBeadButton').prop('disabled',true);\n                    scanVal = 1;\n                    allowStepperPing = false;\n                    break;\n                case  1:\n                    scanVal = -1;\n                    $('#scanButton').text(\"Abort in Progress\");\n                    $('#scanButton').prop('disabled',true);\n                    $('#homeBeadButton').prop('disabled',true);\n                    allowStepperPing = false;\n                    break;\n                default:\n                    break;\n            }\n            $('#scanButton').attr('scanAttr',scanVal.toString());\n            var payload = {'attr': 'scan', 'value':scanVal};\n            sendSetting(beadpullDeviceConfig, payload);\n        }\n        function homeBead()\n        {\n            $('#scanButton').prop('disabled',true);\n            $('#homeBeadButton').prop('disabled',true);\n            var payload = {'attr': 'homeBead', 'value':1};\n            sendSetting(beadpullDeviceConfig, payload);\n            $('#homeBeadButton').attr('homeBeadAttr',\"1\");\n        }\n",
        "output": "str",
        "x": 720,
        "y": 820,
        "wires": [
            [
                "ea72affbdba78c7b"
            ]
        ]
    },
    {
        "id": "8a2cca551d64f879",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : stepperDeviceConfig.deviceType,\n                name : stepperDeviceConfig.name, \n                attr : ['stepLocation'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n            yaxis:\n            {\n                title           : 'Position (Steps)',\n                titlefont       : {color: '#557a95'},\n                tickfont        : {color: '#557a95'},\n                gridcolor       : '#beceda',\n                zerolinecolor   : '#beceda',\n                linecolor       : '#beceda'\n//                rangemode       : 'tozero'\n            },\n/*\n            yaxis2:\n            {\n                title           : 'Steps to turn',\n                titlefont       : {color: '#f2a31f'},\n                tickfont        : {color: '#f2a31f'},\n                gridcolor       : '#f2a31f',\n                zerolinecolor   : '#f2a31f',\n                linecolor       : '#f2a31f',\n                overlaying: 'y',\n                side: 'right'\n                range: [0, 100]\n            },\n*/\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            var trace1 = \n            {\n                x: [],\n                y: [],\n                name: 'Position',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'blue'}\n        \n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n//                var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n             }\n\n\n            Plotly.newPlot('archiveChart', [trace1], layout);\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 690,
        "y": 900,
        "wires": [
            [
                "6f5a5e46.8a941"
            ]
        ]
    },
    {
        "id": "ea72affbdba78c7b",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.timePlot",
        "field": "payload.script.timePlot",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        var timePlotLength = 600000;\n        var timePlotLayout =\n        {\n            showlegend  : true,\n            legend      : { x: 0, y: 1.15},\n            height      : '500',\n            width       : '',\n            xaxis       :\n            {\n                type: 'date'\n            },\n            yaxis:\n            {\n                title           : 'Position (Steps)',\n                titlefont       : {color: '#557a95'},\n                tickfont        : {color: '#557a95'},\n                gridcolor       : '#beceda',\n                zerolinecolor   : '#beceda',\n                linecolor       : '#beceda'\n//                rangemode       : 'tozero'\n            },\n/*\n            yaxis2:\n            {\n                title           : 'Steps to turn',\n                titlefont       : {color: '#f2a31f'},\n                tickfont        : {color: '#f2a31f'},\n                gridcolor       : '#f2a31f',\n                zerolinecolor   : '#f2a31f',\n                linecolor       : '#f2a31f',\n                overlaying: 'y',\n                side: 'right'\n                range: [0, 100]\n            },\n*/\n            margin: \n                {\n                    t: 30, //top margin\n//                    l: 0, //left margin\n//                    r: 0, //right margin\n//                    b: 20 //bottom margin\n                },\n        };\n        var timePlotTraces = [];\n        timePlotTraces[0] = \n        {\n            x: [],\n            y: [],\n            name: 'Position',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: {color: 'blue'}\n    \n        };\n        function addTracePointsToTimePlot(pts)\n        {\n            var now = new Date().getTime();\n            var plotBeginning = now - timePlotLength;\n            var removeDone = false;\n            while(!removeDone)\n            {\n                if (timePlotTraces[0].x[0] < plotBeginning)\n                {\n                    for (var ii = 0; ii < timePlotTraces.length; ++ii)\n                    {\n                        timePlotTraces[ii].x.shift();\n                        timePlotTraces[ii].y.shift();\n                    }\n                }\n                else\n                {\n                    removeDone = true;\n                }\n            }\n            for (var ii = 0; ii < timePlotTraces.length; ++ii)\n            {\n                timePlotTraces[ii].x.push(now);\n                timePlotTraces[ii].y.push(pts[ii]);\n            }    \n            Plotly.newPlot(\"timePlotChart\", timePlotTraces, timePlotLayout);\n        }\n\n",
        "output": "str",
        "x": 700,
        "y": 860,
        "wires": [
            [
                "8a2cca551d64f879"
            ]
        ]
    },
    {
        "id": "64b8974a8d469849",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.timePlot",
        "field": "payload.html.timePlot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <p class='card-title'>Time Plot</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"timePlotChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1010,
        "y": 820,
        "wires": [
            [
                "7974c464.11ebac"
            ]
        ]
    },
    {
        "id": "ee630ac232b19d93",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "blinky scale input socket",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "97b56364e8f8efec",
            "5eef535208c9625b"
        ],
        "x": 875,
        "y": 260,
        "wires": [
            [
                "e448eb6d6ef04379"
            ]
        ]
    },
    {
        "id": "e448eb6d6ef04379",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/blinky-scale/websocket",
        "server": "3edb36a2de1c87da",
        "client": "",
        "x": 1030,
        "y": 260,
        "wires": []
    },
    {
        "id": "97b56364e8f8efec",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-scale mqtt",
        "links": [
            "ee630ac232b19d93"
        ],
        "x": 595,
        "y": 260,
        "wires": []
    },
    {
        "id": "6905fbf19ec0a289",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/blinky-scale/websocket",
        "server": "3edb36a2de1c87da",
        "client": "",
        "x": 200,
        "y": 640,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "5eef535208c9625b",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-scale-archive",
        "links": [
            "ee630ac232b19d93"
        ],
        "x": 1155,
        "y": 820,
        "wires": []
    },
    {
        "id": "f5291e397d256f63",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-scale';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1120,
        "wires": [
            [
                "e0a23451d4e1bd24"
            ]
        ]
    },
    {
        "id": "e76be0e5643c9cee",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Scale {{{payload.script.name}}}",
        "output": "str",
        "x": 360,
        "y": 1200,
        "wires": [
            [
                "dad2e365012ef648"
            ]
        ]
    },
    {
        "id": "dad2e365012ef648",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var blinkyScaleDevice = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var archiveList = [];\n        var pingInterval = 1000;\n        var lastPing = 0;\n\n        var blinkyScaleConfig = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            setInterval(function()\n            {\n                if (blinkyScaleDevice != null)\n                {\n                    if (blinkyScaleDevice.settingInProgress == 1) return;\n                }\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : blinkyScaleConfig.project + '/' +  blinkyScaleConfig.deviceType + '/' +  blinkyScaleConfig.name + '/setting/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n\n            disableSettings(true);\n        }\n        function onWebSocketOpen()\n        {\n            if (remoteApp) getArchive(24);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == blinkyScaleConfig.name) && (msg.mqttDevice.deviceType == blinkyScaleConfig.deviceType)  && (msg.mqttDevice.project == blinkyScaleConfig.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        blinkyScaleDevice = JSON.parse(msg.payload);\n                        updateBlinkyScaleReadings(blinkyScaleDevice);\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == blinkyScaleConfig.deviceType) && (msg.payload.device.name == blinkyScaleConfig.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting(config, payload)\n        {\n            var actionMsg = \n                {\n                    topic   : config.project + '/' +  config.deviceType + '/' +  config.name + '/setting/setting',\n                    payload : payload\n                };\n            sendActionMsg('setting','setting',actionMsg);\n        }\n        function reset(config, actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    var actionMsg = \n                        {\n                            topic   : config.project + '/' +  config.deviceType + '/' +  config.name + '/setting/reset',\n                            payload : actionFlag\n                        };\n                    sendActionMsg('reset','setting',actionMsg);\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n            \n        }\n",
        "output": "str",
        "x": 690,
        "y": 1120,
        "wires": [
            [
                "bcc2a76f113adc83"
            ]
        ]
    },
    {
        "id": "7074522cfe7676aa",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var deviceUnderEdit = null;\n        var deviceConfigUnderEdit = null;\n        var editedAttribute = null;\n// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDeviceConfig(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(device, config, attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n            deviceUnderEdit = device;\n            deviceConfigUnderEdit = config;\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDeviceConfig()\n        {\n            var attr = deviceUnderEdit[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            var actionMsg = \n                {\n                    topic   : deviceConfigUnderEdit.project + '/' +  deviceConfigUnderEdit.deviceType + '/' +  deviceConfigUnderEdit.name + '/setting/config',\n                    payload : deviceUnderEdit\n                };\n            sendActionMsg('config','setting',actionMsg);\n        }\n",
        "output": "str",
        "x": 700,
        "y": 1320,
        "wires": [
            [
                "6abb352722f88720"
            ]
        ]
    },
    {
        "id": "35ba2fd5965c413c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.gaugeWidget}}}\n{{{payload.script.timePlot}}}\n{{{payload.script.archive}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 680,
        "y": 1400,
        "wires": [
            [
                "9c5954a9580bf1f2"
            ]
        ]
    },
    {
        "id": "fa161b6156431278",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n{{{payload.html.dashboard}}}\n{{{payload.html.control}}}\n{{{payload.html.timePlot}}}\n{{{payload.html.archive}}}\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 990,
        "y": 1400,
        "wires": [
            [
                "146909963e3bd8c0"
            ]
        ]
    },
    {
        "id": "5f5c4302418f2a0c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 1320,
        "wires": [
            [
                "49aab3a634400dde"
            ]
        ]
    },
    {
        "id": "d504db454d06232f",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1010,
        "y": 1240,
        "wires": [
            [
                "663e65bbe983e61f"
            ]
        ]
    },
    {
        "id": "e0a23451d4e1bd24",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "scaleYellow.png",
        "output": "str",
        "x": 370,
        "y": 1160,
        "wires": [
            [
                "e76be0e5643c9cee"
            ]
        ]
    },
    {
        "id": "663e65bbe983e61f",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 1280,
        "wires": [
            [
                "5f5c4302418f2a0c"
            ]
        ]
    },
    {
        "id": "6abb352722f88720",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 690,
        "y": 1360,
        "wires": [
            [
                "35ba2fd5965c413c"
            ]
        ]
    },
    {
        "id": "49aab3a634400dde",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='resetButton' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='rebootButton'onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 1360,
        "wires": [
            [
                "fa161b6156431278"
            ]
        ]
    },
    {
        "id": "9c5954a9580bf1f2",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.dashboard",
        "field": "payload.html.dashboard",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <table width='100%'>\n                        <tr>\n                            <td width='20%' >\n                            </td>\n                            <td width='60%' align='center'>\n                                <span class='card-text'  >Weight</span>\n                            </td>\n                            <td width='20%'>\n                                <button class='btn btn-block card-button big-text' id=\"weightButton\" onclick=\"editDevice(blinkyScaleDevice,blinkyScaleConfig,'weight')\" >Edit</button>\n                            </td>\n                        </tr>\n                    </table>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"weightGaugePlot\" width=\"100%\" ></div>\n                    </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1020,
        "y": 1120,
        "wires": [
            [
                "2de1cf55a68d15e5"
            ]
        ]
    },
    {
        "id": "bcc2a76f113adc83",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateBlinkyScaleReadings(device)\n        {\n            if (device.settingInProgress == 0)\n            {\n                disableSettings(false);\n            }\n            else\n            {\n                disableSettings(true);\n            }\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            addTracePointsToTimePlot([device.weight.value]);\n            var titleColor = '#000000';\n            if (device.validData.value == 0) titleColor = 'magenta';\n            var weightGaugeConfig = \n                {\n                    lolo            : device.weight.alarm.limits.lolo, \n                    low             : device.weight.alarm.limits.low, \n                    high            : device.weight.alarm.limits.high, \n                    hihi            : device.weight.alarm.limits.hihi, \n                    value           : device.weight.value, \n                    unit            : device.weight.unit, \n                    numberSize      : 30,\n                    labelSize       : 38,\n                    label           : '', \n                    lowColor        : '#ffff00', \n                    mediumColor     : '#00ff00',\n                    highColor       : '#ff0000', \n                    backgroundColor : '#9eb5c7', \n                    labelColor      : 'black', \n                    titleColor      : titleColor, \n                    size            : 800, \n                    htmlId          : 'weightGaugePlot'\n                };\n            setGaugeWidget(weightGaugeConfig);\n            $('#tareButton').attr(\"style\", \"background-color:red;\");\n            if (device.tare.value == 1)\n            {\n                $('#tareButton').attr(\"style\", \"background-color:red;\");\n            }\n            else\n            {\n                $('#tareButton').attr(\"style\", \"background-color:yellow;\");\n            }\n\n\n        }\n        function disableSettings(disable)\n        {\n            $('#weightButton').attr('disabled',disable);\n            $('#tareButton').attr('disabled',disable);\n\n            $('#resetButton').attr('disabled',disable);\n            $('#rebootButton').attr('disabled',disable);\n\n        }\n        function tare()\n        {\n            payload = {attr:'tare', value:1};\n            disableSettings(true);\n            $('#tareButton').attr(\"style\", \"background-color:red;\");\n            blinkyScaleDevice.tare.value = 1;\n            sendSetting(blinkyScaleConfig, payload);\n        }\n",
        "output": "str",
        "x": 720,
        "y": 1160,
        "wires": [
            [
                "05f491c69d458ca2"
            ]
        ]
    },
    {
        "id": "2de1cf55a68d15e5",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.control",
        "field": "payload.html.control",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <p class='card-title'>Scale Control</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'>\n                            <table width='100%'>\n                                <tr >\n                                    <td width=20%></td>\n                                    <td width=60% style='padding-top: 10px;'><button class='btn btn-block big-text' id=\"tareButton\" style=\"background-color:yellow;\" onclick=\"tare()\" >Tare</button></td>\n                                    <td width=20%></td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1010,
        "y": 1160,
        "wires": [
            [
                "6c08f9ec6fb1daa9"
            ]
        ]
    },
    {
        "id": "0929482e39adddd6",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : blinkyScaleConfig.deviceType,\n                name : blinkyScaleConfig.name, \n                attr : ['weight'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : 'Weight (g)',\n                    titlefont       : {color: '#0000ff'},\n                    tickfont        : {color: '#0000ff'},\n                    gridcolor       : '#9999ff',\n                    zerolinecolor   : '#9999ff',\n                    linecolor       : '#9999ff',\n    \n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            var trace1 = \n            {\n                x: [],\n                y: [],\n                name: 'Weight',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'blue'}\n        \n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n//                var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n             }\n\n\n            Plotly.newPlot('archiveChart', [trace1], layout);\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 690,
        "y": 1280,
        "wires": [
            [
                "7074522cfe7676aa"
            ]
        ]
    },
    {
        "id": "05f491c69d458ca2",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.gaugeWidget",
        "field": "payload.script.gaugeWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// GaugeWidget\n        function setGaugeWidget(gaugeConfig)\n        {\n            var degrees = 180.0 * (gaugeConfig.hihi - gaugeConfig.value) / (gaugeConfig.hihi - gaugeConfig.lolo);\n            if (degrees < 0.0 )   degrees = 0.0;\n            if (degrees > 180.0 ) degrees = 180.0;\n            // Trig to calc meter point\n            var radius = 0.50;\n            var radians = degrees * Math.PI / 180;\n            var x = radius * Math.cos(radians);\n            var y = radius * Math.sin(radians);\n            var path1 = (degrees < 45 || degrees > 135) ? 'M -0.0 -0.025 L 0.0 0.025 L ' : 'M -0.025 -0.0 L 0.025 0.0 L ';\n            // Path: may have to change to create a better triangle\n            var mainPath = path1,\n                pathX = String(x),\n                space = ' ',\n                pathY = String(y),\n                pathEnd = ' Z';\n            var rotation = (180.0 * (gaugeConfig.high - gaugeConfig.lolo) / (gaugeConfig.hihi - gaugeConfig.lolo)) - 90.0;\n            var path = mainPath.concat(pathX,space,pathY,pathEnd);\n        \n            var valueColor = gaugeConfig.backgroundColor; \n            \n            if ( (gaugeConfig.lolo <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.low) )\n            {\n                valueColor = gaugeConfig.lowColor;\n            }\n            if ( (gaugeConfig.low  <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.high) )\n            {\n                valueColor = gaugeConfig.mediumColor;\n            }\n            if ( (gaugeConfig.high <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.hihi) )\n            {\n              valueColor = gaugeConfig.highColor;\n            }\n            if ( gaugeConfig.hihi <= gaugeConfig.value)\n            {\n                valueColor = gaugeConfig.highColor;\n            }\n            valueColor = gaugeConfig.titleColor;\n        \n            var data = \n                [\n                    { \n                        type: 'scatter',\n                        x: [0], y:[0],\n                        marker: {size: 14, color:valueColor},\n                        showlegend: false,\n                        name: gaugeConfig.label,\n                        text: gaugeConfig.value.toString(),\n                        hoverinfo: 'text+name',\n        \n                        \n                    },\n                    { \n                        values: \n                            [\n                                gaugeConfig.hihi - gaugeConfig.high, \n                                gaugeConfig.high - gaugeConfig.low, \n                                gaugeConfig.low  - gaugeConfig.lolo, \n                                gaugeConfig.hihi - gaugeConfig.lolo \n                            ],\n                        rotation: rotation,\n                        text: \n                            [\n                                gaugeConfig.high.toString() + '&#8596;' + gaugeConfig.hihi.toString(), \n                                gaugeConfig.low.toString()  + '&#8596;' + gaugeConfig.high.toString(), \n                                gaugeConfig.lolo.toString() + '&#8596;' + gaugeConfig.low.toString(), \n                                ''\n                            ],\n                        textinfo: 'text',\n                        textposition:'inside',\n                        textfont: {color: gaugeConfig.labelColor, size:gaugeConfig.numberSize},\n                        marker: \n                            {\n                                colors:\n                                    [\n                                        gaugeConfig.highColor,\n                                        gaugeConfig.mediumColor,\n                                        gaugeConfig.lowColor, \n                                        gaugeConfig.backgroundColor\n                                    ]\n                            },\n                        hoverinfo: 'label',\n                        hole: 0.5,\n                        type: 'pie',\n                        showlegend: false,\n                        sort: false\n                    }\n                ];\n            var layout = \n                {\n                    shapes:\n                        [\n                            {\n                                type: 'path',\n                                path: path,\n                                fillcolor: valueColor,\n                                line: {color: valueColor }\n                            }\n                        ],\n                    height: gaugeConfig.size,\n                    width: gaugeConfig.size,\n                    title: \n                        {\n                            text:gaugeConfig.label + ' ' + gaugeConfig.value.toString() + ' ' + gaugeConfig.unit,\n                            font: {color: valueColor, size:gaugeConfig.labelSize},\n                         },\n                    xaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1],\n                        },\n                    yaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1]\n                        },\n                    margin: \n                        {\n                            t: 80, //top margin\n                            l: 0, //left margin\n                            r: 0, //right margin\n                            b: 20 //bottom margin\n                        },\n                    plot_bgcolor:gaugeConfig.backgroundColor,\n                    paper_bgcolor:gaugeConfig.backgroundColor\n            \n                };\n            $('#' + gaugeConfig.htmlId).attr('style','max-height: calc(' + (gaugeConfig.size / 2).toString() + 'px + 50px) !important; overflow:hidden;');\n            Plotly.newPlot(gaugeConfig.htmlId, data, layout, {'displayModeBar': false});\n        }",
        "output": "str",
        "x": 710,
        "y": 1200,
        "wires": [
            [
                "c1266896708651b4"
            ]
        ]
    },
    {
        "id": "c1266896708651b4",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.timePlot",
        "field": "payload.script.timePlot",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        var timePlotLength = 600000;\n        var timePlotLayout =\n        {\n            showlegend  : true,\n            legend      : { x: 0, y: 1.15},\n            height      : '500',\n            width       : '',\n            xaxis       :\n            {\n                type: 'date'\n            },\n            yaxis:\n            {\n                title           : 'Weight(g)',\n                titlefont       : {color: '#557a95'},\n                tickfont        : {color: '#557a95'},\n                gridcolor       : '#beceda',\n                zerolinecolor   : '#beceda',\n                linecolor       : '#beceda',\n                rangemode       : 'tozero'\n            },\n            margin: \n                {\n                    t: 30, //top margin\n//                    l: 0, //left margin\n//                    r: 0, //right margin\n//                    b: 20 //bottom margin\n                },\n        };\n        var timePlotTraces = [];\n        timePlotTraces[0] = \n        {\n            x: [],\n            y: [],\n            name: 'Weight',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: {color: 'blue'}\n    \n        };\n        function addTracePointsToTimePlot(pts)\n        {\n            var now = new Date().getTime();\n            var plotBeginning = now - timePlotLength;\n            var removeDone = false;\n            while(!removeDone)\n            {\n                if (timePlotTraces[0].x[0] < plotBeginning)\n                {\n                    for (var ii = 0; ii < timePlotTraces.length; ++ii)\n                    {\n                        timePlotTraces[ii].x.shift();\n                        timePlotTraces[ii].y.shift();\n                    }\n                }\n                else\n                {\n                    removeDone = true;\n                }\n            }\n            for (var ii = 0; ii < timePlotTraces.length; ++ii)\n            {\n                timePlotTraces[ii].x.push(now);\n                timePlotTraces[ii].y.push(pts[ii]);\n            }    \n            Plotly.newPlot(\"timePlotChart\", timePlotTraces, timePlotLayout);\n        }\n\n",
        "output": "str",
        "x": 700,
        "y": 1240,
        "wires": [
            [
                "0929482e39adddd6"
            ]
        ]
    },
    {
        "id": "6c08f9ec6fb1daa9",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.timePlot",
        "field": "payload.html.timePlot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <p class='card-title'>Time Plot</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"timePlotChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1010,
        "y": 1200,
        "wires": [
            [
                "d504db454d06232f"
            ]
        ]
    },
    {
        "id": "146909963e3bd8c0",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1310,
        "y": 1400,
        "wires": []
    },
    {
        "id": "20528d2d622ddda6",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/blinky-scale",
        "url": "/blinky-scale",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1120,
        "wires": [
            [
                "1e265817288fdd5b"
            ]
        ]
    },
    {
        "id": "1e265817288fdd5b",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 1160,
        "wires": [
            [
                "b12624f8f82d0b24"
            ]
        ]
    },
    {
        "id": "b12624f8f82d0b24",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9c854ea3.68416",
        "x": 140,
        "y": 1200,
        "wires": [
            [
                "f5291e397d256f63"
            ]
        ]
    },
    {
        "id": "7619108af6edcae9",
        "type": "template",
        "z": "3eac550e9ccb56f3",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n{{{payload.head}}}\n  </head>\n  <body>\n{{{payload.navBar}}}\n{{{payload.body}}}\n{{{payload.foot}}}\n  </body>\n</html>",
        "output": "str",
        "x": 1130,
        "y": 80,
        "wires": [
            [
                "aa54de65ab1f9de7"
            ]
        ]
    },
    {
        "id": "517ad1dcdaf6c401",
        "type": "template",
        "z": "3eac550e9ccb56f3",
        "name": "Foot",
        "field": "payload.foot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <script src=\"/scripts/popper.js\"></script>\n    <script src=\"/scripts/bootstrap.js\"></script>",
        "output": "str",
        "x": 670,
        "y": 80,
        "wires": [
            [
                "7adf05bba753b6c1"
            ]
        ]
    },
    {
        "id": "eefaf73ac28de867",
        "type": "template",
        "z": "3eac550e9ccb56f3",
        "name": "Head",
        "field": "payload.head",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <meta charset=\"UTF-8\">\n    <link rel=\"icon\" href=\"/img/favicon.ico?v=4\" type=\"image/x-icon\"/>\n    <title>{{payload.title}}</title>\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui-timepicker-addon.css\"/>\n    <script src=\"/jquery/jquery.js\"></script>\n    <script src=\"/jquery/jquery-ui.js\"></script>\n    <script src=\"/jquery/jquery-ui-timepicker-addon.js\"></script>\n    <script src=\"/scripts/plotly-latest.min.js\"></script>\n    <script src=\"/scripts/pako.min.js\"></script>\n{{{payload.extraScripts}}}\n    <style>\n{{{payload.css}}}\n    </style>\n    <style>\n{{{payload.extraCss}}}\n    </style>\n    <script>\n{{{payload.utilityScripts}}}\n    </script>\n    <script>\n{{{payload.javascript}}}\n    </script>",
        "output": "str",
        "x": 550,
        "y": 80,
        "wires": [
            [
                "517ad1dcdaf6c401"
            ]
        ]
    },
    {
        "id": "aa54de65ab1f9de7",
        "type": "http response",
        "z": "3eac550e9ccb56f3",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1250,
        "y": 80,
        "wires": []
    },
    {
        "id": "94af420bca9bd84b",
        "type": "template",
        "z": "3eac550e9ccb56f3",
        "name": "Utility Scripts",
        "field": "payload.utilityScripts",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var remoteApp = true;\n        var ws;\n        var userID = -1;\n        var useWebSocketsFlag = true;\n        var project = '{{{payload.project}}}';\n        var heartBeatImage = false;\n        var wsUri = '';\n        var wsConnected = false;\n\n        function setRemoteApp(remoteAppSet)\n        {\n            remoteApp  = remoteAppSet;\n        }\n        function webSocketConnected()\n        {\n            return wsConnected;\n        }\n        function useWebSockets(webSocketsFlag)\n        {\n            useWebSocketsFlag = webSocketsFlag;\n        }\n        function wsConnectC()\n        {\n            if (!useWebSocketsFlag)\n            {\n                return;\n            }\n            if (wsUri.length < 1)\n            {\n                var uri = window.location.href.split('://');\n                var wslead = 'ws://';\n                if (uri[0] == 'https') wslead = 'wss://';\n                var questionLocation = uri[1].indexOf('?');\n                if (questionLocation >= 0)\n                {\n                    uri[1] = uri[1].substring(0,questionLocation);\n//                    console.log(uri[1]);\n                }\n                if (uri[1].indexOf('/') < (uri[1].length - 1))\n                {\n                    wsUri = wslead + uri[1] + '/websocket';\n                }\n                else\n                {\n                    wsUri = wslead + uri[1] + 'websocket';\n                }\n            }\n            ws = new WebSocket(wsUri);\n            ws.onmessage = function(event)\n            {\n                onWebSocketMessage(JSON.parse(event.data));\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                wsConnected = true;\n                $('#webSocketStatus').html('Open');\n                $('#reOpenWebSocketButton').hide();\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n                onWebSocketOpen();\n            };\n            ws.onclose = function()\n            {\n                console.log(\"Websocket closed\");\n                wsConnected = false;\n                $('#webSocketStatus').html('Closed');\n                $('#reOpenWebSocketButton').show();\n                $('#webSocketStatusCard').show();\n                $('#webSocketStatusRow').css('padding-bottom','25px');\n                onWebSocketClose();\n                wsConnectC();\n            };\n        }\n\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        $( document ).ready(function()\n        {\n            userID  = {{{payload.userID}}};\n            if (!useWebSocketsFlag)\n            {\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n            }\n            wsConnectC();\n            onDocumentReady();\n       });\n        $( function() \n        {\n            $( \"#acknowledgeDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() { $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n            $( \"#messageDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:[]\n                });\n        } );\n        function optionDialog(headerText, title, text, buttonTexts, buttonFunctions)\n        {\n            var buttonDefinitions = [];\n            for (var ii = 0; ii < buttonTexts.length; ++ii)\n            {\n                buttonDefinitions[ii] = \n                    {\n                        text: buttonTexts[ii],\n                        click: buttonFunctions[ii],\n                        showText: false\n                    };\n            }\n            $( \"#optionDialog\" ).dialog( \"option\", \"title\", headerText );   \n            $( \"#optionDialog\" ).dialog( \"option\", \"buttons\", buttonDefinitions);\n            $( \"#optionDialogTitle\" ).html(title);\n            $( \"#optionDialogText\" ).html(text);\n            $( \"#optionDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#optionDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function acknowledgeDialog(headerText, title, text)\n        {\n            $( \"#acknowledgeDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#acknowledgeDialogTitle\" ).html(title);\n            $( \"#acknowledgeDialogText\" ).html(text);\n            $( \"#acknowledgeDialog\" ).dialog( \"open\" );\n        }\n        function messageDialog(headerText, title, text)\n        {\n            $( \"#messageDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#messageDialogTitle\" ).html(title);\n            $( \"#messageDialogText\" ).html(text);\n            $( \"#messageDialog\" ).dialog( \"open\" );\n        }\n        function heartbeat()\n        {\n            heartBeatImage = !heartBeatImage;\n            var heartBeatImageSrc = '/img/heartRed.png';\n            if (heartBeatImage) heartBeatImageSrc = '/img/heartPink.png';\n            $('#heartBeatID').attr('src',heartBeatImageSrc);\n        }\n        function getCookie(extension)\n        {\n            var cookies = document.cookie.split(';');\n            var token = null;\n            var cookieName = project + extension + \"=\";\n            for (var icookie = 0; icookie < cookies.length; ++icookie)\n            {\n                var index = cookies[icookie].indexOf(cookieName);\n                if (index >= 0)\n                {\n                    token = cookies[icookie].substring(index + cookieName.length);\n                }\n            }\n            return token;\n        }\n        function sendActionMsg(topic,role,actionMsg)\n        {\n            var roleToken = \"\";\n            if (remoteApp) roleToken  = getCookie('Role');\n            if (roleToken == null)\n            {\n                location.reload();\n                return;\n            }\n            var webSocketMsg = \n            {\n                topic     : topic,\n                payload   : actionMsg,\n                userID    : userID,\n                token     : getCookie('Role'),\n                role      : role\n            };\n            ws.send(JSON.stringify(webSocketMsg));\n        }\n",
        "output": "str",
        "x": 410,
        "y": 80,
        "wires": [
            [
                "eefaf73ac28de867"
            ]
        ]
    },
    {
        "id": "8860e7e30cb43f4c",
        "type": "function",
        "z": "3eac550e9ccb56f3",
        "name": "Get project name and userID",
        "func": "function getRandomInt(max)\n{\n  return Math.floor(Math.random() * Math.floor(max));\n}\nmsg.payload['project'] = global.get('project')\nmsg.payload['userID'] = getRandomInt(32768);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "94af420bca9bd84b"
            ]
        ]
    },
    {
        "id": "68841ebaace359e5",
        "type": "mongodb3 in",
        "z": "3eac550e9ccb56f3",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "insertOne",
        "x": 1070,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "7adf05bba753b6c1",
        "type": "function",
        "z": "3eac550e9ccb56f3",
        "name": "IP filter",
        "func": "var ipfilter = [\n    \"127.0.0.16\"];\nvar ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nif (ipAddress==undefined) return null;\nvar ipAddressSplit = ipAddress.split(\".\");\nfor (var ii =  0; ii < ipfilter.length; ++ii)\n{\n    var ipfilterSplit = ipfilter[ii].split(\".\");\n    if (ipAddress == ipfilter[ii])\n    { \n        return null;\n    }\n    if (ipfilterSplit[2] == '*')\n    {\n        if ((ipfilterSplit[0] == ipAddressSplit[0]) && (ipfilterSplit[1] == ipAddressSplit[1]))\n        {\n            return null;\n        }\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 970,
        "y": 80,
        "wires": [
            [
                "7619108af6edcae9",
                "e350ef3c8ab8b59b"
            ]
        ]
    },
    {
        "id": "eff2a1bd6d8aa3b9",
        "type": "function",
        "z": "3eac550e9ccb56f3",
        "name": "parseIpRequest",
        "func": "var data = msg.payload.data.geo;\ndata['url'] = msg.extraInfo.url;\ndata['userID'] = msg.extraInfo.userID;\ndata['timeStamp'] = new Date().getTime();\nreturn {topic:'ipData', payload:data};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 220,
        "wires": [
            [
                "68841ebaace359e5"
            ]
        ]
    },
    {
        "id": "e59190d4f90e64e2",
        "type": "http request",
        "z": "3eac550e9ccb56f3",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://tools.keycdn.com/geo.json?host={{{payload.ipAddress}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "basic",
        "x": 1010,
        "y": 180,
        "wires": [
            [
                "eff2a1bd6d8aa3b9"
            ]
        ]
    },
    {
        "id": "e350ef3c8ab8b59b",
        "type": "function",
        "z": "3eac550e9ccb56f3",
        "name": "ClientInfo",
        "func": "var ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nvar url = msg.req.url;\nvar header = {};\nheader['User-Agent'] = 'keycdn-tools:' + global.get('ipRefWeb');\nreturn {\n    topic:'clientInfo', \n    headers: header,\n    payload:{\n        ipAddress   : ipAddress\n    },\n    extraInfo       : {url:url, userID:msg.payload.userID},\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 140,
        "wires": [
            [
                "e59190d4f90e64e2"
            ]
        ]
    },
    {
        "id": "4ed048bc5715e45c",
        "type": "function",
        "z": "b76c0793b15a73b9",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-power-mon';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 340,
        "wires": [
            [
                "f7220dfafc0629de"
            ]
        ]
    },
    {
        "id": "e57cbef1a2496981",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Power {{{payload.script.name}}}",
        "output": "str",
        "x": 360,
        "y": 420,
        "wires": [
            [
                "b22ed761bb603881"
            ]
        ]
    },
    {
        "id": "f7220dfafc0629de",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "powerMeterYellow.png",
        "output": "str",
        "x": 370,
        "y": 380,
        "wires": [
            [
                "e57cbef1a2496981"
            ]
        ]
    },
    {
        "id": "4e3e7c109c122268",
        "type": "subflow:8341090a.df9758",
        "z": "b76c0793b15a73b9",
        "name": "",
        "x": 1290,
        "y": 620,
        "wires": []
    },
    {
        "id": "a2c77824d9fe14b6",
        "type": "http in",
        "z": "b76c0793b15a73b9",
        "name": "/blinky-power-mon",
        "url": "/blinky-power-mon",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 340,
        "wires": [
            [
                "a9b1e710dfd1f486"
            ]
        ]
    },
    {
        "id": "a9b1e710dfd1f486",
        "type": "function",
        "z": "b76c0793b15a73b9",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "e28a44b1cd2e59b6"
            ]
        ]
    },
    {
        "id": "e28a44b1cd2e59b6",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "b76c0793b15a73b9",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "4ed048bc5715e45c"
            ]
        ]
    },
    {
        "id": "09e11d8a81caa3eb",
        "type": "function",
        "z": "b76c0793b15a73b9",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-power-mon';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1120,
        "wires": [
            [
                "72286e2a7aa8092a"
            ]
        ]
    },
    {
        "id": "5e599f562d019fd0",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Ideon Innovation Fikameter",
        "output": "str",
        "x": 320,
        "y": 1200,
        "wires": [
            [
                "63f9c23c028d53b8"
            ]
        ]
    },
    {
        "id": "63f9c23c028d53b8",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var archiveList = [];\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        function onDocumentReady()\n        {\n            setRemoteApp(false);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            window.addEventListener('resize', resizePlots);\n/*\n            document.onclick= function(event) \n            {\n                if (event===undefined) event= window.event;\n                var target= 'target' in event? event.target : event.srcElement;\n                console.log(event);\n            };\n*/\n            document.getElementById(\"archiveChart\").addEventListener(\"click\", duplicateWindow);\n            document.getElementById(\"powerAvgBarPlot\").addEventListener(\"click\", duplicateWindow);\n            document.getElementById(\"powerBarPlot\").addEventListener(\"click\", duplicateWindow);\n        }\n        function duplicateWindow()\n        {\n            window.open(window.location.href, '_blank').focus();\n        }\n        function resizePlots()\n        {\n            if (device != null) updateDmaReadings();\n            if (archiveData) Plotly.newPlot('archiveChart', [archiveTrace1,archiveTrace2], getArchiveLayout(), {displayModeBar: false, staticPlot: true});\n\n        }\n        function onWebSocketOpen()\n        {\n            getArchive(24);\n//            setInterval(getArchive, 60000, 24);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function getScaledPix(percentageWindowWidth)\n        {\n            var pix = window.innerWidth * percentageWindowWidth;\n            pix = Math.round(pix / 100);\n            return pix;\n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(msg.payload);\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n",
        "output": "str",
        "x": 650,
        "y": 1120,
        "wires": [
            [
                "2eedab8c73845866"
            ]
        ]
    },
    {
        "id": "9c118f992859f179",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.vertbarWidget}}}\n{{{payload.script.archive}}}\n",
        "output": "str",
        "x": 640,
        "y": 1280,
        "wires": [
            [
                "67ab7a72a79262d2"
            ]
        ]
    },
    {
        "id": "67ab7a72a79262d2",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div  width=\"100%\">\n            <table width=\"100%\" style=\"background-color:#547792;\">\n                <tr>\n                    <td width=\"15%\">\n                        <div id=\"powerBarPlot\" width=\"100%\" ></div>\n                    </td>\n                    <td width=\"15%\">\n                        <div id=\"powerAvgBarPlot\" width=\"100%\" ></div>\n                    </td>\n                    <td width=\"70%\">\n                        <div id=\"archiveChart\" width=\"100%\" ></div>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>",
        "output": "str",
        "x": 790,
        "y": 1280,
        "wires": [
            [
                "925a2e874aa50f29"
            ]
        ]
    },
    {
        "id": "72286e2a7aa8092a",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "coffeeCupWhite.png",
        "output": "str",
        "x": 330,
        "y": 1160,
        "wires": [
            [
                "5e599f562d019fd0"
            ]
        ]
    },
    {
        "id": "79c7b40a4473295a",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        var archiveData = false;\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['power','powerAvg'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        var archiveTrace1 = \n        {\n            x: [],\n            y: [],\n            name: 'Peak (W)',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: {color: '#00ffff',width:1}\n        };\n        var archiveTrace2 = \n        {\n            x: [],\n            y: [],\n            name: 'Avg (W)',\n            yaxis: 'y2',\n            type: 'scatter',\n            mode: 'lines',\n            line: {color: '#ffff00',width:4}\n        };\n        function getArchiveLayout()\n        {\n            var archiveLayout =\n            {\n                plot_bgcolor: \"#547792\",\n                paper_bgcolor:\"#547792\",\n                showlegend  : true,\n                legend      : \n                { \n                    x: 0, \n                    y: 1.2,\n                    orientation: \"h\",\n                    font: \n                    {\n                        color:'white',\n                        size: getScaledPix(1.6)\n                    }\n                },\n                showlegend  : true,\n                height      : getScaledPix(50),\n                width       : getScaledPix(70),\n                xaxis       :\n                {\n                    type: 'date',\n                    tickfont: \n                    {\n                        size: getScaledPix(2.0),\n                        color: 'white'\n                    },\n                    tickcolor: 'white',\n                    gridcolor: 'white',\n                    tickangle: 0,\n                    tickformat: \"%H:%M\\n%b-%d\"\n\n                },\n                yaxis:\n                {\n                    title           : '',\n                    titlefont       : {color: '#00ffff', size: getScaledPix(2)},\n                    tickfont        : {color: '#00ffff', size: getScaledPix(2)},\n                    gridcolor       : '#00aaff',\n                    zerolinecolor   : '#00aaff',\n                    linecolor       : '#00ffff',\n                    range: [0, 2500]\n                },\n    \n                yaxis2:\n                {\n                    title           : '',\n                    titlefont       : {color: '#ffff00', size: getScaledPix(2)},\n                    tickfont        : {color: '#ffff00', size: getScaledPix(2)},\n                    gridcolor       : '#ffffff',\n                    zerolinecolor   : '#ffffff',\n                    linecolor       : '#ffff00',\n                    overlaying: 'y',\n                    side: 'right',\n                    range: [0, 1000]\n                },\n    \n                margin: \n                    {\n                        l: getScaledPix(8),\n                        r: getScaledPix(8),\n                        b: getScaledPix(9),\n                        t: getScaledPix(0),\n                        pad: 0\n                    }\n            };\n            if (getScaledPix(100) < 200) archiveLayout.showlegend = false;\n            return archiveLayout;\n        }\n\n        function plotArchive()\n        {\n            archiveTrace1.x = [];\n            archiveTrace1.y = [];\n            archiveTrace2.x = [];\n            archiveTrace2.y = [];\n            \n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n                var x = archiveList[0].trace[ii].timeStamp;\n                archiveTrace1.x[ii] = x;\n                archiveTrace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n                archiveTrace2.x[ii] = x;\n                archiveTrace2.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[1]];\n\n            }\n            archiveData = true;\n\n            Plotly.newPlot('archiveChart', [archiveTrace1,archiveTrace2], getArchiveLayout(), {displayModeBar: false, staticPlot: true});\n\n        }\n",
        "output": "str",
        "x": 650,
        "y": 1240,
        "wires": [
            [
                "9c118f992859f179"
            ]
        ]
    },
    {
        "id": "cb4aa868627e15d6",
        "type": "http in",
        "z": "b76c0793b15a73b9",
        "name": "/blinky-power-mon-widget",
        "url": "/blinky-power-mon-widget",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1120,
        "wires": [
            [
                "09e11d8a81caa3eb"
            ]
        ]
    },
    {
        "id": "2eedab8c73845866",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings()\n        {\n\n            var powerAvgBarConfig = \n                {\n                    lolo            : device.powerAvg.alarm.limits.lolo, \n                    low             : device.powerAvg.alarm.limits.low, \n                    high            : device.powerAvg.alarm.limits.high, \n                    hihi            : device.powerAvg.alarm.limits.hihi, \n                    value           : device.powerAvg.value, \n                    unit            : device.powerAvg.unit, \n                    textsize        : 2,\n                    label           : 'Avg Power', \n                    lowColor        : '#00ff00', \n                    mediumColor     : '#ffff00',\n                    highColor       : '#ff0000', \n                    backgroundColor : '#547792', \n                    labelColor      : '#ffff00', \n                    gridColor       : '#ffffff',\n                    barColor        : '#ffff00',\n                    width           : 15, \n                    height          : 50, \n                    title           : \"Avg: \" + device.powerAvg.value.toFixed(0) + \" W\",\n                    htmlId          : 'powerAvgBarPlot'\n                };\n            setHorzBarWidget(powerAvgBarConfig);\n            \n            var powerBarConfig = \n                {\n                    lolo            : device.power.alarm.limits.lolo, \n                    low             : device.power.alarm.limits.low, \n                    high            : device.power.alarm.limits.high, \n                    hihi            : device.power.alarm.limits.hihi, \n                    value           : device.power.value, \n                    unit            : device.power.unit, \n                    textsize        : 2,\n                    label           : 'Peak Power', \n                    lowColor        : '#00ff00', \n                    mediumColor     : '#ffff00',\n                    highColor       : '#ff0000', \n                    backgroundColor : '#547792', \n                    labelColor      : '#00ffff', \n                    gridColor       : '#ffffff',\n                    barColor        : '#00ffff',\n                    width           : 15, \n                    height          : 50, \n                    title           : \"Peak: \" + device.power.value.toFixed(0) + \" W\",\n                    htmlId          : 'powerBarPlot'\n                };\n            setHorzBarWidget(powerBarConfig);\n        }\n",
        "output": "str",
        "x": 680,
        "y": 1160,
        "wires": [
            [
                "118b057d21c05c6b"
            ]
        ]
    },
    {
        "id": "925a2e874aa50f29",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n            background-color: transparent !important;\n            max-width: 100%;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top: 1w;\n          padding-bottom:0vw;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n          font-size:5vw;\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n       .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n        .googleSlide4by3-container \n        {\n            position: relative;\n            overflow: hidden;\n            padding-top: 75.0%;\n        }\n        .googleSlide4by3-iframe {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 0;\n        }        \n        .custom-select\n        {\n            color: black;\n            background-color: white;\n            height:80px;\n            line-height:70px;\n        }\n",
        "output": "str",
        "x": 910,
        "y": 1280,
        "wires": [
            [
                "70e98226a3727f27"
            ]
        ]
    },
    {
        "id": "70e98226a3727f27",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div id=\"navbar\">\n        <table width=\"100%\" style=\"background-color:#547792;\">\n            <tr>\n                <td width=\"10%\" style=\"text-align:center;\">\n                    <img src=\"/img/{{{payload.navBarIcon}}}\" style=\"width:5vw;height:5vw;\"/>\n                </td>\n                <td width=\"80%\" style=\"text-align:center;\">\n                    <span style=\"color:white;font-size:5vw;\">{{{payload.title}}}</span>\n                </td>\n                <td width=\"10%\" style=\"text-align:center;\">\n                    <a href=\"https://www.bl-mc.se/\" target=\"_blank\"><img src=\"/img/bl-mc-icon-inverse.png\" style=\"width:5vw;height:5vw;\"/></a>\n                </td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 1040,
        "y": 1280,
        "wires": [
            [
                "074db867d5c8ba43"
            ]
        ]
    },
    {
        "id": "118b057d21c05c6b",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "script.vertbarWidget",
        "field": "payload.script.vertbarWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Horz Bar Widget\n        function setHorzBarWidget(barConfig)\n        {\n            var lowValue = 0;\n            var mediumValue = 0;\n            var highValue = 0;\n        \n            var lowColor = barConfig.backgroundColor;\n            var mediumColor = barConfig.backgroundColor;\n            var highColor = barConfig.backgroundColor;\n            var valueColor = barConfig.backgroundColor; \n            \n            if ( barConfig.value <= barConfig.lolo)\n            {\n                lowValue = barConfig.lolo;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.lolo <= barConfig.value) && (barConfig.value < barConfig.low) )\n            {\n                lowValue = barConfig.value;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.low  <= barConfig.value) && (barConfig.value < barConfig.high) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.value - barConfig.low; \n                lowColor = barConfig.mediumColor;\n                mediumColor = barConfig.mediumColor;\n                valueColor = mediumColor;\n        \n            }\n            if ( (barConfig.high <= barConfig.value) && (barConfig.value < barConfig.hihi) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low;\n                highValue = barConfig.value - barConfig.high;\n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            if ( barConfig.hihi <= barConfig.value)\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low; \n                highValue = barConfig.hihi - barConfig.high; \n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            if (barConfig.barColor != null)\n            {\n                valueColor = barConfig.barColor;\n                lowColor = barConfig.barColor;\n                mediumColor = barConfig.barColor;\n                highColor = barConfig.barColor;\n            }\n            \n            var lowBar = \n            {\n                x: ['', '-'],\n                y: [ barConfig.low, lowValue],\n                type: 'bar',\n//                orientation: 'v',\n                showlegend: false,\n                marker:{color: [barConfig.lowColor, lowColor]},\n              width: [0.15, 0.8],\n            };\n            var mediumBar = \n            {\n                x: ['', '-'],\n                y: [barConfig.high - barConfig.low, mediumValue],\n                type: 'bar',\n//                orientation: 'v',\n                showlegend: false,\n                marker:{color: [barConfig.mediumColor, mediumColor]},\n              width: [0.15, 0.8],\n            };\n            var highBar = \n            {\n                x: ['', '-'],\n                y: [barConfig.hihi - barConfig.high, highValue],\n//                orientation: 'v',\n                type: 'bar',\n                showlegend: false,\n                marker:{color: [barConfig.highColor, highColor]},\n              width: [0.15, 0.8],\n            };\n            var layout = \n                {\n                    barmode: 'stack',\n                    plot_bgcolor:barConfig.backgroundColor,\n                    paper_bgcolor:barConfig.backgroundColor,\n                    margin: \n                        {\n                            t: getScaledPix(5), //top margin\n                            l: getScaledPix(5), //left margin\n                            r: getScaledPix(2), //right margin\n                            b: getScaledPix(5) //bottom margin\n                        },\n \n                    width:  getScaledPix(barConfig.width),\n                    height: getScaledPix(barConfig.height),\n                    title: \n                        {\n                            text: barConfig.title,\n//                            font: {color: valueColor, size:barConfig.textsize},\n                            font: {color: barConfig.labelColor, size:getScaledPix(barConfig.textsize)},\n                        },\n                    yaxis: \n                        {\n                            range: [barConfig.lolo, barConfig.hihi],\n                            tickfont: {color:barConfig.labelColor, size:getScaledPix(barConfig.textsize)},\n                            gridcolor       : barConfig.gridColor\n                        },\n                    xaxis: \n                        {\n                           tickfont: {color:valueColor, size:getScaledPix(barConfig.textsize)}\n                        }\n                };\n           Plotly.newPlot(barConfig.htmlId, [lowBar, mediumBar, highBar], layout, {displayModeBar: false, staticPlot: true});\n        }\n        \n        \n        \n        \n        \n    \n",
        "output": "str",
        "x": 680,
        "y": 1200,
        "wires": [
            [
                "79c7b40a4473295a"
            ]
        ]
    },
    {
        "id": "074db867d5c8ba43",
        "type": "subflow:3eac550e9ccb56f3",
        "z": "b76c0793b15a73b9",
        "name": "",
        "x": 1190,
        "y": 1280,
        "wires": []
    },
    {
        "id": "eb6b9dae1dd11622",
        "type": "http in",
        "z": "b76c0793b15a73b9",
        "name": "/blinky-power-mon-demo",
        "url": "/blinky-power-mon-demo",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 40,
        "wires": [
            [
                "81add380a85a0a3e"
            ]
        ]
    },
    {
        "id": "ce4ada83016b51a0",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div width=\"100%\" align=\"center\">\n        <table width=\"900px\">\n            <tr>\n                <td width='10%'></td>\n                <td width='60%' style='padding-bottom: 25px;'>\n                    <a class=\"btn jumbotron-button btn-block big-text bold-text\" href=\"/blinky-power-mon-open?name=101\">\n                        <table width=\"100%\" alight=\"left\">\n                            <tr>\n                                <td width=\"30%\" align='center'> <img src=\"/img/powerMeterYellow.png\" height=\"70px\"/></td>\n                                <td width=\"70%\" align=\"left\">Power Monitor 101</td>\n                            </tr>\n                        </table>\n                    </a>\n                </td>\n                <td width='10%'></td>\n            </tr>\n            <tr>\n                <td width='10%'></td>\n                <td width='60%' style='padding-bottom: 25px;'>\n                    <a class=\"btn jumbotron-button btn-block big-text bold-text\" href=\"/blinky-power-mon-open?name=102\">\n                        <table width=\"100%\" alight=\"left\">\n                            <tr>\n                                <td width=\"30%\" align='center'> <img src=\"/img/powerMeterYellow.png\" height=\"70px\"/></td>\n                                <td width=\"70%\" align=\"left\">Power Monitor 102</td>\n                            </tr>\n                        </table>\n                    </a>\n                </td>\n                <td width='10%'></td>\n            </tr>\n        </table>\n    </div>\n",
        "output": "str",
        "x": 850,
        "y": 40,
        "wires": [
            [
                "7e7eefc5b939543d"
            ]
        ]
    },
    {
        "id": "81add380a85a0a3e",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "powerMeterYellow.png",
        "output": "str",
        "x": 370,
        "y": 40,
        "wires": [
            [
                "f0cad9a64aed782e"
            ]
        ]
    },
    {
        "id": "f0cad9a64aed782e",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Power-Monitor Demo",
        "output": "str",
        "x": 520,
        "y": 40,
        "wires": [
            [
                "b43235ed25a677a9"
            ]
        ]
    },
    {
        "id": "b43235ed25a677a9",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n",
        "output": "str",
        "x": 690,
        "y": 40,
        "wires": [
            [
                "ce4ada83016b51a0"
            ]
        ]
    },
    {
        "id": "7e7eefc5b939543d",
        "type": "subflow:8341090a.df9758",
        "z": "b76c0793b15a73b9",
        "name": "",
        "x": 990,
        "y": 40,
        "wires": []
    },
    {
        "id": "768310d6c6d84f04",
        "type": "function",
        "z": "b76c0793b15a73b9",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-power-mon';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 700,
        "wires": [
            [
                "2188119420d8268c"
            ]
        ]
    },
    {
        "id": "bcceb24225f111ae",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Power {{{payload.script.name}}}",
        "output": "str",
        "x": 360,
        "y": 780,
        "wires": [
            [
                "0189608b340bcde2"
            ]
        ]
    },
    {
        "id": "0189608b340bcde2",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var archiveList = [];\n        var pingInterval = 2000;\n        var lastPing = 0;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        function onDocumentReady()\n        {\n            setRemoteApp(false);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            setInterval(function()\n            {\n                if (device != null)\n                {\n                    if (device.settingInProgress == 1) return;\n                }\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/setting/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n\n            disableSettings(true);\n        }\n        function onWebSocketOpen()\n        {\n            getArchive(24);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(msg.payload);\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings(device);\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n",
        "output": "str",
        "x": 690,
        "y": 700,
        "wires": [
            [
                "112cf1c01f2a4cde"
            ]
        ]
    },
    {
        "id": "3e840599806dd770",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.gaugeWidget}}}\n{{{payload.script.timePlot}}}\n{{{payload.script.archive}}}\n",
        "output": "str",
        "x": 680,
        "y": 900,
        "wires": [
            [
                "155a69f9d453f4f5"
            ]
        ]
    },
    {
        "id": "e6b74c68b4a52c7f",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n{{{payload.html.gaugePlot}}}\n{{{payload.html.dashboard}}}\n{{{payload.html.timePlot}}}\n{{{payload.html.archive}}}\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 990,
        "y": 860,
        "wires": [
            [
                "196dce77fb246f7f"
            ]
        ]
    },
    {
        "id": "d202e0aae921a912",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1010,
        "y": 820,
        "wires": [
            [
                "e6b74c68b4a52c7f"
            ]
        ]
    },
    {
        "id": "2188119420d8268c",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "powerMeterYellow.png",
        "output": "str",
        "x": 370,
        "y": 740,
        "wires": [
            [
                "bcceb24225f111ae"
            ]
        ]
    },
    {
        "id": "1f11c1ecdf7f507a",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['power','powerAvg','dutyFactor'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : 'Power (W)',\n                    titlefont       : {color: '#557a95'},\n                    tickfont        : {color: '#557a95'},\n                    gridcolor       : '#beceda',\n                    zerolinecolor   : '#beceda',\n                    linecolor       : '#beceda',\n                    rangemode       : 'tozero'\n                },\n\n                yaxis2:\n                {\n                    title           : 'Duty Factor (%)',\n                    titlefont       : {color: '#f2a31f'},\n                    tickfont        : {color: '#f2a31f'},\n                    gridcolor       : '#f2a31f',\n                    zerolinecolor   : '#f2a31f',\n                    linecolor       : '#f2a31f',\n                    overlaying: 'y',\n                    side: 'right',\n                    range: [0, 100]\n                },\n\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            var trace1 = \n            {\n                x: [],\n                y: [],\n                name: 'Power',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'blue'}\n            };\n            var trace2 = \n            {\n                x: [],\n                y: [],\n                name: 'Avg Power',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'red',width:4}\n            };\n\n            var trace3 = \n            {\n                x: [],\n                y: [],\n                name: 'Duty Factor',\n                yaxis: 'y2',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'orange'}\n            };\n\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n//                var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n                trace2.x[ii] = x;\n                trace2.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[1]];\n                trace3.x[ii] = x;\n                trace3.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[2]];\n//                trace4.x[ii] = x;\n//                trace4.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[3]];\n             }\n\n\n//            Plotly.newPlot('archiveChart', [trace1,trace2, trace3, trace4], layout);\n            Plotly.newPlot('archiveChart', [trace1,trace2, trace3], layout);\n\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 690,
        "y": 860,
        "wires": [
            [
                "3e840599806dd770"
            ]
        ]
    },
    {
        "id": "50de84c13ce9407c",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "script.gaugeWidget",
        "field": "payload.script.gaugeWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// GaugeWidget\n        function setGaugeWidget(gaugeConfig)\n        {\n            var degrees = 180.0 * (gaugeConfig.hihi - gaugeConfig.value) / (gaugeConfig.hihi - gaugeConfig.lolo);\n            if (degrees < 0.0 )   degrees = 0.0;\n            if (degrees > 180.0 ) degrees = 180.0;\n            // Trig to calc meter point\n            var radius = 0.50;\n            var radians = degrees * Math.PI / 180;\n            var x = radius * Math.cos(radians);\n            var y = radius * Math.sin(radians);\n            var path1 = (degrees < 45 || degrees > 135) ? 'M -0.0 -0.025 L 0.0 0.025 L ' : 'M -0.025 -0.0 L 0.025 0.0 L ';\n            // Path: may have to change to create a better triangle\n            var mainPath = path1,\n                pathX = String(x),\n                space = ' ',\n                pathY = String(y),\n                pathEnd = ' Z';\n            var rotation = (180.0 * (gaugeConfig.high - gaugeConfig.lolo) / (gaugeConfig.hihi - gaugeConfig.lolo)) - 90.0;\n            var path = mainPath.concat(pathX,space,pathY,pathEnd);\n        \n            var valueColor = gaugeConfig.backgroundColor; \n            \n            if ( (gaugeConfig.lolo <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.low) )\n            {\n                valueColor = gaugeConfig.lowColor;\n            }\n            if ( (gaugeConfig.low  <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.high) )\n            {\n                valueColor = gaugeConfig.mediumColor;\n            }\n            if ( (gaugeConfig.high <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.hihi) )\n            {\n              valueColor = gaugeConfig.highColor;\n            }\n            if ( gaugeConfig.hihi <= gaugeConfig.value)\n            {\n                valueColor = gaugeConfig.highColor;\n            }\n            valueColor = 'black';\n        \n            var data = \n                [\n                    { \n                        type: 'scatter',\n                        x: [0], y:[0],\n                        marker: {size: 14, color:valueColor},\n                        showlegend: false,\n                        name: gaugeConfig.label,\n                        text: gaugeConfig.value.toString(),\n                        hoverinfo: 'text+name',\n        \n                        \n                    },\n                    { \n                        values: \n                            [\n                                gaugeConfig.hihi - gaugeConfig.high, \n                                gaugeConfig.high - gaugeConfig.low, \n                                gaugeConfig.low  - gaugeConfig.lolo, \n                                gaugeConfig.hihi - gaugeConfig.lolo \n                            ],\n                        rotation: rotation,\n                        text: \n                            [\n                                gaugeConfig.high.toString() + '-' + gaugeConfig.hihi.toString(), \n                                gaugeConfig.low.toString()  + '-' + gaugeConfig.high.toString(), \n                                gaugeConfig.lolo.toString() + '-' + gaugeConfig.low.toString(), \n                                ''\n                            ],\n                        textinfo: 'text',\n                        textposition:'inside',\n                        textfont: {color: gaugeConfig.labelColor, size:gaugeConfig.numberSize},\n                        marker: \n                            {\n                                colors:\n                                    [\n                                        gaugeConfig.highColor,\n                                        gaugeConfig.mediumColor,\n                                        gaugeConfig.lowColor, \n                                        gaugeConfig.backgroundColor\n                                    ]\n                            },\n                        hoverinfo: 'label',\n                        hole: 0.5,\n                        type: 'pie',\n                        showlegend: false,\n                        sort: false\n                    }\n                ];\n            var layout = \n                {\n                    shapes:\n                        [\n                            {\n                                type: 'path',\n                                path: path,\n                                fillcolor: valueColor,\n                                line: {color: valueColor }\n                            }\n                        ],\n                    height: gaugeConfig.size,\n                    width: gaugeConfig.size,\n                    title: \n                        {\n                            text:gaugeConfig.label + ' ' + gaugeConfig.value.toString() + ' ' + gaugeConfig.unit,\n                            font: {color: valueColor, size:gaugeConfig.labelSize},\n                         },\n                    xaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1],\n                        },\n                    yaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1]\n                        },\n                    margin: \n                        {\n                            t: 80, //top margin\n                            l: 0, //left margin\n                            r: 0, //right margin\n                            b: 20 //bottom margin\n                        },\n                    plot_bgcolor:gaugeConfig.backgroundColor,\n                    paper_bgcolor:gaugeConfig.backgroundColor\n            \n                };\n            $('#' + gaugeConfig.htmlId).attr('style','max-height: calc(' + (gaugeConfig.size / 2).toString() + 'px + 50px) !important; overflow:hidden;');\n            Plotly.newPlot(gaugeConfig.htmlId, data, layout, {'displayModeBar': false});\n        }",
        "output": "str",
        "x": 710,
        "y": 780,
        "wires": [
            [
                "9099ed3d67db2570"
            ]
        ]
    },
    {
        "id": "0869ea0dd1576255",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "html.timePlot",
        "field": "payload.html.timePlot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <p class='card-title'>Time Plot</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"timePlotChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1010,
        "y": 780,
        "wires": [
            [
                "d202e0aae921a912"
            ]
        ]
    },
    {
        "id": "9099ed3d67db2570",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "script.timePlot",
        "field": "payload.script.timePlot",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        var timePlotLength = 600000;\n        var timePlotLayout =\n        {\n            showlegend  : true,\n            legend      : { x: 0, y: 1.15},\n            height      : '500',\n            width       : '',\n            xaxis       :\n            {\n                type: 'date'\n            },\n            yaxis:\n            {\n                title           : 'Power (W)',\n                titlefont       : {color: '#557a95'},\n                tickfont        : {color: '#557a95'},\n                gridcolor       : '#beceda',\n                zerolinecolor   : '#beceda',\n                linecolor       : '#beceda',\n                rangemode       : 'tozero'\n            },\n\n            yaxis2:\n            {\n                title           : 'Duty Factor (%)',\n                titlefont       : {color: '#f2a31f'},\n                tickfont        : {color: '#f2a31f'},\n                gridcolor       : '#f2a31f',\n                zerolinecolor   : '#f2a31f',\n                linecolor       : '#f2a31f',\n                overlaying: 'y',\n                side: 'right',\n                range: [0, 100]\n            },\n\n            margin: \n                {\n                    t: 30, //top margin\n//                    l: 0, //left margin\n//                    r: 0, //right margin\n//                    b: 20 //bottom margin\n                },\n        };\n        var timePlotTraces = [];\n        timePlotTraces[0] = \n        {\n            x: [],\n            y: [],\n            name: 'Power',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: {color: 'blue'}\n    \n        };\n        timePlotTraces[1] = \n        {\n            x: [],\n            y: [],\n            name: 'Avg Power',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: {color: 'red'}\n        };\n\n        timePlotTraces[2] = \n        {\n            x: [],\n            y: [],\n            name: 'Duty Factor',\n            yaxis: 'y2',\n            type: 'scatter',\n            mode: 'lines',\n            line: {color: 'orange'}\n        };\n\n        function addTracePointsToTimePlot(pts)\n        {\n            var now = new Date().getTime();\n            var plotBeginning = now - timePlotLength;\n            var removeDone = false;\n            while(!removeDone)\n            {\n                if (timePlotTraces[0].x[0] < plotBeginning)\n                {\n                    for (var ii = 0; ii < timePlotTraces.length; ++ii)\n                    {\n                        timePlotTraces[ii].x.shift();\n                        timePlotTraces[ii].y.shift();\n                    }\n                }\n                else\n                {\n                    removeDone = true;\n                }\n            }\n            for (var ii = 0; ii < timePlotTraces.length; ++ii)\n            {\n                timePlotTraces[ii].x.push(now);\n                timePlotTraces[ii].y.push(pts[ii]);\n            }    \n            Plotly.newPlot(\"timePlotChart\", timePlotTraces, timePlotLayout);\n        }\n\n",
        "output": "str",
        "x": 700,
        "y": 820,
        "wires": [
            [
                "1f11c1ecdf7f507a"
            ]
        ]
    },
    {
        "id": "155a69f9d453f4f5",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "html.gaugePlot",
        "field": "payload.html.gaugePlot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Gauge HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <p class='card-title'>Power</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"powerGaugePlot\" width=\"100%\" ></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1020,
        "y": 700,
        "wires": [
            [
                "42c78cf0d60816d0"
            ]
        ]
    },
    {
        "id": "196dce77fb246f7f",
        "type": "subflow:8341090a.df9758",
        "z": "b76c0793b15a73b9",
        "name": "",
        "x": 1290,
        "y": 860,
        "wires": []
    },
    {
        "id": "03e7b41dbf64c930",
        "type": "http in",
        "z": "b76c0793b15a73b9",
        "name": "/blinky-power-mon-open",
        "url": "/blinky-power-mon-open",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 700,
        "wires": [
            [
                "768310d6c6d84f04"
            ]
        ]
    },
    {
        "id": "42c78cf0d60816d0",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "html.dashboard",
        "field": "payload.html.dashboard",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <p class='card-title'>Status</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Power (W)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text'  id='powerId' ></span>\n                                    </td>\n                                    <td width='20%'>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Avg. Power (W)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text'  id='powerAvgId' ></span>\n                                    </td>\n                                    <td width='20%'>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Duty Factor (%)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text'  id='dutyFactorId' ></span>\n                                    </td>\n                                    <td width='20%'>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text'  id=\"interlockText\">Interlock</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/greenLight.png' height=\"90px\" id='interlock'/>\n                                    </td>\n                                    <td width='20%'>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >LoRa (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text'  id='loraId' ></span>\n                                    </td>\n                                    <td width='20%'>\n                                    </td>\n                                </tr>\n                           </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1020,
        "y": 740,
        "wires": [
            [
                "0869ea0dd1576255"
            ]
        ]
    },
    {
        "id": "112cf1c01f2a4cde",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings(device)\n        {\n            if (device.settingInProgress == 0)\n            {\n                disableSettings(false);\n            }\n            else\n            {\n                disableSettings(true);\n            }\n            $('#powerId').text(device.power.value);\n            $('#powerAvgId').text(device.powerAvg.value);\n            $('#dutyFactorId').text(device.dutyFactor.value);\n            $('#loraId').text(device.lora.value);\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            switch(device.interlock.value)\n            {\n                case 0:\n                    $('#interlock').attr('src','/img/greyLight.png');\n                    $('#interlockText').text('Interlock: None');\n                    break;\n                case 1:\n                    $('#interlock').attr('src','/img/greenLight.png');\n                    $('#interlockText').text('Interlock: Device OK');\n                    break;\n                case 2:\n                    $('#interlockText').text('Interlock: Device Error');\n                    $('#interlock').attr('src','/img/redLight.png');\n                    break;\n                case 3:\n                    $('#interlockText').text('Interlock: Power Off');\n                    $('#interlock').attr('src','/img/purpleLight.png');\n                    break;\n                default:\n                    break;\n            }\n            \n            addTracePointsToTimePlot([device.power.value, device.powerAvg.value, device.dutyFactor.value]);\n            var powerGaugeConfig = \n                {\n                    lolo            : device.power.alarm.limits.lolo, \n                    low             : device.power.alarm.limits.low, \n                    high            : device.power.alarm.limits.high, \n                    hihi            : device.power.alarm.limits.hihi, \n                    value           : device.power.value, \n                    unit            : device.power.unit, \n                    numberSize      : 30,\n                    labelSize       : 38,\n                    label           : '', \n                    lowColor        : '#ffff00', \n                    mediumColor     : '#00ff00',\n                    highColor       : '#ff0000', \n                    backgroundColor : '#9eb5c7', \n                    labelColor      : '#000000', \n                    size            : 800, \n                    htmlId          : 'powerGaugePlot'\n                };\n            setGaugeWidget(powerGaugeConfig);\n\n\n        }\n        function disableSettings(disable)\n        {\n\n        }\n",
        "output": "str",
        "x": 720,
        "y": 740,
        "wires": [
            [
                "50de84c13ce9407c"
            ]
        ]
    },
    {
        "id": "a8eff39aaa50d4ee",
        "type": "link in",
        "z": "b76c0793b15a73b9",
        "name": "blinky power-mon input socket",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "76b3cf58f503afba",
            "ab40734a9039d27b",
            "86963ceb5ef99f50"
        ],
        "x": 975,
        "y": 120,
        "wires": [
            [
                "135ab3ddd9596d34"
            ]
        ]
    },
    {
        "id": "135ab3ddd9596d34",
        "type": "websocket out",
        "z": "b76c0793b15a73b9",
        "name": "/blinky-power-mon/websocket",
        "server": "1f9918d2691e7340",
        "client": "",
        "x": 1150,
        "y": 120,
        "wires": []
    },
    {
        "id": "3906b8f2c8f56585",
        "type": "link in",
        "z": "b76c0793b15a73b9",
        "name": "blinky power-mon-simple input socket",
        "links": [
            "1e710224.de723e",
            "76b3cf58f503afba",
            "ab40734a9039d27b"
        ],
        "x": 975,
        "y": 180,
        "wires": [
            [
                "90046c4ce2d51ab6"
            ]
        ]
    },
    {
        "id": "90046c4ce2d51ab6",
        "type": "websocket out",
        "z": "b76c0793b15a73b9",
        "name": "/blinky-power-mon-widget/websocket",
        "server": "c18cc87702466083",
        "client": "",
        "x": 1170,
        "y": 180,
        "wires": []
    },
    {
        "id": "be962d884f5fbb6e",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "Action Permission Input",
        "links": [
            "44018b78e02d84c2",
            "13bdeaa52db84fa9"
        ],
        "x": 295,
        "y": 560,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "83814be0ecc1a713",
        "type": "websocket in",
        "z": "b76c0793b15a73b9",
        "name": "/blinky-power-mon/websocket",
        "server": "1f9918d2691e7340",
        "client": "",
        "x": 180,
        "y": 120,
        "wires": [
            [
                "13bdeaa52db84fa9"
            ]
        ]
    },
    {
        "id": "13bdeaa52db84fa9",
        "type": "link out",
        "z": "b76c0793b15a73b9",
        "name": "/blinky-power-mon/websocket out",
        "links": [
            "be962d884f5fbb6e"
        ],
        "x": 335,
        "y": 120,
        "wires": []
    },
    {
        "id": "99c592de43897c04",
        "type": "websocket in",
        "z": "b76c0793b15a73b9",
        "name": "/blinky-power-mon-widget/websocket",
        "server": "c18cc87702466083",
        "client": "",
        "x": 200,
        "y": 180,
        "wires": [
            [
                "be346535d6c21d30"
            ]
        ]
    },
    {
        "id": "be346535d6c21d30",
        "type": "link out",
        "z": "b76c0793b15a73b9",
        "name": "/blinky-power-mon-simple/websocket out",
        "links": [
            "3e6713494525c920",
            "f92124c5033966a3"
        ],
        "x": 375,
        "y": 180,
        "wires": []
    },
    {
        "id": "a61d9213f6edc11c",
        "type": "link in",
        "z": "b76c0793b15a73b9",
        "name": "blinky power-mon-open input socket",
        "links": [
            "1e710224.de723e",
            "76b3cf58f503afba",
            "ab40734a9039d27b"
        ],
        "x": 975,
        "y": 240,
        "wires": [
            [
                "1814ebccc4217c3b"
            ]
        ]
    },
    {
        "id": "1814ebccc4217c3b",
        "type": "websocket out",
        "z": "b76c0793b15a73b9",
        "name": "/blinky-power-mon-open/websocket",
        "server": "5a549bad8aa4e762",
        "client": "",
        "x": 1160,
        "y": 240,
        "wires": []
    },
    {
        "id": "46783f1b68148717",
        "type": "json",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 370,
        "y": 380,
        "wires": [
            [
                "0caca95977060f80"
            ]
        ]
    },
    {
        "id": "0caca95977060f80",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Shift msg",
        "func": "return msg.payload;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 380,
        "wires": [
            [
                "4bda293b.6a4c38"
            ]
        ]
    },
    {
        "id": "f92124c5033966a3",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "Action Switch In",
        "links": [
            "0c0471ad52cc97eb",
            "613568dea53692f1",
            "be346535d6c21d30"
        ],
        "x": 275,
        "y": 380,
        "wires": [
            [
                "46783f1b68148717"
            ]
        ]
    },
    {
        "id": "12a679f34f2923fb",
        "type": "websocket in",
        "z": "b76c0793b15a73b9",
        "name": "/blinky-power-mon-open/websocket",
        "server": "5a549bad8aa4e762",
        "client": "",
        "x": 200,
        "y": 240,
        "wires": [
            [
                "0c0471ad52cc97eb"
            ]
        ]
    },
    {
        "id": "0c0471ad52cc97eb",
        "type": "link out",
        "z": "b76c0793b15a73b9",
        "name": "/blinky-power-mon-open/websocket out",
        "links": [
            "f92124c5033966a3"
        ],
        "x": 375,
        "y": 240,
        "wires": []
    },
    {
        "id": "b22ed761bb603881",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var archiveList = [];\n        var pingInterval = 2000;\n        var lastPing = 0;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            setInterval(function()\n            {\n                if (device != null)\n                {\n                    if (device.settingInProgress == 1) return;\n                }\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/setting/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n\n            disableSettings(true);\n        }\n        function onWebSocketOpen()\n        {\n            if (remoteApp) getArchive(24);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(msg.payload);\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings(device);\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting(payload)\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting/setting',\n                    payload : payload\n                };\n            sendActionMsg('setting','setting',actionMsg);\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    var actionMsg = \n                        {\n                            topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting/reset',\n                            payload : actionFlag\n                        };\n                    sendActionMsg('reset','setting',actionMsg);\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n            \n        }\n",
        "output": "str",
        "x": 690,
        "y": 340,
        "wires": [
            [
                "157f630dd99bdcbe"
            ]
        ]
    },
    {
        "id": "37ac3d44ed6d1b3f",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDeviceConfig(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDeviceConfig()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting/config',\n                    payload : device\n                };\n            sendActionMsg('config','setting',actionMsg);\n        }\n",
        "output": "str",
        "x": 700,
        "y": 540,
        "wires": [
            [
                "3121df09f9b8dc70"
            ]
        ]
    },
    {
        "id": "8363f71586113d7b",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.gaugeWidget}}}\n{{{payload.script.timePlot}}}\n{{{payload.script.archive}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 680,
        "y": 620,
        "wires": [
            [
                "085ec6e2447a0633"
            ]
        ]
    },
    {
        "id": "595171cef1b3e55a",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n{{{payload.html.gaugePlot}}}\n{{{payload.html.dashboard}}}\n{{{payload.html.timePlot}}}\n{{{payload.html.archive}}}\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 990,
        "y": 620,
        "wires": [
            [
                "4e3e7c109c122268"
            ]
        ]
    },
    {
        "id": "0223c5f2d19420de",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 540,
        "wires": [
            [
                "5c7a9b3aaef052a3"
            ]
        ]
    },
    {
        "id": "9e71e033ffebd717",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1010,
        "y": 460,
        "wires": [
            [
                "db8eda8f152f5067"
            ]
        ]
    },
    {
        "id": "db8eda8f152f5067",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 500,
        "wires": [
            [
                "0223c5f2d19420de"
            ]
        ]
    },
    {
        "id": "3121df09f9b8dc70",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 690,
        "y": 580,
        "wires": [
            [
                "8363f71586113d7b"
            ]
        ]
    },
    {
        "id": "5c7a9b3aaef052a3",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='resetButton' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='rebootButton'onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 580,
        "wires": [
            [
                "595171cef1b3e55a"
            ]
        ]
    },
    {
        "id": "4288e23f5e92b6be",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "html.dashboard",
        "field": "payload.html.dashboard",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <p class='card-title'>Status</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Power (W)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text'  id='powerId' ></span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"powerEditButton\" onclick=\"editDevice('power')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Avg. Power (W)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text'  id='powerAvgId' ></span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"powerAvgEditButton\" onclick=\"editDevice('powerAvg')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Duty Factor (%)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text'  id='dutyFactorId' ></span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"dutyFactorEditButton\" onclick=\"editDevice('dutyFactor')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text'  id=\"interlockText\">Interlock</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/greenLight.png' height=\"90px\" id='interlock'/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"interlockEditButton\" onclick=\"editDevice('interlock')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >LoRa (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text'  id='loraId' ></span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"loraEditButton\" onclick=\"editDevice('lora')\" >Edit</button>\n                                    </td>\n                                </tr>\n                           </table>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1020,
        "y": 380,
        "wires": [
            [
                "9a96b96b6d45638a"
            ]
        ]
    },
    {
        "id": "157f630dd99bdcbe",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings(device)\n        {\n            if (device.settingInProgress == 0)\n            {\n                disableSettings(false);\n            }\n            else\n            {\n                disableSettings(true);\n            }\n            $('#powerId').text(device.power.value);\n            $('#powerAvgId').text(device.powerAvg.value);\n            $('#dutyFactorId').text(device.dutyFactor.value);\n            $('#loraId').text(device.lora.value);\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            switch(device.interlock.value)\n            {\n                case 0:\n                    $('#interlock').attr('src','/img/greyLight.png');\n                    $('#interlockText').text('Interlock: None');\n                    break;\n                case 1:\n                    $('#interlock').attr('src','/img/greenLight.png');\n                    $('#interlockText').text('Interlock: Device OK');\n                    break;\n                case 2:\n                    $('#interlockText').text('Interlock: Device Error');\n                    $('#interlock').attr('src','/img/redLight.png');\n                    break;\n                case 3:\n                    $('#interlockText').text('Interlock: Power Off');\n                    $('#interlock').attr('src','/img/purpleLight.png');\n                    break;\n                default:\n                    break;\n            }\n            \n            addTracePointsToTimePlot([device.power.value, device.powerAvg.value, device.dutyFactor.value]);\n            var powerGaugeConfig = \n                {\n                    lolo            : device.power.alarm.limits.lolo, \n                    low             : device.power.alarm.limits.low, \n                    high            : device.power.alarm.limits.high, \n                    hihi            : device.power.alarm.limits.hihi, \n                    value           : device.power.value, \n                    unit            : device.power.unit, \n                    numberSize      : 30,\n                    labelSize       : 38,\n                    label           : '', \n                    lowColor        : '#ffff00', \n                    mediumColor     : '#00ff00',\n                    highColor       : '#ff0000', \n                    backgroundColor : '#9eb5c7', \n                    labelColor      : '#000000', \n                    size            : 800, \n                    htmlId          : 'powerGaugePlot'\n                };\n            setGaugeWidget(powerGaugeConfig);\n\n\n        }\n        function disableSettings(disable)\n        {\n            $('#powerEditButton').attr('disabled',disable);\n            $('#powerAvgEditButton').attr('disabled',disable);\n            $('#dutyFactorEditButton').attr('disabled',disable);\n            $('#loraEditButton').attr('disabled',disable);\n\n            $('#resetButton').attr('disabled',disable);\n            $('#rebootButton').attr('disabled',disable);\n\n        }\n",
        "output": "str",
        "x": 720,
        "y": 380,
        "wires": [
            [
                "3034163ba3abcd2e"
            ]
        ]
    },
    {
        "id": "f8ae1d26c215569b",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['power','powerAvg','dutyFactor'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : 'Power (W)',\n                    titlefont       : {color: '#557a95'},\n                    tickfont        : {color: '#557a95'},\n                    gridcolor       : '#beceda',\n                    zerolinecolor   : '#beceda',\n                    linecolor       : '#beceda',\n                    rangemode       : 'tozero'\n                },\n                yaxis2:\n                {\n                    title           : 'Duty Factor (%)',\n                    titlefont       : {color: '#f2a31f'},\n                    tickfont        : {color: '#f2a31f'},\n                    gridcolor       : '#f2a31f',\n                    zerolinecolor   : '#f2a31f',\n                    linecolor       : '#f2a31f',\n                    overlaying: 'y',\n                    side: 'right',\n                    range: [0, 100]\n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            var trace1 = \n            {\n                x: [],\n                y: [],\n                name: 'Power',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'blue'}\n            };\n            var trace2 = \n            {\n                x: [],\n                y: [],\n                name: 'Avg Power',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'red'}\n            };\n            var trace3 = \n            {\n                x: [],\n                y: [],\n                name: 'Duty Factor',\n                yaxis: 'y2',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'orange'}\n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n//                var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n                trace2.x[ii] = x;\n                trace2.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[1]];\n                trace3.x[ii] = x;\n                trace3.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[2]];\n             }\n\n\n            Plotly.newPlot('archiveChart', [trace1,trace2, trace3], layout);\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 690,
        "y": 500,
        "wires": [
            [
                "37ac3d44ed6d1b3f"
            ]
        ]
    },
    {
        "id": "3034163ba3abcd2e",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "script.gaugeWidget",
        "field": "payload.script.gaugeWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// GaugeWidget\n        function setGaugeWidget(gaugeConfig)\n        {\n            var degrees = 180.0 * (gaugeConfig.hihi - gaugeConfig.value) / (gaugeConfig.hihi - gaugeConfig.lolo);\n            if (degrees < 0.0 )   degrees = 0.0;\n            if (degrees > 180.0 ) degrees = 180.0;\n            // Trig to calc meter point\n            var radius = 0.50;\n            var radians = degrees * Math.PI / 180;\n            var x = radius * Math.cos(radians);\n            var y = radius * Math.sin(radians);\n            var path1 = (degrees < 45 || degrees > 135) ? 'M -0.0 -0.025 L 0.0 0.025 L ' : 'M -0.025 -0.0 L 0.025 0.0 L ';\n            // Path: may have to change to create a better triangle\n            var mainPath = path1,\n                pathX = String(x),\n                space = ' ',\n                pathY = String(y),\n                pathEnd = ' Z';\n            var rotation = (180.0 * (gaugeConfig.high - gaugeConfig.lolo) / (gaugeConfig.hihi - gaugeConfig.lolo)) - 90.0;\n            var path = mainPath.concat(pathX,space,pathY,pathEnd);\n        \n            var valueColor = gaugeConfig.backgroundColor; \n            \n            if ( (gaugeConfig.lolo <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.low) )\n            {\n                valueColor = gaugeConfig.lowColor;\n            }\n            if ( (gaugeConfig.low  <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.high) )\n            {\n                valueColor = gaugeConfig.mediumColor;\n            }\n            if ( (gaugeConfig.high <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.hihi) )\n            {\n              valueColor = gaugeConfig.highColor;\n            }\n            if ( gaugeConfig.hihi <= gaugeConfig.value)\n            {\n                valueColor = gaugeConfig.highColor;\n            }\n            valueColor = 'black';\n        \n            var data = \n                [\n                    { \n                        type: 'scatter',\n                        x: [0], y:[0],\n                        marker: {size: 14, color:valueColor},\n                        showlegend: false,\n                        name: gaugeConfig.label,\n                        text: gaugeConfig.value.toString(),\n                        hoverinfo: 'text+name',\n        \n                        \n                    },\n                    { \n                        values: \n                            [\n                                gaugeConfig.hihi - gaugeConfig.high, \n                                gaugeConfig.high - gaugeConfig.low, \n                                gaugeConfig.low  - gaugeConfig.lolo, \n                                gaugeConfig.hihi - gaugeConfig.lolo \n                            ],\n                        rotation: rotation,\n                        text: \n                            [\n                                gaugeConfig.high.toString() + '-' + gaugeConfig.hihi.toString(), \n                                gaugeConfig.low.toString()  + '-' + gaugeConfig.high.toString(), \n                                gaugeConfig.lolo.toString() + '-' + gaugeConfig.low.toString(), \n                                ''\n                            ],\n                        textinfo: 'text',\n                        textposition:'inside',\n                        textfont: {color: gaugeConfig.labelColor, size:gaugeConfig.numberSize},\n                        marker: \n                            {\n                                colors:\n                                    [\n                                        gaugeConfig.highColor,\n                                        gaugeConfig.mediumColor,\n                                        gaugeConfig.lowColor, \n                                        gaugeConfig.backgroundColor\n                                    ]\n                            },\n                        hoverinfo: 'label',\n                        hole: 0.5,\n                        type: 'pie',\n                        showlegend: false,\n                        sort: false\n                    }\n                ];\n            var layout = \n                {\n                    shapes:\n                        [\n                            {\n                                type: 'path',\n                                path: path,\n                                fillcolor: valueColor,\n                                line: {color: valueColor }\n                            }\n                        ],\n                    height: gaugeConfig.size,\n                    width: gaugeConfig.size,\n                    title: \n                        {\n                            text:gaugeConfig.label + ' ' + gaugeConfig.value.toString() + ' ' + gaugeConfig.unit,\n                            font: {color: valueColor, size:gaugeConfig.labelSize},\n                         },\n                    xaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1],\n                        },\n                    yaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1]\n                        },\n                    margin: \n                        {\n                            t: 80, //top margin\n                            l: 0, //left margin\n                            r: 0, //right margin\n                            b: 20 //bottom margin\n                        },\n                    plot_bgcolor:gaugeConfig.backgroundColor,\n                    paper_bgcolor:gaugeConfig.backgroundColor\n            \n                };\n            $('#' + gaugeConfig.htmlId).attr('style','max-height: calc(' + (gaugeConfig.size / 2).toString() + 'px + 50px) !important; overflow:hidden;');\n            Plotly.newPlot(gaugeConfig.htmlId, data, layout, {'displayModeBar': false});\n        }",
        "output": "str",
        "x": 710,
        "y": 420,
        "wires": [
            [
                "495d302104a3a518"
            ]
        ]
    },
    {
        "id": "9a96b96b6d45638a",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "html.timePlot",
        "field": "payload.html.timePlot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <p class='card-title'>Time Plot</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"timePlotChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1010,
        "y": 420,
        "wires": [
            [
                "9e71e033ffebd717"
            ]
        ]
    },
    {
        "id": "495d302104a3a518",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "script.timePlot",
        "field": "payload.script.timePlot",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        var timePlotLength = 600000;\n        var timePlotLayout =\n        {\n            showlegend  : true,\n            legend      : { x: 0, y: 1.15},\n            height      : '500',\n            width       : '',\n            xaxis       :\n            {\n                type: 'date'\n            },\n            yaxis:\n            {\n                title           : 'Power (W)',\n                titlefont       : {color: '#557a95'},\n                tickfont        : {color: '#557a95'},\n                gridcolor       : '#beceda',\n                zerolinecolor   : '#beceda',\n                linecolor       : '#beceda',\n                rangemode       : 'tozero'\n            },\n            yaxis2:\n            {\n                title           : 'Duty Factor (%)',\n                titlefont       : {color: '#f2a31f'},\n                tickfont        : {color: '#f2a31f'},\n                gridcolor       : '#f2a31f',\n                zerolinecolor   : '#f2a31f',\n                linecolor       : '#f2a31f',\n                overlaying: 'y',\n                side: 'right',\n                range: [0, 100]\n            },\n            margin: \n                {\n                    t: 30, //top margin\n//                    l: 0, //left margin\n//                    r: 0, //right margin\n//                    b: 20 //bottom margin\n                },\n        };\n        var timePlotTraces = [];\n        timePlotTraces[0] = \n        {\n            x: [],\n            y: [],\n            name: 'Power',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: {color: 'blue'}\n    \n        };\n        timePlotTraces[1] = \n        {\n            x: [],\n            y: [],\n            name: 'Avg Power',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: {color: 'red'}\n        };\n        timePlotTraces[2] = \n        {\n            x: [],\n            y: [],\n            name: 'Duty Factor',\n            yaxis: 'y2',\n            type: 'scatter',\n            mode: 'lines',\n            line: {color: 'orange'}\n        };\n        function addTracePointsToTimePlot(pts)\n        {\n            var now = new Date().getTime();\n            var plotBeginning = now - timePlotLength;\n            var removeDone = false;\n            while(!removeDone)\n            {\n                if (timePlotTraces[0].x[0] < plotBeginning)\n                {\n                    for (var ii = 0; ii < timePlotTraces.length; ++ii)\n                    {\n                        timePlotTraces[ii].x.shift();\n                        timePlotTraces[ii].y.shift();\n                    }\n                }\n                else\n                {\n                    removeDone = true;\n                }\n            }\n            for (var ii = 0; ii < timePlotTraces.length; ++ii)\n            {\n                timePlotTraces[ii].x.push(now);\n                timePlotTraces[ii].y.push(pts[ii]);\n            }    \n            Plotly.newPlot(\"timePlotChart\", timePlotTraces, timePlotLayout);\n        }\n\n",
        "output": "str",
        "x": 700,
        "y": 460,
        "wires": [
            [
                "f8ae1d26c215569b"
            ]
        ]
    },
    {
        "id": "085ec6e2447a0633",
        "type": "template",
        "z": "b76c0793b15a73b9",
        "name": "html.gaugePlot",
        "field": "payload.html.gaugePlot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Gauge HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <p class='card-title'>Power</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"powerGaugePlot\" width=\"100%\" ></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1020,
        "y": 340,
        "wires": [
            [
                "4288e23f5e92b6be"
            ]
        ]
    },
    {
        "id": "d279605b9d7bde87",
        "type": "http request",
        "z": "c764f51b8859588d",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 490,
        "y": 240,
        "wires": [
            [
                "16eb68dd21c79672"
            ]
        ]
    },
    {
        "id": "f5de72b6e4e36701",
        "type": "inject",
        "z": "c764f51b8859588d",
        "name": "At 2pm",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "88542b1ff6092d2e"
            ]
        ]
    },
    {
        "id": "88542b1ff6092d2e",
        "type": "function",
        "z": "c764f51b8859588d",
        "name": "SpotPrice Query",
        "func": "var numberOfDays = 1;\nmsg.url ='https://api.energidataservice.dk/datastore_search_sql?sql=' \nmsg.url = msg.url + '%0A%20SELECT%20*';\nmsg.url = msg.url + '%0A%20from%20\"elspotprices\"';\nmsg.url = msg.url + '%0A%20WHERE%20%22HourUTC%22%20%3E%20((current_timestamp%20at%20time%20zone%20%27UTC%27)-INTERVAL%20%27'+ numberOfDays.toString() + '%20days%27)'\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 240,
        "wires": [
            [
                "d279605b9d7bde87"
            ]
        ]
    },
    {
        "id": "16eb68dd21c79672",
        "type": "function",
        "z": "c764f51b8859588d",
        "name": "Parse SpotPrice Table",
        "func": "var se4Data = [];\nexchangeRate = flow.get('exchangeRate');\nfor (var ii = 0; ii < msg.payload.result.records.length; ++ii)\n{\n    if(msg.payload.result.records[ii].PriceArea === 'SE4')\n    {\n        var timeStampDate = new Date(0);\n        var utc = msg.payload.result.records[ii].HourUTC\n        timeStampDate.setUTCFullYear(Number(utc.split('T')[0].split('-')[0]));\n        timeStampDate.setUTCMonth(Number(utc.split('T')[0].split('-')[1]) - 1);\n        timeStampDate.setUTCDate(Number(utc.split('T')[0].split('-')[2]));\n        timeStampDate.setUTCHours(Number(utc.split('T')[1].split(':')[0]));\n        timeStampDate.setUTCMinutes(0);\n        timeStampDate.setUTCSeconds(0);\n        timeStampDate.setUTCMilliseconds(0);\n        var priceEURMWHr = msg.payload.result.records[ii].SpotPriceEUR;\n        var se4Record = {timeStamp:timeStampDate.getTime(),priceEURMWHr: priceEURMWHr};\n        se4Data.push(se4Record);\n    }\n}\nsortByKey(se4Data, 'timeStamp');\n/*\nfor (var ii = 0; ii < se4Data.length; ++ii)\n{\n    node.warn((new Date(se4Data[ii].timeStamp).toString() + \" price \" + se4Data[ii].priceSEKWHr.toString()));\n}\n*/\nflow.set('se4Data',se4Data);\nreturn {topic:'SE4',payload:se4Data};\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        } );\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 240,
        "wires": [
            [
                "a8d2eb4249f7439d"
            ]
        ]
    },
    {
        "id": "bed174e4d77b4306",
        "type": "inject",
        "z": "c764f51b8859588d",
        "name": "Every hour",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "0 0-23 * * *",
        "once": false,
        "onceDelay": "10",
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "bd9b7f6fc6ad5da5"
            ]
        ]
    },
    {
        "id": "bd9b7f6fc6ad5da5",
        "type": "http request",
        "z": "c764f51b8859588d",
        "name": "EUR to SEK",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://freecurrencyapi.net/api/v2/latest?apikey=561e5bd0-6018-11ec-b454-2f4fdd123f27&base_currency=EUR",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 430,
        "y": 100,
        "wires": [
            [
                "7a20b461738cbe99"
            ]
        ]
    },
    {
        "id": "7a20b461738cbe99",
        "type": "function",
        "z": "c764f51b8859588d",
        "name": "Set SEK exchange Rate",
        "func": "var exchangeRate = flow.get('exchangeRate');\nif (exchangeRate == undefined) exchangeRate  = 10.0;\nif ((\"data\" in msg.payload))\n{\n    if ((\"SEK\" in msg.payload.data))\n    {\n        exchangeRate = msg.payload.data.SEK;\n    }\n    \n}\nflow.set('exchangeRate',exchangeRate);\nreturn {topic:'exchangeRate', payload:exchangeRate};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "56ee3b61e124bf7e",
        "type": "inject",
        "z": "c764f51b8859588d",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 40,
        "wires": [
            [
                "ec9ab555400d53ad"
            ]
        ]
    },
    {
        "id": "a061e6e5cdecce04",
        "type": "delay",
        "z": "c764f51b8859588d",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 740,
        "y": 160,
        "wires": [
            [
                "88542b1ff6092d2e"
            ]
        ]
    },
    {
        "id": "55af8d37e923382b",
        "type": "inject",
        "z": "c764f51b8859588d",
        "name": "Every 15 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-23 * * *",
        "once": false,
        "onceDelay": "6",
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 320,
        "wires": [
            [
                "a8d2eb4249f7439d"
            ]
        ]
    },
    {
        "id": "04607df462870afa",
        "type": "function",
        "z": "c764f51b8859588d",
        "name": "Find price",
        "func": "device = flow.get('device');\nexchangeRate = flow.get('exchangeRate');\nvar se4Data = flow.get('se4Data');\nvar now = new Date().getTime();\nvar record = se4Data.length - 1;\ndevice.futurePrice.value = [[],[]];\nvar writeFuture = false;\nfor (var ii = 0; ii < (se4Data.length - 1); ++ii)\n{\n    if ((now >= se4Data[ii].timeStamp) &&(now < se4Data[ii + 1].timeStamp))\n    {\n        record = ii;\n        writeFuture = true;\n    }\n    if (writeFuture)\n    {\n        device.futurePrice.value[0].push(se4Data[ii].timeStamp);\n        device.futurePrice.value[1].push(Math.round(se4Data[ii].priceEURMWHr * exchangeRate) / 1000);\n    }\n}\nif (writeFuture)\n{\n    device.futurePrice.value[0].push(se4Data[se4Data.length - 1].timeStamp);\n    device.futurePrice.value[1].push(Math.round(se4Data[se4Data.length - 1].priceEURMWHr * exchangeRate) / 1000);\n}\n\ndevice.price.value = Math.round(se4Data[record].priceEURMWHr * exchangeRate) / 1000;\ndevice.priceTime.value = se4Data[record].timeStamp\ndevice.exchangeRate.value = exchangeRate;\nreturn {topic:'blinky-lite-v3/espotPrice/SE4/reading', payload:device};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 320,
        "wires": [
            [
                "cdfe154e900d501f"
            ]
        ]
    },
    {
        "id": "a8d2eb4249f7439d",
        "type": "delay",
        "z": "c764f51b8859588d",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 310,
        "y": 320,
        "wires": [
            [
                "04607df462870afa"
            ]
        ]
    },
    {
        "id": "ec9ab555400d53ad",
        "type": "function",
        "z": "c764f51b8859588d",
        "name": "Setup device",
        "func": "var device = \n{\n    deviceType: \"espotPrice\",\n    name: \"SE4\",\n    arcPeriod: 3599000,\n    timeStamp: 1634109573209,\n    lastArchive: 1634109544163,\n    settingInProgress: 0,\n    archiveNow: 0,\n    price: \n    {\n        action: \"reading\",\n        type: \"scalar\",\n        value: 0.1,\n        unit: \"SEK/kW-hr\",\n        alarm: \n        {\n            value: 0,\n            limits: \n            {\n                lolo: 0,\n                low: 1,\n                high: 2,\n                hihi: 5\n            },\n            notify: \n            {\n                name: \"\",\n                number: \"\",\n                time: 0\n            }\n        }\n    },\n    priceTime: \n    {\n        action: \"reading\",\n        type: \"scalar\",\n        value: 0,\n        unit: \"ms\",\n        alarm: \n        {\n            value: 0,\n            limits: \n            {\n                lolo: 0,\n                low: 0,\n                high: 2634109573209,\n                hihi: 2634109573209\n            },\n            notify: \n            {\n                name: \"\",\n                number: \"\",\n                time: 0\n            }\n        }\n    },\n    exchangeRate: \n    {\n        action: \"reading\",\n        type: \"scalar\",\n        value: 10,\n        unit: \"SEK/EUR\",\n        alarm: \n        {\n            value: 0,\n            limits: \n            {\n                lolo: 0,\n                low: 0,\n                high: 20,\n                hihi: 20\n            },\n            notify: \n            {\n                name: \"\",\n                number: \"\",\n                time: 0\n            }\n        }\n    },\n    futurePrice:\n    {\n        action: \"reading\",\n        type: \"vector\",\n        value: [[],[]]\n    }\n}\n//flow.set('device',device);\nreturn {topic:'initDevice',payload:device};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 40,
        "wires": [
            [
                "420a959b0cc3fe78"
            ]
        ]
    },
    {
        "id": "cdfe154e900d501f",
        "type": "mqtt out",
        "z": "c764f51b8859588d",
        "name": "Publish reading",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "84d80994.260508",
        "x": 650,
        "y": 320,
        "wires": []
    },
    {
        "id": "9c0f985d81bbc008",
        "type": "inject",
        "z": "c764f51b8859588d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 440,
        "wires": [
            [
                "b2de0c0b9ab31693"
            ]
        ]
    },
    {
        "id": "b2de0c0b9ab31693",
        "type": "function",
        "z": "c764f51b8859588d",
        "name": "Get time",
        "func": "var now = new Date();\nmsg.payload = now.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 440,
        "wires": [
            [
                "d2e2f3f3a6f362ac"
            ]
        ]
    },
    {
        "id": "d2e2f3f3a6f362ac",
        "type": "debug",
        "z": "c764f51b8859588d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 440,
        "wires": []
    },
    {
        "id": "5c9c12f92d219aa2",
        "type": "function",
        "z": "c764f51b8859588d",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = 'SE4'\nmsg.payload['script']['deviceType'] = 'espotPrice';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 580,
        "wires": [
            [
                "faa6b997fe84097c"
            ]
        ]
    },
    {
        "id": "bc2de1ee6d096b29",
        "type": "template",
        "z": "c764f51b8859588d",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "SE4 El-Prissensor ",
        "output": "str",
        "x": 380,
        "y": 660,
        "wires": [
            [
                "d4f7af39035a2b83"
            ]
        ]
    },
    {
        "id": "faa6b997fe84097c",
        "type": "template",
        "z": "c764f51b8859588d",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "basicYellow.png",
        "output": "str",
        "x": 390,
        "y": 620,
        "wires": [
            [
                "bc2de1ee6d096b29"
            ]
        ]
    },
    {
        "id": "9cfb6854c850b0ab",
        "type": "http in",
        "z": "c764f51b8859588d",
        "name": "/espotPrice",
        "url": "/espotPrice",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 580,
        "wires": [
            [
                "5c9c12f92d219aa2"
            ]
        ]
    },
    {
        "id": "d4f7af39035a2b83",
        "type": "template",
        "z": "c764f51b8859588d",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var programStarted = false;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var archiveList = [];\n        var espotPriceDevice = null;\n\n        var espotPriceDeviceConfig = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        function onDocumentReady()\n        {\n            setRemoteApp(false);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n        }\n        function onWebSocketOpen()\n        {\n            if (!programStarted)\n            {\n                programStarted = true;\n                var webSocketMsg = \n                {\n                    topic     : 'getDevice',\n                    payload   : {$and : [ {deviceType: espotPriceDeviceConfig.deviceType}, {name: espotPriceDeviceConfig.name} ]},\n                    userID    : userID,\n                };\n                ws.send(JSON.stringify(webSocketMsg));\n            }\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'getDevice':\n                    if (msg.userID == userID)\n                    {\n                        espotPriceDevice = JSON.parse(JSON.stringify(msg.payload));\n                        updateDmaReadings(espotPriceDevice);\n                        var time = new Date().toLocaleString('en-SE',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', '');\n                        $('#currentSpotPriceCardTitle').text('Spot Price @ ' + time);\n                        getArchive(24);\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == espotPriceDeviceConfig.deviceType) && (msg.payload.device.name == espotPriceDeviceConfig.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n",
        "output": "str",
        "x": 710,
        "y": 580,
        "wires": [
            [
                "d1e9ec156ff2e971"
            ]
        ]
    },
    {
        "id": "9fff3437201b3bb3",
        "type": "template",
        "z": "c764f51b8859588d",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.gaugeWidget}}}\n{{{payload.script.timePlot}}}\n{{{payload.script.archive}}}\n",
        "output": "str",
        "x": 700,
        "y": 780,
        "wires": [
            [
                "66ed5559d1beb532"
            ]
        ]
    },
    {
        "id": "8a2dbff01561647d",
        "type": "template",
        "z": "c764f51b8859588d",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n{{{payload.html.dashboard}}}\n{{{payload.html.timePlot}}}\n{{{payload.html.archive}}}\n    </div>",
        "output": "str",
        "x": 1010,
        "y": 700,
        "wires": [
            [
                "e6c67f94b02a24fa"
            ]
        ]
    },
    {
        "id": "90f9d88e49aac4d6",
        "type": "template",
        "z": "c764f51b8859588d",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Past Price</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1030,
        "y": 660,
        "wires": [
            [
                "8a2dbff01561647d"
            ]
        ]
    },
    {
        "id": "66ed5559d1beb532",
        "type": "template",
        "z": "c764f51b8859588d",
        "name": "html.dashboard",
        "field": "payload.html.dashboard",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <p class='card-title' id=\"currentSpotPriceCardTitle\">Spot Price</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"priceGaugePlot\" width=\"100%\" ></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1040,
        "y": 580,
        "wires": [
            [
                "1acfc8958d95e9df"
            ]
        ]
    },
    {
        "id": "75d2ffd1e6588e88",
        "type": "template",
        "z": "c764f51b8859588d",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : espotPriceDeviceConfig.deviceType,\n                name : espotPriceDeviceConfig.name, \n                attr : ['priceTime','price'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '600',\n                width       : '',\n                xaxis       :\n                {\n                    type: 'date',\n                    tickangle       : '90',\n                    tickfont        : {size: 30},\n                    tickformat: \"%H:%M\\n%b-%d\"\n                },\n                yaxis:\n                {\n                    title           : 'SEK /kW-hr',\n                    titlefont       : {color: '#557a95',size: 30},\n                    tickfont        : {color: '#557a95',size: 30},\n                    gridcolor       : '#beceda',\n                    zerolinecolor   : '#beceda',\n                    linecolor       : '#beceda',\n                    range: [0, espotPriceDevice.price.alarm.limits.hihi]\n//                    rangemode       : 'tozero'\n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n                        b: 130 //bottom margin\n                    },\n                showlegend  :false\n            };\n            var trace1 = \n            {\n                x: [],\n                y: [],\n                name: 'SE4',\n                yaxis: 'y1',\n                type: 'bar',\n//                mode: 'lines',\n//                line: {color: 'blue'}\n        \n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n                trace1.x[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]];\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[1]] ;\n             }\n\n\n            Plotly.newPlot('archiveChart', [trace1], layout,{displayModeBar: false, staticPlot: true});\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 710,
        "y": 740,
        "wires": [
            [
                "9fff3437201b3bb3"
            ]
        ]
    },
    {
        "id": "1acfc8958d95e9df",
        "type": "template",
        "z": "c764f51b8859588d",
        "name": "html.timePlot",
        "field": "payload.html.timePlot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <p class='card-title'>Future Price</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"timePlotChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1030,
        "y": 620,
        "wires": [
            [
                "90f9d88e49aac4d6"
            ]
        ]
    },
    {
        "id": "d3fd93cd76969a12",
        "type": "template",
        "z": "c764f51b8859588d",
        "name": "script.timePlot",
        "field": "payload.script.timePlot",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        var timePlotLength = 600000;\n        var timePlotLayout =\n        {\n            showlegend  : true,\n            legend      : { x: 0, y: 1.15},\n            height      : '600',\n            width       : '',\n            xaxis       :\n            {\n                type: 'date',\n                tickangle       : '90',\n                tickfont        : {size: 30},\n                tickformat: \"%H:%M\\n%b-%d\"\n            },\n            yaxis:\n            {\n                title           : 'SEK / kW-hr',\n                titlefont       : {color: '#557a95', size: 30},\n                tickfont        : {color: '#557a95',size: 30},\n                gridcolor       : '#beceda',\n                zerolinecolor   : '#beceda',\n                linecolor       : '#beceda',\n                range           : [0, 5]\n//                rangemode       : 'tozero'\n            },\n            margin: \n                {\n                    t: 30, //top margin\n//                    l: 0, //left margin\n//                    r: 0, //right margin\n                    b: 130 //bottom margin\n                },\n                showlegend: false\n        };\n        var timePlotTraces = [];\n        timePlotTraces[0] = \n        {\n            x: [],\n            y: [],\n            name: 'SE4',\n            yaxis: 'y1',\n            type: 'bar'\n//            type: 'scatter',\n//            mode: 'lines',\n//            line: {color: 'red'}\n    \n        };\n        function futurePricePlot(futurePrice)\n        {\n            for (var ii = 0; ii < futurePrice.value[0].length; ++ii)\n            {\n                timePlotTraces[0].x.push(futurePrice.value[0][ii]);\n                timePlotTraces[0].y.push(futurePrice.value[1][ii]);\n            } \n            timePlotLayout.yaxis.range = [0, espotPriceDevice.price.alarm.limits.hihi];\n            Plotly.newPlot(\"timePlotChart\", timePlotTraces, timePlotLayout, {displayModeBar: false, staticPlot: true});\n        }\n\n",
        "output": "str",
        "x": 720,
        "y": 700,
        "wires": [
            [
                "75d2ffd1e6588e88"
            ]
        ]
    },
    {
        "id": "d1e9ec156ff2e971",
        "type": "template",
        "z": "c764f51b8859588d",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings(device)\n        {\n            var titleColor = '#000000';\n            var priceGaugeConfig = \n                {\n                    lolo            : device.price.alarm.limits.lolo, \n                    low             : device.price.alarm.limits.low, \n                    high            : device.price.alarm.limits.high, \n                    hihi            : device.price.alarm.limits.hihi, \n                    value           : Math.round(100 * device.price.value) / 100, \n                    unit            : device.price.unit, \n                    numberSize      : 30,\n                    labelSize       : 50,\n                    label           : '', \n                    lowColor        : '#00ff00', \n                    mediumColor     : '#ffff00',\n                    highColor       : '#ff0000', \n                    backgroundColor : '#9eb5c7', \n                    labelColor      : 'black', \n                    titleColor      : titleColor, \n                    size            : 800, \n                    htmlId          : 'priceGaugePlot'\n                };\n            setGaugeWidget(priceGaugeConfig);\n            futurePricePlot(device.futurePrice);\n        }\n",
        "output": "str",
        "x": 740,
        "y": 620,
        "wires": [
            [
                "8f7555a6e22b18a5"
            ]
        ]
    },
    {
        "id": "32f1be49da0827be",
        "type": "websocket in",
        "z": "c764f51b8859588d",
        "name": "/espotPrice/websocket",
        "server": "f867b4b695fa781a",
        "client": "",
        "x": 160,
        "y": 840,
        "wires": [
            [
                "2f1b0478.24543c"
            ]
        ]
    },
    {
        "id": "2f1b0478.24543c",
        "type": "json",
        "z": "c764f51b8859588d",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 840,
        "wires": [
            [
                "82d5a7b5.21ed68"
            ]
        ]
    },
    {
        "id": "82d5a7b5.21ed68",
        "type": "switch",
        "z": "c764f51b8859588d",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "readDatabase",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDevice",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 840,
        "wires": [
            [
                "613568dea53692f1"
            ],
            [
                "d6ccc809f3510550"
            ]
        ]
    },
    {
        "id": "338c2e2d2422c922",
        "type": "mongodb3 in",
        "z": "c764f51b8859588d",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "findOne",
        "x": 810,
        "y": 880,
        "wires": [
            [
                "e29f6bd5ab2e1064"
            ]
        ]
    },
    {
        "id": "1d0d229b0fa52613",
        "type": "websocket out",
        "z": "c764f51b8859588d",
        "name": "/espotPrice/websocket",
        "server": "f867b4b695fa781a",
        "client": "",
        "x": 1260,
        "y": 880,
        "wires": []
    },
    {
        "id": "e29f6bd5ab2e1064",
        "type": "function",
        "z": "c764f51b8859588d",
        "name": "Parse Device",
        "func": "var newMsg = \n{\n    topic   :   msg.topic,\n    payload:\n    {\n        topic   :   msg.topic,\n        userID  :   msg.userID,\n        payload :   msg.payload\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 880,
        "wires": [
            [
                "1d0d229b0fa52613"
            ]
        ]
    },
    {
        "id": "8f7555a6e22b18a5",
        "type": "template",
        "z": "c764f51b8859588d",
        "name": "script.gaugeWidget",
        "field": "payload.script.gaugeWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// GaugeWidget\n        function setGaugeWidget(gaugeConfig)\n        {\n            var degrees = 180.0 * (gaugeConfig.hihi - gaugeConfig.value) / (gaugeConfig.hihi - gaugeConfig.lolo);\n            if (degrees < 0.0 )   degrees = 0.0;\n            if (degrees > 180.0 ) degrees = 180.0;\n            // Trig to calc meter point\n            var radius = 0.50;\n            var radians = degrees * Math.PI / 180;\n            var x = radius * Math.cos(radians);\n            var y = radius * Math.sin(radians);\n            var path1 = (degrees < 45 || degrees > 135) ? 'M -0.0 -0.025 L 0.0 0.025 L ' : 'M -0.025 -0.0 L 0.025 0.0 L ';\n            // Path: may have to change to create a better triangle\n            var mainPath = path1,\n                pathX = String(x),\n                space = ' ',\n                pathY = String(y),\n                pathEnd = ' Z';\n            var rotation = (180.0 * (gaugeConfig.high - gaugeConfig.lolo) / (gaugeConfig.hihi - gaugeConfig.lolo)) - 90.0;\n            var path = mainPath.concat(pathX,space,pathY,pathEnd);\n        \n            var valueColor = gaugeConfig.backgroundColor; \n            \n            if ( (gaugeConfig.lolo <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.low) )\n            {\n                valueColor = gaugeConfig.lowColor;\n            }\n            if ( (gaugeConfig.low  <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.high) )\n            {\n                valueColor = gaugeConfig.mediumColor;\n            }\n            if ( (gaugeConfig.high <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.hihi) )\n            {\n              valueColor = gaugeConfig.highColor;\n            }\n            if ( gaugeConfig.hihi <= gaugeConfig.value)\n            {\n                valueColor = gaugeConfig.highColor;\n            }\n            valueColor = gaugeConfig.titleColor;\n        \n            var data = \n                [\n                    { \n                        type: 'scatter',\n                        x: [0], y:[0],\n                        marker: {size: 14, color:valueColor},\n                        showlegend: false,\n                        name: gaugeConfig.label,\n                        text: gaugeConfig.value.toString(),\n                        hoverinfo: 'text+name',\n        \n                        \n                    },\n                    { \n                        values: \n                            [\n                                gaugeConfig.hihi - gaugeConfig.high, \n                                gaugeConfig.high - gaugeConfig.low, \n                                gaugeConfig.low  - gaugeConfig.lolo, \n                                gaugeConfig.hihi - gaugeConfig.lolo \n                            ],\n                        rotation: rotation,\n                        text: \n                            [\n                                gaugeConfig.high.toString() + ' to ' + gaugeConfig.hihi.toString(), \n                                gaugeConfig.low.toString()  + ' to ' + gaugeConfig.high.toString(), \n                                gaugeConfig.lolo.toString() + ' to ' + gaugeConfig.low.toString(), \n                                ''\n                            ],\n                        textinfo: 'text',\n                        textposition:'inside',\n                        textfont: {color: gaugeConfig.labelColor, size:gaugeConfig.numberSize},\n                        marker: \n                            {\n                                colors:\n                                    [\n                                        gaugeConfig.highColor,\n                                        gaugeConfig.mediumColor,\n                                        gaugeConfig.lowColor, \n                                        gaugeConfig.backgroundColor\n                                    ]\n                            },\n                        hoverinfo: 'label',\n                        hole: 0.5,\n                        type: 'pie',\n                        showlegend: false,\n                        sort: false\n                    }\n                ];\n            var layout = \n                {\n                    shapes:\n                        [\n                            {\n                                type: 'path',\n                                path: path,\n                                fillcolor: valueColor,\n                                line: {color: valueColor }\n                            }\n                        ],\n                    height: gaugeConfig.size,\n                    width: gaugeConfig.size,\n                    title: \n                        {\n                            text:gaugeConfig.label + ' ' + gaugeConfig.value.toString() + ' ' + gaugeConfig.unit,\n                            font: {color: valueColor, size:gaugeConfig.labelSize},\n                         },\n                    xaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1],\n                        },\n                    yaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1]\n                        },\n                    margin: \n                        {\n                            t: 80, //top margin\n                            l: 0, //left margin\n                            r: 0, //right margin\n                            b: 20 //bottom margin\n                        },\n                    plot_bgcolor:gaugeConfig.backgroundColor,\n                    paper_bgcolor:gaugeConfig.backgroundColor\n            \n                };\n            $('#' + gaugeConfig.htmlId).attr('style','max-height: calc(' + (gaugeConfig.size / 2).toString() + 'px + 50px) !important; overflow:hidden;');\n            Plotly.newPlot(gaugeConfig.htmlId, data, layout, {'displayModeBar': false, staticPlot: true});\n        }",
        "output": "str",
        "x": 730,
        "y": 660,
        "wires": [
            [
                "d3fd93cd76969a12"
            ]
        ]
    },
    {
        "id": "613568dea53692f1",
        "type": "link out",
        "z": "c764f51b8859588d",
        "name": "espotPrice Websocket archive request",
        "links": [
            "f92124c5033966a3"
        ],
        "x": 575,
        "y": 820,
        "wires": []
    },
    {
        "id": "df90abfd748bbd25",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "espotPrice-archive",
        "links": [
            "94489a275b7f183f"
        ],
        "x": 1155,
        "y": 860,
        "wires": []
    },
    {
        "id": "94489a275b7f183f",
        "type": "link in",
        "z": "c764f51b8859588d",
        "name": "espotPrice Websocket In",
        "links": [
            "df90abfd748bbd25"
        ],
        "x": 1115,
        "y": 820,
        "wires": [
            [
                "1d0d229b0fa52613"
            ]
        ]
    },
    {
        "id": "d6ccc809f3510550",
        "type": "function",
        "z": "c764f51b8859588d",
        "name": "Shift msg",
        "func": "return msg.payload;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 880,
        "wires": [
            [
                "338c2e2d2422c922"
            ]
        ]
    },
    {
        "id": "f1cdd1ecd1214374",
        "type": "subflow:ca529822.9112f8",
        "z": "c764f51b8859588d",
        "name": "",
        "x": 1470,
        "y": 700,
        "wires": []
    },
    {
        "id": "e6c67f94b02a24fa",
        "type": "template",
        "z": "c764f51b8859588d",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n       .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n        .googleSlide4by3-container \n        {\n            position: relative;\n            overflow: hidden;\n            padding-top: 75.0%;\n        }\n        .googleSlide4by3-iframe {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 0;\n        }        \n        .custom-select\n        {\n            color: black;\n            background-color: white;\n            height:80px;\n            line-height:70px;\n        }\n",
        "output": "str",
        "x": 1210,
        "y": 700,
        "wires": [
            [
                "ed9ce1018c1e42bd"
            ]
        ]
    },
    {
        "id": "ed9ce1018c1e42bd",
        "type": "template",
        "z": "c764f51b8859588d",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                    <a href='https://www.bl-mc.se/' >\n                        <img src=\"/img/bl-mc-icon-inverse.png\" height=\"75px\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title big-text bold-text\">\n                        <span>{{{payload.title}}}</span>\n                    </h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\" width=\"20%\">\n                </td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 1340,
        "y": 700,
        "wires": [
            [
                "f1cdd1ecd1214374"
            ]
        ]
    },
    {
        "id": "f812bb6a.1aec68",
        "type": "json",
        "z": "c764f51b8859588d",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1330,
        "y": 200,
        "wires": [
            [
                "e0d2b8e49c2e469b"
            ]
        ]
    },
    {
        "id": "f9be9054ce456982",
        "type": "switch",
        "z": "c764f51b8859588d",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ping",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "config",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1670,
        "y": 200,
        "wires": [
            [
                "9120711128e161c0"
            ],
            [
                "8bdd37bae2e08b93"
            ]
        ]
    },
    {
        "id": "e0d2b8e49c2e469b",
        "type": "function",
        "z": "c764f51b8859588d",
        "name": "Filter MQTT",
        "func": "return {topic:msg.topic.split('/')[4], payload:msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 200,
        "wires": [
            [
                "f9be9054ce456982"
            ]
        ]
    },
    {
        "id": "e7b7e47649621cd2",
        "type": "mqtt in",
        "z": "c764f51b8859588d",
        "name": "",
        "topic": "blinky-lite-v3/espotPrice/SE4/setting/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "84d80994.260508",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1110,
        "y": 200,
        "wires": [
            [
                "f812bb6a.1aec68"
            ]
        ]
    },
    {
        "id": "8bdd37bae2e08b93",
        "type": "function",
        "z": "c764f51b8859588d",
        "name": "Save Config",
        "func": "var device = JSON.parse(JSON.stringify(msg.payload));\nflow.set('device',device);\nreturn {topic:'blinky-lite-v3/espotPrice/SE4/reading', payload:device};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 220,
        "wires": [
            [
                "861321fbabcddc82"
            ]
        ]
    },
    {
        "id": "420a959b0cc3fe78",
        "type": "function",
        "z": "c764f51b8859588d",
        "name": "Get device from database",
        "func": "device = msg.payload\nvar projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n    } \n};\nvar query =  {$and : [ {deviceType: device.deviceType}, {name: device.name} ]};\nreturn {topic:'getDevice',payload:[query,projectionFilter]};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 40,
        "wires": [
            [
                "8a3d925738c4ff18"
            ]
        ]
    },
    {
        "id": "8a3d925738c4ff18",
        "type": "mongodb3 in",
        "z": "c764f51b8859588d",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "findOne",
        "x": 840,
        "y": 40,
        "wires": [
            [
                "a42775c71bed6090"
            ]
        ]
    },
    {
        "id": "a42775c71bed6090",
        "type": "function",
        "z": "c764f51b8859588d",
        "name": "Save device to flow",
        "func": "flow.set('device',msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 40,
        "wires": [
            [
                "bd9b7f6fc6ad5da5",
                "a061e6e5cdecce04"
            ]
        ]
    },
    {
        "id": "9120711128e161c0",
        "type": "function",
        "z": "c764f51b8859588d",
        "name": "Ping",
        "func": "var device = flow.get('device');\nreturn {topic:'blinky-lite-v3/espotPrice/SE4/reading', payload:device};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 160,
        "wires": [
            [
                "861321fbabcddc82"
            ]
        ]
    },
    {
        "id": "861321fbabcddc82",
        "type": "link out",
        "z": "c764f51b8859588d",
        "name": "Setting Action out",
        "links": [
            "8de3e25764bb3a49"
        ],
        "x": 1965,
        "y": 180,
        "wires": []
    },
    {
        "id": "8de3e25764bb3a49",
        "type": "link in",
        "z": "c764f51b8859588d",
        "name": "Publish Reading In",
        "links": [
            "861321fbabcddc82"
        ],
        "x": 535,
        "y": 380,
        "wires": [
            [
                "cdfe154e900d501f"
            ]
        ]
    },
    {
        "id": "0509dad5f8dab3c9",
        "type": "inject",
        "z": "c764f51b8859588d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1030,
        "y": 360,
        "wires": [
            [
                "11493beabaa7bdff"
            ]
        ]
    },
    {
        "id": "11493beabaa7bdff",
        "type": "function",
        "z": "c764f51b8859588d",
        "name": "Test Ping",
        "func": "return {topic:'blinky-lite-v3/espotPrice/SE4/setting/ping',payload:true};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "c52dde1e46189934",
        "type": "mqtt in",
        "z": "c764f51b8859588d",
        "name": "",
        "topic": "blinky-lite-v3/espotPrice/SE4/reading",
        "qos": "0",
        "datatype": "auto",
        "broker": "84d80994.260508",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1090,
        "y": 440,
        "wires": [
            [
                "30dd0b9c76065dd0"
            ]
        ]
    },
    {
        "id": "4f1d6a7db080fb5e",
        "type": "debug",
        "z": "c764f51b8859588d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 440,
        "wires": []
    },
    {
        "id": "30dd0b9c76065dd0",
        "type": "json",
        "z": "c764f51b8859588d",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1310,
        "y": 440,
        "wires": [
            []
        ]
    }
]